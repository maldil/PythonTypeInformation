[{"lineNumber": 43, "col_offset": 0, "nodeName": "tukeylambda_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "tukeylambda_kurtosis", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_tukeylambda_var_pc", "type": "List[float]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "_tukeylambda_var_qc", "type": "List[float]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_tukeylambda_var_p", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "_tukeylambda_var_q", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "_tukeylambda_kurt_pc", "type": "List[float]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "_tukeylambda_kurt_qc", "type": "List[float]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "_tukeylambda_kurt_p", "type": "Any"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "_tukeylambda_kurt_q", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "poly1d", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "poly1d", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "shp", "type": "Tuple[int, ...]"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "lam", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "threshold", "type": "float"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "neghalf_mask", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "small", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "reg", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "nan", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "shp", "type": "Tuple[int, ...]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "poly1d", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "poly1d", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "shp", "type": "Tuple[int, ...]"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "lam", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "threshold", "type": "float"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "negqrtr_mask", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "small", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "reg", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "nan", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "shp", "type": "Tuple[int, ...]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "_tukeylambda_var_pc", "type": "List[float]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "_tukeylambda_var_qc", "type": "List[float]"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "lam", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "astype", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "float64", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "lam", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "lam", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "threshold", "type": "float"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "lam", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "lam", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "lam", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "size", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "size", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "_tukeylambda_kurt_pc", "type": "List[float]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "_tukeylambda_kurt_qc", "type": "List[float]"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "lam", "type": "Any"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "astype", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "float64", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "lam", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "lam", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "threshold", "type": "float"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "lam", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "lam", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "lam", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "size", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "numer", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "denom", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "abs", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "lam", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "neghalf_mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "small", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "reg", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "abs", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "lam", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "negqrtr_mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "small", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "reg", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "atleast_1d", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "neghalf_mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "_tukeylambda_var_p", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "small", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "_tukeylambda_var_q", "type": "Any"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "small", "type": "Any"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "atleast_1d", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "low_mask", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "negqrtr_mask", "type": "Any"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "small_mask", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "_tukeylambda_kurt_p", "type": "Any"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "small", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "_tukeylambda_kurt_q", "type": "Any"}, {"lineNumber": 189, "col_offset": 73, "nodeName": "small", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "reg_mask", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "numer", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "denom", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "reg", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "beta", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "beta", "type": "Any"}, {"lineNumber": 193, "col_offset": 41, "nodeName": "beta", "type": "Any"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "reg", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "reg", "type": "Any"}, {"lineNumber": 191, "col_offset": 61, "nodeName": "reg", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "reg", "type": "Any"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "reg", "type": "Any"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "reg", "type": "Any"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "reg", "type": "Any"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "reg", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "reg", "type": "Any"}]