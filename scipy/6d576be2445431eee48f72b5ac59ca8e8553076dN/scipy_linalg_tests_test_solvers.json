[{"lineNumber": 15, "col_offset": 0, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_solve_continuous_are", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 0, "nodeName": "test_solve_discrete_are", "type": "Callable[[], Any]"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "test_solve_generalized_continuous_are", "type": "Callable[[], Any]"}, {"lineNumber": 589, "col_offset": 0, "nodeName": "test_solve_generalized_discrete_are", "type": "Callable[[], Any]"}, {"lineNumber": 657, "col_offset": 0, "nodeName": "test_are_validate_args", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "mat6", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "mat15", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "mat18", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "mat19", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "mat20", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "cases", "type": "List[Union[Tuple[Any, numpy.ndarray, Any, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, Any, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, str], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, None], Tuple[numpy.ndarray, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, float, None], Tuple[Any, Any, Any, Any, str], Tuple[numpy.ndarray, Any, Any, float, None], Tuple[Any, Any, Any, int, str]]]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "min_decimal", "type": "Tuple[int, int, int, int, int, int, None, int, int, int, int, None, int, int, int, int, None, int, None, None]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[Any, Any, numpy.ndarray, numpy.ndarray, None], Tuple[Any, Any, Any, numpy.ndarray, None]]]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "min_decimal", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "B", "type": "numpy.ndarray"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "Q", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "R", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "cases", "type": "List[Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "min_decimal", "type": "Tuple[int, int]"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None, Any, None]]]"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "min_decimal", "type": "Tuple[int, int, int]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "cases", "type": "List[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sq", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, str], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[numpy.ndarray, Any, Any, Any, None], Tuple[Any, Any, Any, int, str], Tuple[Any, Any, Any, Any, str], Tuple[numpy.ndarray, Any, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, None], Tuple[Any, numpy.ndarray, Any, int, None], Tuple[numpy.ndarray, Any, Any, float, None], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, float, None]]"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, str], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[numpy.ndarray, Any, Any, Any, None], Tuple[Any, Any, Any, int, str], Tuple[Any, Any, Any, Any, str], Tuple[numpy.ndarray, Any, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, None], Tuple[Any, numpy.ndarray, Any, int, None], Tuple[numpy.ndarray, Any, Any, float, None], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, float, None]]"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "cases", "type": "List[Union[Tuple[Any, numpy.ndarray, Any, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, Any, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, str], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, None], Tuple[numpy.ndarray, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, float, None], Tuple[Any, Any, Any, Any, str], Tuple[numpy.ndarray, Any, Any, float, None], Tuple[Any, Any, Any, int, str]]]"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[Any, Any, numpy.ndarray, numpy.ndarray, None]]"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[Any, Any, numpy.ndarray, numpy.ndarray, None]]"}, {"lineNumber": 527, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[Any, Any, numpy.ndarray, numpy.ndarray, None], Tuple[Any, Any, Any, numpy.ndarray, None]]]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "triu", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "LinAlgError", "type": "Any"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 536, "col_offset": 53, "nodeName": "A", "type": "Any"}, {"lineNumber": 536, "col_offset": 56, "nodeName": "B", "type": "numpy.ndarray"}, {"lineNumber": 536, "col_offset": 59, "nodeName": "Q", "type": "Any"}, {"lineNumber": 536, "col_offset": 62, "nodeName": "R", "type": "Any"}, {"lineNumber": 575, "col_offset": 41, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 585, "col_offset": 13, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 585, "col_offset": 31, "nodeName": "cases", "type": "List[Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]]"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 636, "col_offset": 41, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, Any, None, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]]"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, Any, None, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]]"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 653, "col_offset": 31, "nodeName": "cases", "type": "List[Union[Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None, Any, None]]]"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "sq", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "sq", "type": "Any"}, {"lineNumber": 671, "col_offset": 12, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "nsym", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "sing", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "sq", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "nm", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "sq", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 758, "col_offset": 20, "nodeName": "cases", "type": "List[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "load", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "filename", "type": "str"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "solve_continuous_lyapunov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "sq", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "solve_continuous_lyapunov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "sq", "type": "Any"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "solve_continuous_lyapunov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "sq", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "solve_continuous_lyapunov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "q", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 74, "nodeName": "q", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "solve_discrete_lyapunov", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "q", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "TestSolveLyapunov"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "q", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "r", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "knownfailure", "type": "Optional[str]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "q", "type": "Any"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "r", "type": "Any"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "q", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "_test_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, int, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, str], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[numpy.ndarray, Any, Any, Any, None], Tuple[Any, Any, Any, int, str], Tuple[Any, Any, Any, Any, str], Tuple[numpy.ndarray, Any, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, float, None], Tuple[Any, numpy.ndarray, Any, int, None], Tuple[numpy.ndarray, Any, Any, float, None], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, float, None]]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "q", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "r", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "knownfailure", "type": "None"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 520, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 520, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 520, "col_offset": 37, "nodeName": "q", "type": "Any"}, {"lineNumber": 520, "col_offset": 40, "nodeName": "r", "type": "Any"}, {"lineNumber": 521, "col_offset": 45, "nodeName": "q", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 525, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "_test_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 528, "col_offset": 22, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, Any, None], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, None], Tuple[numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, None], Tuple[Any, Any, Any, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, None], Tuple[Any, Any, numpy.ndarray, numpy.ndarray, None]]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "full_like", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "A", "type": "Any"}, {"lineNumber": 534, "col_offset": 30, "nodeName": "diag", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "q", "type": "Any"}, {"lineNumber": 575, "col_offset": 17, "nodeName": "r", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "e", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "knownfailure", "type": "None"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 33, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 579, "col_offset": 39, "nodeName": "q", "type": "Any"}, {"lineNumber": 579, "col_offset": 42, "nodeName": "r", "type": "Any"}, {"lineNumber": 579, "col_offset": 45, "nodeName": "e", "type": "numpy.ndarray"}, {"lineNumber": 579, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 580, "col_offset": 68, "nodeName": "q", "type": "Any"}, {"lineNumber": 581, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "_test_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 586, "col_offset": 22, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "q", "type": "Any"}, {"lineNumber": 636, "col_offset": 17, "nodeName": "r", "type": "Any"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "e", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 636, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 636, "col_offset": 26, "nodeName": "knownfailure", "type": "None"}, {"lineNumber": 640, "col_offset": 12, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 640, "col_offset": 34, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 640, "col_offset": 37, "nodeName": "q", "type": "Any"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "r", "type": "Any"}, {"lineNumber": 640, "col_offset": 43, "nodeName": "e", "type": "Any"}, {"lineNumber": 640, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "e", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 645, "col_offset": 68, "nodeName": "q", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 651, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "_test_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "case", "type": "Union[Tuple[Any, Any, Any, Any, None, Any, None], Tuple[numpy.ndarray, numpy.ndarray, Any, Any, numpy.ndarray, Any, None]]"}, {"lineNumber": 660, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 662, "col_offset": 40, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 669, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 671, "col_offset": 18, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 671, "col_offset": 40, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 679, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "eye", "type": "Any"}, {"lineNumber": 681, "col_offset": 18, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 681, "col_offset": 40, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "full", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "sing", "type": "Any"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 40, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 692, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 692, "col_offset": 34, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 692, "col_offset": 56, "nodeName": "sq", "type": "Any"}, {"lineNumber": 692, "col_offset": 60, "nodeName": "sq", "type": "Any"}, {"lineNumber": 692, "col_offset": 64, "nodeName": "sq", "type": "Any"}, {"lineNumber": 692, "col_offset": 68, "nodeName": "sing", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "full", "type": "Any"}, {"lineNumber": 695, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 696, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "solve_continuous_are", "type": "Callable[..., Any]"}, {"lineNumber": 697, "col_offset": 40, "nodeName": "solve_discrete_are", "type": "Callable[..., Any]"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "solve_sylvester", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 754, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 754, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 754, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 755, "col_offset": 63, "nodeName": "c", "type": "Any"}, {"lineNumber": 758, "col_offset": 20, "nodeName": "self", "type": "TestSolveSylvester"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "solve_sylvester", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 765, "col_offset": 28, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 765, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 766, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 20, "col_offset": 60, "nodeName": "__file__", "type": "str"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "T", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "eye", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "method", "type": "Any"}, {"lineNumber": 103, "col_offset": 67, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 75, "nodeName": "q", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "check_continuous_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "check_discrete_case", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "check_discrete_case", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "check_discrete_case", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "diag", "type": "Any"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "block_diag", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "mat6", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "mat6", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "mat6", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "mat6", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "block_diag", "type": "Any"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 242, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "diag", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "mat15", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "mat15", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "mat15", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "mat15", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 266, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "diag", "type": "Any"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "flipud", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "T", "type": "Any"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "mat18", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "mat18", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "mat18", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 45, "nodeName": "mat18", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 9, "nodeName": "mat19", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "mat19", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "mat19", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "mat19", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "mat20", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "mat20", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "mat20", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 45, "nodeName": "mat20", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 303, "col_offset": 28, "nodeName": "solve", "type": "Any"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "res", "type": "Any"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "dec", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "min_decimal", "type": "Tuple[int, int, int, int, int, int, None, int, int, int, int, None, int, int, int, int, None, int, None, None]"}, {"lineNumber": 327, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 335, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 345, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 353, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 359, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 362, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 371, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 378, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 379, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 383, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 395, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 398, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 410, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 418, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 435, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 436, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "kron", "type": "Any"}, {"lineNumber": 440, "col_offset": 9, "nodeName": "kron", "type": "Any"}, {"lineNumber": 441, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "diag", "type": "Any"}, {"lineNumber": 470, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 476, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 482, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 487, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 491, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 492, "col_offset": 9, "nodeName": "diag", "type": "Any"}, {"lineNumber": 493, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 496, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "flipud", "type": "Any"}, {"lineNumber": 498, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 499, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "dot", "type": "Any"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 525, "col_offset": 53, "nodeName": "res", "type": "Any"}, {"lineNumber": 525, "col_offset": 67, "nodeName": "dec", "type": "int"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "min_decimal", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 549, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 556, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 564, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 567, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 581, "col_offset": 41, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "solve", "type": "Any"}, {"lineNumber": 582, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 583, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 583, "col_offset": 53, "nodeName": "res", "type": "Any"}, {"lineNumber": 583, "col_offset": 67, "nodeName": "dec", "type": "int"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "min_decimal", "type": "Tuple[int, int]"}, {"lineNumber": 595, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 598, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 603, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 608, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 614, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 615, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 616, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 619, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 623, "col_offset": 9, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 625, "col_offset": 9, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 626, "col_offset": 9, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 628, "col_offset": 9, "nodeName": "mat20170120", "type": "Dict[Any, Any]"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "eye", "type": "Any"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 647, "col_offset": 20, "nodeName": "solve", "type": "Any"}, {"lineNumber": 651, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 651, "col_offset": 53, "nodeName": "res", "type": "Any"}, {"lineNumber": 651, "col_offset": 67, "nodeName": "dec", "type": "int"}, {"lineNumber": 654, "col_offset": 28, "nodeName": "min_decimal", "type": "Tuple[int, int, int]"}, {"lineNumber": 660, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 663, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 663, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 663, "col_offset": 41, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 664, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 664, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 664, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 664, "col_offset": 49, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 665, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 665, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 665, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 665, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 665, "col_offset": 53, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 666, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 666, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 666, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 666, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 666, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 666, "col_offset": 57, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 669, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 672, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 672, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 672, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 672, "col_offset": 45, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 673, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 673, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 673, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 673, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 673, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 673, "col_offset": 57, "nodeName": "sq", "type": "Any"}, {"lineNumber": 673, "col_offset": 61, "nodeName": "nsq", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 674, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 674, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 674, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 674, "col_offset": 60, "nodeName": "sq", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 675, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 675, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 675, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 675, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 676, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 676, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 676, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 676, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 676, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 676, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 41, "nodeName": "sym", "type": "Any"}, {"lineNumber": 682, "col_offset": 46, "nodeName": "sym", "type": "Any"}, {"lineNumber": 682, "col_offset": 51, "nodeName": "nsym", "type": "Any"}, {"lineNumber": 682, "col_offset": 57, "nodeName": "sym", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 683, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 683, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 683, "col_offset": 41, "nodeName": "sym", "type": "Any"}, {"lineNumber": 683, "col_offset": 46, "nodeName": "sym", "type": "Any"}, {"lineNumber": 683, "col_offset": 51, "nodeName": "sym", "type": "Any"}, {"lineNumber": 683, "col_offset": 56, "nodeName": "nsym", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 690, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 690, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 690, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 690, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 690, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 690, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 690, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 690, "col_offset": 57, "nodeName": "sing", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 695, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 698, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 698, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 698, "col_offset": 41, "nodeName": "nm", "type": "Any"}, {"lineNumber": 698, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 698, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 698, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 699, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 699, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 699, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 699, "col_offset": 45, "nodeName": "nm", "type": "Any"}, {"lineNumber": 699, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 699, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 700, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 700, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 700, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 700, "col_offset": 49, "nodeName": "nm", "type": "Any"}, {"lineNumber": 700, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 701, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 701, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 701, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 701, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 701, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 701, "col_offset": 53, "nodeName": "nm", "type": "Any"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 702, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 702, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 702, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 702, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 702, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 702, "col_offset": 57, "nodeName": "nm", "type": "Any"}, {"lineNumber": 703, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 703, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 703, "col_offset": 38, "nodeName": "x", "type": "Callable[..., Any]"}, {"lineNumber": 703, "col_offset": 41, "nodeName": "sq", "type": "Any"}, {"lineNumber": 703, "col_offset": 45, "nodeName": "sq", "type": "Any"}, {"lineNumber": 703, "col_offset": 49, "nodeName": "sq", "type": "Any"}, {"lineNumber": 703, "col_offset": 53, "nodeName": "sq", "type": "Any"}, {"lineNumber": 703, "col_offset": 57, "nodeName": "sq", "type": "Any"}, {"lineNumber": 703, "col_offset": 61, "nodeName": "nm", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 711, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 715, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 730, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 733, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 734, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 736, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 737, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 738, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 740, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 741, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 745, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 748, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "check_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "T", "type": "Any"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "dot", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "TestSolveLyapunov"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "TestSolveLyapunov"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "TestSolveLyapunov"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "TestSolveLyapunov"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "case", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray], Tuple[numpy.ndarray, Any], Tuple[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "block_diag", "type": "Any"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 242, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "eye", "type": "Any"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "eye", "type": "Any"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "dot", "type": "Any"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 303, "col_offset": 48, "nodeName": "r", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "ind", "type": "int"}, {"lineNumber": 327, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 9, "nodeName": "eye", "type": "Any"}, {"lineNumber": 407, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 430, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 435, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "eye", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "diag", "type": "Any"}, {"lineNumber": 440, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "eye", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 441, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 482, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 487, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 496, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "eye", "type": "Any"}, {"lineNumber": 498, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 523, "col_offset": 70, "nodeName": "dot", "type": "Any"}, {"lineNumber": 523, "col_offset": 76, "nodeName": "a", "type": "Any"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 40, "nodeName": "ind", "type": "int"}, {"lineNumber": 543, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 577, "col_offset": 32, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 580, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 582, "col_offset": 34, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 582, "col_offset": 48, "nodeName": "r", "type": "Any"}, {"lineNumber": 583, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "ind", "type": "int"}, {"lineNumber": 595, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 598, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 608, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 619, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 638, "col_offset": 32, "nodeName": "knownfailure", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "shape", "type": "Union[Any, Tuple[int, ...]]"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 645, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 646, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 647, "col_offset": 26, "nodeName": "r", "type": "Any"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "T", "type": "Any"}, {"lineNumber": 651, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 40, "nodeName": "ind", "type": "int"}, {"lineNumber": 674, "col_offset": 49, "nodeName": "eye", "type": "Any"}, {"lineNumber": 675, "col_offset": 53, "nodeName": "eye", "type": "Any"}, {"lineNumber": 676, "col_offset": 57, "nodeName": "eye", "type": "Any"}, {"lineNumber": 679, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 734, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 737, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 738, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 748, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 755, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 755, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 755, "col_offset": 49, "nodeName": "dot", "type": "Any"}, {"lineNumber": 755, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 755, "col_offset": 59, "nodeName": "b", "type": "Any"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "self", "type": "TestSolveSylvester"}, {"lineNumber": 759, "col_offset": 28, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 37, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 46, "nodeName": "case", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "T", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "dot", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "T", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "conj", "type": "Any"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "dot", "type": "Any"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "dot", "type": "Any"}, {"lineNumber": 522, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "solve", "type": "Any"}, {"lineNumber": 523, "col_offset": 54, "nodeName": "T", "type": "Any"}, {"lineNumber": 523, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 580, "col_offset": 29, "nodeName": "dot", "type": "Any"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "e", "type": "numpy.ndarray"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "T", "type": "Any"}, {"lineNumber": 580, "col_offset": 56, "nodeName": "dot", "type": "Any"}, {"lineNumber": 580, "col_offset": 62, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 581, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 582, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 582, "col_offset": 52, "nodeName": "conj", "type": "Any"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 645, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "dot", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 645, "col_offset": 41, "nodeName": "T", "type": "Any"}, {"lineNumber": 645, "col_offset": 56, "nodeName": "dot", "type": "Any"}, {"lineNumber": 645, "col_offset": 62, "nodeName": "e", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "dot", "type": "Any"}, {"lineNumber": 648, "col_offset": 27, "nodeName": "dot", "type": "Any"}, {"lineNumber": 674, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 675, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 679, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "dot", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "block_diag", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "r", "type": "Any"}, {"lineNumber": 580, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 582, "col_offset": 52, "nodeName": "out_fact", "type": "Any"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 645, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "T", "type": "Any"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "dot", "type": "Any"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "T", "type": "Any"}, {"lineNumber": 647, "col_offset": 43, "nodeName": "dot", "type": "Any"}, {"lineNumber": 647, "col_offset": 49, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 648, "col_offset": 27, "nodeName": "T", "type": "Any"}, {"lineNumber": 648, "col_offset": 42, "nodeName": "dot", "type": "Any"}, {"lineNumber": 648, "col_offset": 48, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "conj", "type": "Any"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "conj", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "conj", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "diag", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "conj", "type": "Any"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "conj", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "conj", "type": "Any"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "dot", "type": "Any"}, {"lineNumber": 523, "col_offset": 54, "nodeName": "conj", "type": "Any"}, {"lineNumber": 580, "col_offset": 14, "nodeName": "conj", "type": "Any"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "conj", "type": "Any"}, {"lineNumber": 645, "col_offset": 14, "nodeName": "conj", "type": "Any"}, {"lineNumber": 645, "col_offset": 41, "nodeName": "conj", "type": "Any"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 647, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 648, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "s", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "a", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "T", "type": "Any"}, {"lineNumber": 523, "col_offset": 43, "nodeName": "dot", "type": "Any"}, {"lineNumber": 523, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 523, "col_offset": 54, "nodeName": "b", "type": "Any"}, {"lineNumber": 580, "col_offset": 14, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "e", "type": "numpy.ndarray"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "conj", "type": "Any"}, {"lineNumber": 645, "col_offset": 14, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 645, "col_offset": 41, "nodeName": "e", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "conj", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "conj", "type": "Any"}, {"lineNumber": 648, "col_offset": 27, "nodeName": "conj", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "e", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "a", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 648, "col_offset": 27, "nodeName": "b", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "conj", "type": "Any"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "b", "type": "Any"}]