[{"lineNumber": 11, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "miniter", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "table_val", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "valmath", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "expected_val", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "exact_integral", "type": "float"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "numeric_integral", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "exact_integral", "type": "float"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "numeric_integral", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "y_expected", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ys_expected", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "_", "type": "None"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "fixed_quad", "type": "Callable[..., Tuple[Any, None]]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "got", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "expected", "type": "float"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "_", "type": "None"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "fixed_quad", "type": "Callable[..., Tuple[Any, None]]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "got", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "err", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "quadrature", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "myfunc", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "pi", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "table_val", "type": "float"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "err", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "quadrature", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "myfunc", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "pi", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "table_val", "type": "float"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "err", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "quadrature", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "myfunc", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "pi", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "table_val", "type": "float"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "romberg", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "myfunc", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "pi", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "table_val", "type": "float"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "romberg", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "myfunc", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "pi", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "table_val", "type": "float"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "cos", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "romb", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "val2", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "err", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "quad", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "val2", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "val3", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "val3", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "romberg", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "sin", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "valmath", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "expected_val", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "wts", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "wts", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "wts", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "wts", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "dot", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "wts", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "numeric_integral", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "exact_integral", "type": "float"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "wts", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "errcoff", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "newton_cotes", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "dot", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "wts", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "numeric_integral", "type": "Any"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "exact_integral", "type": "float"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "y_expected", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "axis", "type": "int"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "axis", "type": "int"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "y_expected", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "ys_expected", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "n", "type": "int"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "n", "type": "int"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "pi", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "pi", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "pi", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "err", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "quadrature", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "myfunc", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "pi", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "val", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "table_val", "type": "float"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "pi", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "pi", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "pi", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "romb", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "min", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "max", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "AccuracyWarning", "type": "Type[scipy.integrate.quadrature.AccuracyWarning]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "romberg", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "math", "type": "module"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "simps", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "y_expected", "type": "List[float]"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "cumtrapz", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "y_expected", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "cos", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "cos", "type": "Any"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "miniter", "type": "int"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "err", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "cos", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "min", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "max", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "axis", "type": "int"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "axis", "type": "int"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "y_int", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "axis", "type": "int"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "cos", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "cos", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "cos", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "z", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "z", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "z", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "sin", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "sin", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "sin", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "z", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "sin", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "sin", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "sin", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "axis", "type": "int"}]