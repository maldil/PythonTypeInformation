[{"lineNumber": 19, "col_offset": 0, "nodeName": "data_path", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test1", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test2", "type": "str"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "test3", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test4", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test5", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test6", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test7", "type": "str"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "test8", "type": "str"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test9", "type": "str"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test10", "type": "str"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test11", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "test_quoted_nominal", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test_quoted_nominal_spaces", "type": "str"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "expect4_data", "type": "List[Union[Tuple[float, float, float, float, str], Tuple[int, int, int, int, str]]]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "expected_types", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "missing", "type": "str"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "data_path", "type": "str"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "data_path", "type": "str"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "data_path", "type": "str"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "data_path", "type": "str"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "data_path", "type": "str"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 19, "col_offset": 34, "nodeName": "__file__", "type": "str"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "i", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "nodata_filename", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "relational", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "expected", "type": "List[numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "relational", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "dtype_instance", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "float_", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "float_", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "nan", "type": "Any"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "test4", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "test5", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "test6", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "expected_types", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "f2", "type": "TextIO"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "data2", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "missing", "type": "str"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "data_path", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "nodata_filename", "type": "str"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "ParseArffError", "type": "Type[scipy.io.arff.arffread.ParseArffError]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "badtype_read", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "read_dateheader_unsupported", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "test7", "type": "str"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 61, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 245, "col_offset": 63, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "ParseArffError", "type": "Type[scipy.io.arff.arffread.ParseArffError]"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "test8", "type": "str"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "test9", "type": "str"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "test10", "type": "str"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 40, "nodeName": "test_quoted_nominal", "type": "str"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "age", "type": "Any"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 365, "col_offset": 45, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 375, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 40, "nodeName": "test_quoted_nominal_spaces", "type": "str"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "age", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 385, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 412, "col_offset": 48, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "types", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "data1", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "data2", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "data1", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "data2", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "data1", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "test1", "type": "str"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "data1", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "data2", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "test2", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "test7", "type": "str"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "float_", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "float_", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "dtype_instance", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 385, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 411, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "meta", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "test3", "type": "str"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "_", "type": "Optional[str]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "test8", "type": "str"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "_", "type": "Optional[str]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "relational", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "expected", "type": "List[numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "relational", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 411, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "read", "type": "Callable"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "i", "type": "str"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "i", "type": "str"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 293, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 316, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "expect4_data", "type": "List[Union[Tuple[float, float, float, float, str], Tuple[int, int, int, int, str]]]"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "j", "type": "int"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "j", "type": "int"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "f2", "type": "TextIO"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "meta", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "meta", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "self", "type": "TestRelationalAttributeLong"}]