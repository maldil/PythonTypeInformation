[{"lineNumber": 795, "col_offset": 0, "nodeName": "standardize_bounds", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 807, "col_offset": 0, "nodeName": "standardize_constraints", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "MINIMIZE_METHODS", "type": "List[str]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 804, "col_offset": 11, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "all_constraint_types", "type": "Tuple[Any, Any, Type[Dict[Any, Any]]]"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "new_constraint_types", "type": "Tuple[Any, Any]"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 827, "col_offset": 11, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 481, "col_offset": 20, "nodeName": "x0", "type": "Any"}, {"lineNumber": 482, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 488, "col_offset": 7, "nodeName": "method", "type": "Any"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 497, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "meth", "type": "str"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 502, "col_offset": 7, "nodeName": "options", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 541, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "jac", "type": "Any"}, {"lineNumber": 562, "col_offset": 7, "nodeName": "tol", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 581, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 589, "col_offset": 7, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 592, "col_offset": 7, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 595, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 757, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 757, "col_offset": 16, "nodeName": "method", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "meth", "type": "str"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "meth", "type": "Any"}, {"lineNumber": 761, "col_offset": 7, "nodeName": "options", "type": "Any"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "options", "type": "Dict[str, int]"}, {"lineNumber": 764, "col_offset": 7, "nodeName": "tol", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "options", "type": "Dict[Union[Any, str], Union[Any, int]]"}, {"lineNumber": 775, "col_offset": 7, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 797, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 809, "col_offset": 28, "nodeName": "NonlinearConstraint", "type": "Any"}, {"lineNumber": 809, "col_offset": 49, "nodeName": "LinearConstraint", "type": "Any"}, {"lineNumber": 809, "col_offset": 67, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "all_constraint_types", "type": "Tuple[Any, Any, Type[Dict[Any, Any]]]"}, {"lineNumber": 811, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 811, "col_offset": 18, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "all_constraint_types", "type": "Tuple[Any, Any, Type[Dict[Any, Any]]]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 813, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 813, "col_offset": 23, "nodeName": "constraints", "type": "Union[List[Any], Any]"}, {"lineNumber": 815, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "typecodes", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "lower", "type": "Union[Callable[[], str], Any]"}, {"lineNumber": 506, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 506, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 506, "col_offset": 60, "nodeName": "jac", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 508, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 510, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 511, "col_offset": 66, "nodeName": "hess", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 515, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 519, "col_offset": 46, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 525, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "any", "type": "Any"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 528, "col_offset": 7, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 530, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 532, "col_offset": 32, "nodeName": "callback", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 533, "col_offset": 62, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 538, "col_offset": 13, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 543, "col_offset": 9, "nodeName": "jac", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "fun", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 563, "col_offset": 23, "nodeName": "options", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 567, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 571, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 574, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 585, "col_offset": 22, "nodeName": "fun", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 590, "col_offset": 17, "nodeName": "standardize_bounds", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 590, "col_offset": 36, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 590, "col_offset": 44, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 590, "col_offset": 48, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 593, "col_offset": 22, "nodeName": "standardize_constraints", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 593, "col_offset": 46, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 593, "col_offset": 59, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 63, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "_minimize_neldermead", "type": "Any"}, {"lineNumber": 596, "col_offset": 36, "nodeName": "fun", "type": "Any"}, {"lineNumber": 596, "col_offset": 41, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 45, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 596, "col_offset": 51, "nodeName": "callback", "type": "Any"}, {"lineNumber": 597, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 754, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 754, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "lower", "type": "Any"}, {"lineNumber": 765, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 765, "col_offset": 23, "nodeName": "options", "type": "Union[Dict[str, int], Any]"}, {"lineNumber": 769, "col_offset": 31, "nodeName": "tol", "type": "Any"}, {"lineNumber": 776, "col_offset": 15, "nodeName": "method", "type": "Any"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "fun", "type": "Any"}, {"lineNumber": 777, "col_offset": 9, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 801, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 812, "col_offset": 23, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 816, "col_offset": 15, "nodeName": "con", "type": "Any"}, {"lineNumber": 816, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 816, "col_offset": 32, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "con", "type": "Any"}, {"lineNumber": 821, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 482, "col_offset": 7, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 507, "col_offset": 68, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 512, "col_offset": 68, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 519, "col_offset": 38, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 522, "col_offset": 35, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "any", "type": "Any"}, {"lineNumber": 522, "col_offset": 64, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 523, "col_offset": 65, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 54, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 529, "col_offset": 49, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 533, "col_offset": 54, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "options", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 537, "col_offset": 67, "nodeName": "method", "type": "Union[str, Any]"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "MemoizeJac", "type": "Any"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "fun", "type": "Any"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "fun", "type": "Any"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 565, "col_offset": 40, "nodeName": "tol", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "tol", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 568, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 570, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 573, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 575, "col_offset": 38, "nodeName": "tol", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 577, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 578, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 579, "col_offset": 46, "nodeName": "tol", "type": "Any"}, {"lineNumber": 585, "col_offset": 36, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 585, "col_offset": 46, "nodeName": "jac", "type": "Any"}, {"lineNumber": 585, "col_offset": 56, "nodeName": "hess", "type": "Any"}, {"lineNumber": 585, "col_offset": 68, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 586, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 586, "col_offset": 49, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "callback", "type": "Any"}, {"lineNumber": 587, "col_offset": 43, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 596, "col_offset": 63, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 598, "col_offset": 15, "nodeName": "_minimize_powell", "type": "Any"}, {"lineNumber": 598, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 598, "col_offset": 37, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 598, "col_offset": 41, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 598, "col_offset": 47, "nodeName": "callback", "type": "Any"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "method", "type": "Any"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 766, "col_offset": 48, "nodeName": "options", "type": "Dict[Union[Any, str], Union[Any, int]]"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 768, "col_offset": 54, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Union[Any, int]]"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 776, "col_offset": 32, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 776, "col_offset": 46, "nodeName": "bracket", "type": "Any"}, {"lineNumber": 776, "col_offset": 62, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 776, "col_offset": 72, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "_minimize_scalar_brent", "type": "Any"}, {"lineNumber": 778, "col_offset": 38, "nodeName": "fun", "type": "Any"}, {"lineNumber": 778, "col_offset": 43, "nodeName": "bracket", "type": "Any"}, {"lineNumber": 778, "col_offset": 52, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "disp", "type": "Optional[Any]"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 798, "col_offset": 26, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 798, "col_offset": 34, "nodeName": "Bounds", "type": "Any"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "lb", "type": "Any"}, {"lineNumber": 799, "col_offset": 16, "nodeName": "ub", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "old_bound_to_new", "type": "Any"}, {"lineNumber": 799, "col_offset": 38, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "Bounds", "type": "Any"}, {"lineNumber": 800, "col_offset": 28, "nodeName": "lb", "type": "Any"}, {"lineNumber": 800, "col_offset": 32, "nodeName": "ub", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 802, "col_offset": 30, "nodeName": "Bounds", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 821, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 821, "col_offset": 37, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 822, "col_offset": 26, "nodeName": "con", "type": "Any"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "new_constraint_types", "type": "Tuple[Any, Any]"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "old_constraints", "type": "Any"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 10, "nodeName": "jac", "type": "Any"}, {"lineNumber": 547, "col_offset": 17, "nodeName": "FD_METHODS", "type": "Any"}, {"lineNumber": 548, "col_offset": 10, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "jac", "type": "str"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 598, "col_offset": 59, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "_minimize_cg", "type": "Any"}, {"lineNumber": 600, "col_offset": 28, "nodeName": "fun", "type": "Any"}, {"lineNumber": 600, "col_offset": 33, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 600, "col_offset": 43, "nodeName": "jac", "type": "Any"}, {"lineNumber": 600, "col_offset": 48, "nodeName": "callback", "type": "Any"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 771, "col_offset": 38, "nodeName": "tol", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 773, "col_offset": 39, "nodeName": "tol", "type": "Any"}, {"lineNumber": 778, "col_offset": 60, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 780, "col_offset": 11, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 785, "col_offset": 15, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 786, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 786, "col_offset": 22, "nodeName": "disp", "type": "Optional[Any]"}, {"lineNumber": 786, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 788, "col_offset": 15, "nodeName": "_minimize_scalar_bounded", "type": "Any"}, {"lineNumber": 788, "col_offset": 40, "nodeName": "fun", "type": "Any"}, {"lineNumber": 788, "col_offset": 45, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 788, "col_offset": 53, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 789, "col_offset": 9, "nodeName": "meth", "type": "Union[Any, str]"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "new_bounds_to_old", "type": "Any"}, {"lineNumber": 803, "col_offset": 39, "nodeName": "lb", "type": "Any"}, {"lineNumber": 803, "col_offset": 50, "nodeName": "ub", "type": "Any"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 817, "col_offset": 30, "nodeName": "con", "type": "Any"}, {"lineNumber": 817, "col_offset": 35, "nodeName": "new_constraint_types", "type": "Tuple[Any, Any]"}, {"lineNumber": 818, "col_offset": 16, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "old_constraint_to_new", "type": "Any"}, {"lineNumber": 818, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 818, "col_offset": 58, "nodeName": "con", "type": "Any"}, {"lineNumber": 823, "col_offset": 34, "nodeName": "new_constraint_to_old", "type": "Any"}, {"lineNumber": 823, "col_offset": 56, "nodeName": "con", "type": "Any"}, {"lineNumber": 823, "col_offset": 61, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 824, "col_offset": 16, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 824, "col_offset": 33, "nodeName": "old_constraints", "type": "Any"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "jac", "type": "None"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "jac", "type": "None"}, {"lineNumber": 600, "col_offset": 60, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "_minimize_bfgs", "type": "Any"}, {"lineNumber": 602, "col_offset": 30, "nodeName": "fun", "type": "Any"}, {"lineNumber": 602, "col_offset": 35, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 602, "col_offset": 39, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 602, "col_offset": 45, "nodeName": "jac", "type": "Any"}, {"lineNumber": 602, "col_offset": 50, "nodeName": "callback", "type": "Any"}, {"lineNumber": 603, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Union[Any, int]]"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "options", "type": "Dict[Union[Any, str], Union[Any, int]]"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 785, "col_offset": 15, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 788, "col_offset": 61, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "_minimize_scalar_golden", "type": "Any"}, {"lineNumber": 790, "col_offset": 39, "nodeName": "fun", "type": "Any"}, {"lineNumber": 790, "col_offset": 44, "nodeName": "bracket", "type": "Any"}, {"lineNumber": 790, "col_offset": 53, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 803, "col_offset": 39, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 803, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 803, "col_offset": 61, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 818, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "constraints", "type": "List[Any]"}, {"lineNumber": 825, "col_offset": 35, "nodeName": "old_constraints", "type": "Any"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "jac", "type": "Any"}, {"lineNumber": 602, "col_offset": 62, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "_minimize_newtoncg", "type": "Any"}, {"lineNumber": 604, "col_offset": 34, "nodeName": "fun", "type": "Any"}, {"lineNumber": 604, "col_offset": 39, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 43, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 604, "col_offset": 49, "nodeName": "jac", "type": "Any"}, {"lineNumber": 604, "col_offset": 54, "nodeName": "hess", "type": "Any"}, {"lineNumber": 604, "col_offset": 60, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 604, "col_offset": 67, "nodeName": "callback", "type": "Any"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 787, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 787, "col_offset": 38, "nodeName": "disp", "type": "Optional[Any]"}, {"lineNumber": 790, "col_offset": 61, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Union[Any, int]], Dict[str, int], Any]"}, {"lineNumber": 792, "col_offset": 47, "nodeName": "method", "type": "Any"}, {"lineNumber": 803, "col_offset": 61, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 554, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 554, "col_offset": 29, "nodeName": "jac", "type": "Any"}, {"lineNumber": 605, "col_offset": 36, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 607, "col_offset": 15, "nodeName": "_minimize_lbfgsb", "type": "Any"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 607, "col_offset": 41, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 607, "col_offset": 47, "nodeName": "jac", "type": "Any"}, {"lineNumber": 607, "col_offset": 52, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 609, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 608, "col_offset": 41, "nodeName": "callback", "type": "Any"}, {"lineNumber": 608, "col_offset": 53, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "_minimize_tnc", "type": "Any"}, {"lineNumber": 610, "col_offset": 29, "nodeName": "fun", "type": "Any"}, {"lineNumber": 610, "col_offset": 34, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 38, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 610, "col_offset": 44, "nodeName": "jac", "type": "Any"}, {"lineNumber": 610, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 612, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 610, "col_offset": 66, "nodeName": "callback", "type": "Any"}, {"lineNumber": 611, "col_offset": 31, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "_minimize_cobyla", "type": "Any"}, {"lineNumber": 613, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 613, "col_offset": 37, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 613, "col_offset": 41, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 613, "col_offset": 47, "nodeName": "constraints", "type": "Union[List[Any], Any]"}, {"lineNumber": 614, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 613, "col_offset": 62, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "_minimize_slsqp", "type": "Any"}, {"lineNumber": 615, "col_offset": 31, "nodeName": "fun", "type": "Any"}, {"lineNumber": 615, "col_offset": 36, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 615, "col_offset": 40, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 615, "col_offset": 46, "nodeName": "jac", "type": "Any"}, {"lineNumber": 615, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "constraints", "type": "Union[List[Any], Any]"}, {"lineNumber": 617, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 616, "col_offset": 53, "nodeName": "callback", "type": "Any"}, {"lineNumber": 616, "col_offset": 65, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "_minimize_trustregion_constr", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "fun", "type": "Any"}, {"lineNumber": 618, "col_offset": 49, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 618, "col_offset": 53, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 618, "col_offset": 59, "nodeName": "jac", "type": "Any"}, {"lineNumber": 618, "col_offset": 64, "nodeName": "hess", "type": "Any"}, {"lineNumber": 618, "col_offset": 70, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 619, "col_offset": 44, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 619, "col_offset": 52, "nodeName": "constraints", "type": "Union[List[Any], Any]"}, {"lineNumber": 621, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 620, "col_offset": 53, "nodeName": "callback", "type": "Any"}, {"lineNumber": 620, "col_offset": 65, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "_minimize_dogleg", "type": "Any"}, {"lineNumber": 622, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 622, "col_offset": 37, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 622, "col_offset": 41, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "jac", "type": "Any"}, {"lineNumber": 622, "col_offset": 52, "nodeName": "hess", "type": "Any"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 623, "col_offset": 41, "nodeName": "callback", "type": "Any"}, {"lineNumber": 623, "col_offset": 53, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "_minimize_trust_ncg", "type": "Any"}, {"lineNumber": 625, "col_offset": 35, "nodeName": "fun", "type": "Any"}, {"lineNumber": 625, "col_offset": 40, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 625, "col_offset": 44, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 625, "col_offset": 50, "nodeName": "jac", "type": "Any"}, {"lineNumber": 625, "col_offset": 55, "nodeName": "hess", "type": "Any"}, {"lineNumber": 625, "col_offset": 61, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 627, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 626, "col_offset": 44, "nodeName": "callback", "type": "Any"}, {"lineNumber": 626, "col_offset": 56, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "_minimize_trust_krylov", "type": "Any"}, {"lineNumber": 628, "col_offset": 38, "nodeName": "fun", "type": "Any"}, {"lineNumber": 628, "col_offset": 43, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 628, "col_offset": 47, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 628, "col_offset": 53, "nodeName": "jac", "type": "Any"}, {"lineNumber": 628, "col_offset": 58, "nodeName": "hess", "type": "Any"}, {"lineNumber": 628, "col_offset": 64, "nodeName": "hessp", "type": "Any"}, {"lineNumber": 630, "col_offset": 9, "nodeName": "meth", "type": "Union[str, Any]"}, {"lineNumber": 629, "col_offset": 47, "nodeName": "callback", "type": "Any"}, {"lineNumber": 629, "col_offset": 59, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "_minimize_trustregion_exact", "type": "Any"}, {"lineNumber": 631, "col_offset": 43, "nodeName": "fun", "type": "Any"}, {"lineNumber": 631, "col_offset": 48, "nodeName": "x0", "type": "numpy.ndarray"}, {"lineNumber": 631, "col_offset": 52, "nodeName": "args", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 631, "col_offset": 58, "nodeName": "jac", "type": "Any"}, {"lineNumber": 631, "col_offset": 63, "nodeName": "hess", "type": "Any"}, {"lineNumber": 634, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 632, "col_offset": 52, "nodeName": "callback", "type": "Any"}, {"lineNumber": 632, "col_offset": 64, "nodeName": "options", "type": "Union[Dict[Union[Any, str], Any], Dict[nothing, nothing], Any]"}, {"lineNumber": 634, "col_offset": 47, "nodeName": "method", "type": "Union[str, Any]"}]