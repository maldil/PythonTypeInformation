[{"lineNumber": 6, "col_offset": 16, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "custom_bounds", "type": "Tuple[List[float], List[float]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "global_optimum", "type": "List[List[float]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fglob", "type": "float"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "nfev", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "dimensions", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "N", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "N", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "N", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "N", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "self", "type": "OddSquare"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "d", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "pi", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "pi", "type": "Any"}]