[{"lineNumber": 14, "col_offset": 15, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "params", "type": "List[List[str]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "params", "type": "List[List[str]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "params", "type": "List[List[str]]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "params", "type": "List[List[int]]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "params", "type": "List[List[int]]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[int], List[Tuple[float, float]]]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "n_image", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "system", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "nfilt", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "nfilt", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "Resample"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "cos", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "welch", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "csd", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "periodogram", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "spectrogram", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "coherence", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "ma", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "na", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "mb", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "nb", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "product", "type": "Callable"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Convolve2D"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "Convolve2D"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "self", "type": "Convolve2D"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "ma", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "nb", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "FFTConvolve"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "self", "type": "FFTConvolve"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "ma", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "nb", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "n_kernel", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Convolve"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "LTI"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "lti", "type": "Type[scipy.signal.ltisys.lti]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "LTI"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "LTI"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "sin", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "lsim", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "system", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "u", "type": "Any"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "lsim2", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "system", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "u", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "step", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "system", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "impulse", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "system", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "bode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "system", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Upfirdn1D"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "self", "type": "Upfirdn1D"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Upfirdn2D"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "self", "type": "Upfirdn2D"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "self", "type": "Resample"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "self", "type": "CalculateWindowedFFT"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "ma", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "na", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "mb", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "nb", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "convolve2d", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "correlate2d", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "ma", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "nb", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "fftconvolve", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "ma", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "nb", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "self", "type": "Convolve"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "self", "type": "Convolve"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "Convolve"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "correlate", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "Convolve"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "correlate", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "signal", "type": "module"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "self", "type": "LTI"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "self", "type": "LTI"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "self", "type": "LTI"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "self", "type": "LTI"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "self", "type": "LTI"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "self", "type": "LTI"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "self", "type": "LTI"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "t", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "LTI"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "t", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "LTI"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "upfirdn", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "upfirdn", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "self", "type": "Resample"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "complex", "type": "Type[complex]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "mode", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "mode", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "mode", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "n_image", "type": "int"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "n_image", "type": "int"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "n_kernel", "type": "int"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "n_kernel", "type": "int"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "mode", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "mode", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "mode", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "mode", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "self", "type": "LTI"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "self", "type": "LTI"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "self", "type": "LTI"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "nfilt", "type": "int"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "up", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "down", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "nfilt", "type": "int"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "signal", "type": "module"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "up", "type": "Any"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "down", "type": "Any"}, {"lineNumber": 224, "col_offset": 56, "nodeName": "axis", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "edges", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "h", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "h", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "h", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "pairs", "type": "Dict[str, List[Tuple[Any, Any]]]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "a", "type": "Any"}]