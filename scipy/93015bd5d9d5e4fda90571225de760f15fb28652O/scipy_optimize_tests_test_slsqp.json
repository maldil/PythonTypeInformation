[{"lineNumber": 15, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "been_called", "type": "bool"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "ncalls", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "been_called", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "ncalls", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "dfdx", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "dfdy", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "callback", "type": "MyCallBack"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "f2", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "bounds_list", "type": "List[Union[Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[Any, int], Tuple[Any, int]], Tuple[Tuple[int, Any], Tuple[int, int]]]]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "bounds", "type": "Union[Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[Any, int], Tuple[Any, int]], Tuple[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "bounds_list", "type": "List[Union[Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[Any, int], Tuple[Any, int]], Tuple[Tuple[int, Any], Tuple[int, int]]]]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "cons_u", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "cons_l", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "cons_ul", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "x0", "type": "Tuple[int, int]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "cons", "type": "Tuple[Dict[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "bounds", "type": "scipy.optimize._constraints.Bounds"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "sol", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "problem", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "MyCallBack"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "MyCallBack"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "MyCallBack"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "MyCallBack"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "sign", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "sign", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "sign", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "fun_and_jac", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "fx", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "its", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "imode", "type": "Any"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "smode", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "imode", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "MyCallBack", "type": "Type[MyCallBack]"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "been_called", "type": "bool"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "ncalls", "type": "int"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "sol", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "sol", "type": "Any"}, {"lineNumber": 360, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "sol", "type": "Any"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 417, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 432, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 440, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "cost", "type": "Callable[[Any], Any]"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "x0", "type": "Tuple[int, int]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 482, "col_offset": 17, "nodeName": "Bounds", "type": "Type[scipy.optimize._constraints.Bounds]"}, {"lineNumber": 483, "col_offset": 14, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "NestedProblem", "type": "Type[Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "solve", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "dfdx", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "dfdy", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "sign", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "sign", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "sign", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "errstate", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "fprime_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "jac", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "fprime_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "imode", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "fmin_slsqp", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 325, "col_offset": 48, "nodeName": "callback", "type": "MyCallBack"}, {"lineNumber": 325, "col_offset": 66, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "callback", "type": "MyCallBack"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "callback", "type": "MyCallBack"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "res", "type": "Any"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "success", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 432, "col_offset": 60, "nodeName": "cons_u", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 436, "col_offset": 61, "nodeName": "cons_l", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 440, "col_offset": 61, "nodeName": "cons_u", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 444, "col_offset": 60, "nodeName": "cons_l", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 448, "col_offset": 62, "nodeName": "cons_ul", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 452, "col_offset": 60, "nodeName": "cons_ul", "type": "List[Dict[str, Union[Callable[[Any], Any], str]]]"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 475, "col_offset": 50, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 476, "col_offset": 56, "nodeName": "bounds", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 476, "col_offset": 76, "nodeName": "cons", "type": "Tuple[Dict[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "success", "type": "Any"}, {"lineNumber": 482, "col_offset": 33, "nodeName": "inf", "type": "Any"}, {"lineNumber": 482, "col_offset": 41, "nodeName": "inf", "type": "Any"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "bounds", "type": "scipy.optimize._constraints.Bounds"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "sol", "type": "Any"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "F_outer_count", "type": "int"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "outer_res", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "problem", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "opts", "type": "Dict[str, bool]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "fprime_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "f_eqcon_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "fprime_eqcon_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "f_ieqcon", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "f_ieqcon2", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "fprime_ieqcon2", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "fprime_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "f_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "f_ieqcon", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 66, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "f2", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "sol", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "jac", "type": "Any"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "inf", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "ineqcons1", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 72, "nodeName": "ineqcons2", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 482, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "minimize", "type": "Callable[..., Any]"}, {"lineNumber": 507, "col_offset": 37, "nodeName": "F_outer", "type": "Callable[[Any], Any]"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "success", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "fprime_eqcon", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "sign", "type": "Any"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "res", "type": "Any"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 47, "nodeName": "f2", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "sol", "type": "Any"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "inf", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 388, "col_offset": 55, "nodeName": "bounds", "type": "Union[Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[Any, int], Tuple[Any, int]], Tuple[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 460, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 463, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 507, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "outer_res", "type": "Any"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "outer_res", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "TestSLSQP"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "x", "type": "Any"}]