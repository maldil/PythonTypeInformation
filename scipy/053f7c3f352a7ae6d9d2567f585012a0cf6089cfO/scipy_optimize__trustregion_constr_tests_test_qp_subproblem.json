[{"lineNumber": 20, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "origin", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "origin", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "origin", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "trust_radius", "type": "float"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "H", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "lagrange_multipliers", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "eqp_kktfact", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "H", "type": "Any"}, {"lineNumber": 32, "col_offset": 49, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "A", "type": "Any"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "lagrange_multipliers", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "sphere_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "box_intersections", "type": "Callable[..., Tuple[Any, Any, bool]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "intersect", "type": "bool"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 305, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 319, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "ta", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "tb", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "box_sphere_intersections", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 363, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 363, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "LS", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 378, "col_offset": 31, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "d", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "cauchy_point", "type": "numpy.ndarray"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "d", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 407, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 412, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "modified_dogleg", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 422, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 439, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 439, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 442, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 453, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 454, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 454, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 454, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 454, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "x_kkt", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "eqp_kktfact", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "A", "type": "Any"}, {"lineNumber": 455, "col_offset": 40, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "x_kkt", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 484, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 485, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 485, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 485, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 485, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 485, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 53, "nodeName": "trust_radius", "type": "float"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 503, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 503, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 504, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 504, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 509, "col_offset": 53, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 520, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 533, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 535, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 535, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 535, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 535, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 540, "col_offset": 53, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 553, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 553, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 554, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 554, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 554, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 554, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 554, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "x_kkt", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 559, "col_offset": 19, "nodeName": "eqp_kktfact", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 559, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 559, "col_offset": 37, "nodeName": "A", "type": "Any"}, {"lineNumber": 559, "col_offset": 40, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 562, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "x_kkt", "type": "Any"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 575, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 576, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 598, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 598, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 599, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 599, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 599, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 599, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 599, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 620, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 620, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 620, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 621, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 621, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 621, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 621, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 621, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "_", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 641, "col_offset": 18, "nodeName": "projections", "type": "Callable[..., Tuple[scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator, scipy.sparse.linalg.interface.LinearOperator]]"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 643, "col_offset": 18, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 643, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 643, "col_offset": 34, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 37, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 643, "col_offset": 40, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 643, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "inf", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "inf", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "inf", "type": "Any"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "inf", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 181, "col_offset": 50, "nodeName": "inf", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 290, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "ta", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "tb", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 61, "nodeName": "inf", "type": "Any"}, {"lineNumber": 359, "col_offset": 69, "nodeName": "inf", "type": "Any"}, {"lineNumber": 363, "col_offset": 61, "nodeName": "inf", "type": "Any"}, {"lineNumber": 363, "col_offset": 69, "nodeName": "inf", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 66, "nodeName": "inf", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 382, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 388, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 398, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 403, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 408, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 413, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 413, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 418, "col_offset": 40, "nodeName": "inf", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 457, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "H", "type": "Any"}, {"lineNumber": 472, "col_offset": 28, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 31, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 472, "col_offset": 34, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 472, "col_offset": 37, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 487, "col_offset": 44, "nodeName": "trust_radius", "type": "float"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 506, "col_offset": 44, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 509, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 521, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "projected_cg", "type": "Callable[..., Tuple[Any, Dict[str, Union[int, List[Any]]]]]"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "H", "type": "Any"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 522, "col_offset": 31, "nodeName": "Z", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 522, "col_offset": 34, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 522, "col_offset": 37, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 537, "col_offset": 44, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 539, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 540, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 540, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 560, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 581, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 583, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 583, "col_offset": 45, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 584, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 602, "col_offset": 44, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 604, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 605, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 606, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 618, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 624, "col_offset": 44, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 626, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 628, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 640, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 646, "col_offset": 44, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 648, "col_offset": 21, "nodeName": "info", "type": "Dict[str, Union[int, List[Any]]]"}, {"lineNumber": 649, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "inf", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "inf", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "inf", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "inf", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 359, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 359, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 363, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 50, "nodeName": "norm", "type": "Any"}, {"lineNumber": 364, "col_offset": 65, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 367, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 367, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 381, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 381, "col_offset": 60, "nodeName": "inf", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 387, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 387, "col_offset": 60, "nodeName": "inf", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 388, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "linalg", "type": "module"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "inf", "type": "Any"}, {"lineNumber": 397, "col_offset": 55, "nodeName": "inf", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 407, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 407, "col_offset": 60, "nodeName": "inf", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 413, "col_offset": 34, "nodeName": "linalg", "type": "module"}, {"lineNumber": 417, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 417, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 417, "col_offset": 60, "nodeName": "inf", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 472, "col_offset": 53, "nodeName": "trust_radius", "type": "int"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "linalg", "type": "module"}, {"lineNumber": 491, "col_offset": 38, "nodeName": "dot", "type": "Callable[[Any], Any]"}, {"lineNumber": 491, "col_offset": 44, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "linalg", "type": "module"}, {"lineNumber": 519, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 34, "nodeName": "linalg", "type": "module"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "A", "type": "Any"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 601, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "inf", "type": "Any"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "inf", "type": "Any"}, {"lineNumber": 618, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 623, "col_offset": 48, "nodeName": "inf", "type": "Any"}, {"lineNumber": 623, "col_offset": 56, "nodeName": "inf", "type": "Any"}, {"lineNumber": 640, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 645, "col_offset": 43, "nodeName": "inf", "type": "Any"}, {"lineNumber": 645, "col_offset": 56, "nodeName": "inf", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 50, "nodeName": "linalg", "type": "module"}, {"lineNumber": 367, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 51, "nodeName": "newton_point", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 413, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 38, "nodeName": "Y", "type": "scipy.sparse.linalg.interface.LinearOperator"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "inf", "type": "Any"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "inf", "type": "Any"}, {"lineNumber": 557, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 578, "col_offset": 41, "nodeName": "inf", "type": "Any"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "inf", "type": "Any"}, {"lineNumber": 579, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 601, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 45, "nodeName": "np", "type": "module"}]