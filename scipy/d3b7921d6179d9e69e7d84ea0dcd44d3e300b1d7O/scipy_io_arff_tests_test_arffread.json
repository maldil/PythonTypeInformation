[{"lineNumber": 24, "col_offset": 0, "nodeName": "data_path", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test1", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test2", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test3", "type": "str"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test4", "type": "str"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test5", "type": "str"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test6", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "test7", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test8", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test9", "type": "str"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test10", "type": "str"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test11", "type": "str"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_quoted_nominal", "type": "str"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "test_quoted_nominal_spaces", "type": "str"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "expect4_data", "type": "List[Union[Tuple[float, float, float, float, str], Tuple[int, int, int, int, str]]]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "expected_types", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "missing", "type": "str"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "data_path", "type": "str"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "data_path", "type": "str"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "data_path", "type": "str"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "data_path", "type": "str"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "data_path", "type": "str"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "expect_missing_raw", "type": "numpy.ndarray"}, {"lineNumber": 8, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "__file__", "type": "str"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "nodata_filename", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "relational", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "expected", "type": "List[numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "relational", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "dtype_instance", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "float_", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "float_", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 8, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "nan", "type": "Any"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "test4", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "test5", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "test6", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "expected_types", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "f2", "type": "TextIO"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data2", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "missing", "type": "str"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "data_path", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "nodata_filename", "type": "str"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "ParseArffError", "type": "Type[scipy.io.arff.arffread.ParseArffError]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "badtype_read", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "read_dateheader_unsupported", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "test7", "type": "str"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 250, "col_offset": 63, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "ParseArffError", "type": "Type[scipy.io.arff.arffread.ParseArffError]"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "test8", "type": "str"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "test9", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "test10", "type": "str"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "test_quoted_nominal", "type": "str"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "age", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 370, "col_offset": 45, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 371, "col_offset": 48, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 40, "nodeName": "test_quoted_nominal_spaces", "type": "str"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "age", "type": "Any"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 416, "col_offset": 45, "nodeName": "age_expected", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "smoker_expected", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "types", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "data1", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "data2", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "data1", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "data2", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "data1", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "loadarff", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "f1", "type": "TextIO"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "test1", "type": "str"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "data1", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "data2", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "test2", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "test1", "type": "str"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "test7", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "rel", "type": "Optional[str]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "date_format", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "float_", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "float_", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "dtype_instance", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "age", "type": "Any"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "smoker", "type": "Any"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "age_dtype_instance", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "smoker_dtype_instance", "type": "str"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "meta", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "meta1", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "meta2", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "expect_missing", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "test3", "type": "str"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "_", "type": "Optional[str]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "test8", "type": "str"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "_", "type": "Optional[str]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "read_header", "type": "Callable[[Any], Tuple[Optional[str], List[Any]]]"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "ofile", "type": "TextIO"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "self", "type": "TestDateAttribute"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "relational", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "dtype_instance", "type": "List[Union[Tuple[str, str], Tuple[str, Any]]]"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "expected", "type": "List[numpy.ndarray]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "relational", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "read", "type": "Callable"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "i", "type": "str"}, {"lineNumber": 101, "col_offset": 62, "nodeName": "i", "type": "str"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "datetime", "type": "module"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 298, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "_attributes", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "relational", "type": "Any"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "self", "type": "TestRelationalAttributeLong"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "self", "type": "TestQuotedNominal"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "self", "type": "TestQuotedNominalSpaces"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "expect4_data", "type": "List[Union[Tuple[float, float, float, float, str], Tuple[int, int, int, int, str]]]"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "j", "type": "int"}, {"lineNumber": 70, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 70, "nodeName": "j", "type": "int"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "f2", "type": "TextIO"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "attrs", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "meta", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "meta", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "self", "type": "TestRelationalAttribute"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "self", "type": "TestRelationalAttributeLong"}]