[{"lineNumber": 7, "col_offset": 0, "nodeName": "_next_regular_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "next_fast_len", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "_init_nd_shape_and_axes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "_init_nd_shape_and_axes_sorted", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "hams", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "target", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "match", "type": "float"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "p5", "type": "int"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "match", "type": "Union[int, float]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "noaxes", "type": "bool"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "target", "type": "int"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "target", "type": "int"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "target", "type": "int"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "target", "type": "int"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "p5", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "target", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "p35", "type": "int"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "p5", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "p5", "type": "int"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "p5", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "match", "type": "Union[int, float]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "match", "type": "int"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "p5", "type": "int"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "_next_regular_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "a", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "_init_nd_shape_and_axes", "type": "Any"}, {"lineNumber": 149, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "axes", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "axes", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "axes", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "_init_nd_shape_and_axes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "axes", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "noaxes", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "axes", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "target", "type": "int"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "hams", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "hams", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "p35", "type": "int"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "target", "type": "int"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "quotient", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "p2", "type": "Union[float, int]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "N", "type": "Union[float, int]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "p35", "type": "int"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "p35", "type": "int"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "match", "type": "Union[float, int]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "match", "type": "int"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "p35", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "p5", "type": "int"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "target", "type": "int"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "p5", "type": "int"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "sort", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "target", "type": "int"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "p2", "type": "Union[float, int]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "p35", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "N", "type": "Union[float, int]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "target", "type": "int"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "N", "type": "Union[float, int]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "p35", "type": "int"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "target", "type": "int"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "p35", "type": "int"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "axes", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "bisect_left", "type": "Callable[..., int]"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "hams", "type": "Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "target", "type": "int"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "p35", "type": "int"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "bit_length", "type": "Callable[[], int]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "N", "type": "Union[float, int]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "match", "type": "float"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "match", "type": "Union[float, int]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "N", "type": "Union[float, int]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "target", "type": "int"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "axes", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "quotient", "type": "int"}]