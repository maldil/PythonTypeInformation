[{"lineNumber": 58, "col_offset": 0, "nodeName": "klee_minty", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "methods", "type": "List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "rr_methods", "type": "List[Callable[[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "problems", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "rr_problems", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "Benchmark", "type": "Any"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "slow", "type": "int"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "_remove_redundancy", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "_remove_redundancy_dense", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "_remove_redundancy_sparse", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "slow", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "problems", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "rr_problems", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "A_1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "A1_", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "xf", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "obj", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "solutions", "type": "List[Tuple[int, float]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]], List[Tuple[int, float]]]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]], List[int]]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]], range]]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]], List[str], List[Any]]]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "params", "type": "List[Union[List[Callable[[Any, Any], Tuple[Any, Any, Any, Any]]], List[str]]]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "known_fails", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "A1_", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "toeplitz", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "A_1", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "A1_", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "D", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "xf", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "D", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "xf", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "xf", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "methods", "type": "List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "solutions", "type": "List[Tuple[int, float]]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "slow", "type": "int"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "fun", "type": "None"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "meth", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "methods", "type": "List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "fun", "type": "None"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "meth", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "fun", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "fun", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "methods", "type": "List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "meth", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "methods", "type": "List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "problems", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "dir_path", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "datafile", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "obj", "type": "float"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "fun", "type": "None"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "meth", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "fun", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "fun", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "rr_methods", "type": "List[Callable[[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "rr_problems", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "dir_path", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "lp", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "lp_cleaned", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "res", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "true_rank", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "rr_A", "type": "None"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "rr_rank", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "rr_rows", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "error1", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "error2", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "params", "type": "List[Union[List[Union[Tuple[str, Dict[str, bool]], Tuple[str, Dict[nothing, nothing]]]], List[Tuple[int, float]]]]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "solutions", "type": "List[Tuple[int, float]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dims", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "obj", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "c", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "magic_square", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, Any, Any]]"}, {"lineNumber": 84, "col_offset": 61, "nodeName": "dims", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "options", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "fun", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "fun", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "dims", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "obj", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "fun", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "xf", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "obj", "type": "Any"}, {"lineNumber": 113, "col_offset": 58, "nodeName": "klee_minty", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "dims", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "options", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "fun", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "m", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "options", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "dir_path", "type": "str"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "datafile", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "options", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "fun", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "abs_error", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "rel_error", "type": "Any"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "known_fails", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "_LPProblem", "type": "Type[scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 216, "col_offset": 59, "nodeName": "x0", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "_clean_inputs", "type": "Callable[[Any], scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0]"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "lp", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "matrix_rank", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "meth", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "_remove_redundancy_sparse", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "status", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "message", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "meth", "type": "Any"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "meth", "type": "Any"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "_remove_redundancy_sparse", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "matrix_rank", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "rr_rank", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "true_rank", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "rr_rows", "type": "Any"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "true_rank", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "time_magic_square", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "meth", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "prob", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "obj", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "obj", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "options", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "time_klee_minty", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "meth", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "prob", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "obj", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "obj", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "__file__", "type": "str"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "prob", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "options", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "time_netlib", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "meth", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "prob", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "fun", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "obj", "type": "float"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "obj", "type": "float"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "prob", "type": "Any"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "__file__", "type": "str"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 211, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "data", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "_presolve", "type": "Callable[..., Tuple[scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0, Any, Any, List[Any], bool, Any, Any]]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "lp_cleaned", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "res", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "res", "type": "scipy.optimize._linprog_util.namedtuple__LPProblem_c_A_ub_b_ub_A_eq_b_eq_bounds_x0"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "linalg", "type": "module"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "time_netlib_rr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "meth", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "prob", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "todense", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "linalg", "type": "module"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "error1", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "error2", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "error1", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "error2", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "D", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "D", "type": "Any"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "method", "type": "Any"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "options", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "fun", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "obj", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "fun", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "obj", "type": "Any"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "A", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "b", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "method", "type": "Any"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "options", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "fun", "type": "Any"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "obj", "type": "float"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "meth", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "prob", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "rr_A", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "D", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "self", "type": "MagicSquare"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "self", "type": "KleeMinty"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "self", "type": "LpGen"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "self", "type": "Netlib"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "dir_path", "type": "str"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "self", "type": "Netlib_RR"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "D", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "data", "type": "Any"}]