[{"lineNumber": 30, "col_offset": 0, "nodeName": "_assert_iteration_limit_reached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "_assert_unable_to_find_basic_feasible_sol", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "magic_square", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "generic_callback_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "test_unknown_solver", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "has_cholmod", "type": "bool"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "A_ub", "type": "None"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "b_ub", "type": "None"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "A_eq", "type": "None"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "b_eq", "type": "None"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "bounds", "type": "None"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 1375, "col_offset": 26, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1379, "col_offset": 21, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1383, "col_offset": 21, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1416, "col_offset": 32, "nodeName": "LinprogSimplexTests", "type": "Type[LinprogSimplexTests]"}, {"lineNumber": 1440, "col_offset": 30, "nodeName": "LinprogSimplexTests", "type": "Type[LinprogSimplexTests]"}, {"lineNumber": 1458, "col_offset": 35, "nodeName": "LinprogSimplexTests", "type": "Type[LinprogSimplexTests]"}, {"lineNumber": 1507, "col_offset": 25, "nodeName": "LinprogIPTests", "type": "Type[LinprogIPTests]"}, {"lineNumber": 1511, "col_offset": 3, "nodeName": "has_cholmod", "type": "bool"}, {"lineNumber": 1516, "col_offset": 3, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1524, "col_offset": 26, "nodeName": "LinprogIPTests", "type": "Type[LinprogIPTests]"}, {"lineNumber": 1568, "col_offset": 34, "nodeName": "LinprogIPTests", "type": "Type[LinprogIPTests]"}, {"lineNumber": 1580, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 1658, "col_offset": 26, "nodeName": "LinprogRSTests", "type": "Type[LinprogRSTests]"}, {"lineNumber": 1721, "col_offset": 25, "nodeName": "LinprogRSTests", "type": "Type[LinprogRSTests]"}, {"lineNumber": 1730, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 1738, "col_offset": 22, "nodeName": "AutoscaleTests", "type": "Type[AutoscaleTests]"}, {"lineNumber": 1746, "col_offset": 27, "nodeName": "AutoscaleTests", "type": "Type[AutoscaleTests]"}, {"lineNumber": 1750, "col_offset": 22, "nodeName": "AutoscaleTests", "type": "Type[AutoscaleTests]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "M", "type": "float"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "Arow", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "brow", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "Acol", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "bcol", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "f_star", "type": "float"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1376, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1380, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1384, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1463, "col_offset": 4, "nodeName": "is_32_bit", "type": "Any"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "is_linux", "type": "bool"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1512, "col_offset": 37, "nodeName": "LinprogIPTests", "type": "Type[LinprogIPTests]"}, {"lineNumber": 1517, "col_offset": 37, "nodeName": "LinprogIPTests", "type": "Type[LinprogIPTests]"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1581, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "options", "type": "Dict[str, str]"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1733, "col_offset": 4, "nodeName": "test_bug_6139", "type": "Callable[[Any], Any]"}, {"lineNumber": 1733, "col_offset": 20, "nodeName": "test_bug_6139", "type": "Callable[[Any], Any]"}, {"lineNumber": 1734, "col_offset": 4, "nodeName": "test_bug_6690", "type": "Callable[[Any], Any]"}, {"lineNumber": 1734, "col_offset": 20, "nodeName": "test_bug_6690", "type": "Callable[[Any], Any]"}, {"lineNumber": 1735, "col_offset": 4, "nodeName": "test_bug_7237", "type": "Callable[[Any], Any]"}, {"lineNumber": 1735, "col_offset": 20, "nodeName": "test_bug_7237", "type": "Callable[[Any], Any]"}, {"lineNumber": 1739, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1747, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 1751, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "has_cholmod", "type": "bool"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "status", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "status", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "status", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "success", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "status", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "desired_x", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "M", "type": "float"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "M", "type": "float"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "c", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "m", "type": "int"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "m", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "j1", "type": "int"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "n", "type": "int"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "j1", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "A", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "f_star", "type": "float"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "complete", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "A", "type": "List[List[int]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "b", "type": "List[int]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "x0_bounds", "type": "Tuple[None, None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "x1_bounds", "type": "Tuple[int, None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "b_eq", "type": "str"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "b_ub_orig", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "b_eq_orig", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[float]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "b_ub", "type": "List[float]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[float]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, float]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, Any], Tuple[Any, int], Tuple[int, int]]]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, Any], Tuple[Any, int], Tuple[int, int]]]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, None]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[None, float]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, int]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, Any]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "x0_bounds", "type": "Tuple[Any, Any]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "x1_bounds", "type": "Tuple[int, Any]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Tuple[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "A_ub", "type": "List[Union[List[int], List[float]]]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "b_ub", "type": "int"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "b_ub", "type": "List[Union[int, float]]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "b_ub", "type": "int"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[None, int]]"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int], Tuple[None, int]]]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "maxiter", "type": "int"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 747, "col_offset": 23, "nodeName": "maxiter", "type": "int"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "A_eq", "type": "List[Union[List[int], List[Union[int, float]]]]"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 916, "col_offset": 8, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[int, int]]]"}, {"lineNumber": 967, "col_offset": 8, "nodeName": "f", "type": "float"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "g", "type": "float"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "h", "type": "float"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1003, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1028, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 1030, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 1055, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "desired_x", "type": "numpy.ndarray"}, {"lineNumber": 1076, "col_offset": 8, "nodeName": "atol", "type": "float"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1128, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1132, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1133, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[None, None]]"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1148, "col_offset": 8, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1149, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 1150, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1167, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1168, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1176, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1191, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1192, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1199, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1206, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1207, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1212, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1213, "col_offset": 8, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1254, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1256, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1257, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1258, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1272, "col_offset": 8, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1274, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1275, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int]]]"}, {"lineNumber": 1276, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1288, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 1289, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1291, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1303, "col_offset": 8, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1304, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 1305, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1306, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1307, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1308, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1311, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1326, "col_offset": 8, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1327, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 1338, "col_offset": 8, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[float]]"}, {"lineNumber": 1350, "col_offset": 8, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 1354, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1419, "col_offset": 8, "nodeName": "options", "type": "Dict[str, float]"}, {"lineNumber": 1443, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1461, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1463, "col_offset": 16, "nodeName": "itemsize", "type": "Any"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1518, "col_offset": 8, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1535, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 1587, "col_offset": 11, "nodeName": "has_cholmod", "type": "bool"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "res1", "type": "Any"}, {"lineNumber": 1595, "col_offset": 8, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1602, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1603, "col_offset": 8, "nodeName": "bounds", "type": "List[Tuple[None, int]]"}, {"lineNumber": 1604, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1631, "col_offset": 8, "nodeName": "maxiter", "type": "Any"}, {"lineNumber": 1632, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1641, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1643, "col_offset": 8, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1644, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1666, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1673, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 1674, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1681, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, int], Tuple[float, None], Tuple[int, None], Tuple[float, float]]]"}, {"lineNumber": 1682, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1689, "col_offset": 8, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "x_star", "type": "numpy.ndarray"}, {"lineNumber": 1691, "col_offset": 8, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1692, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[float, None], Tuple[int, None], Tuple[float, float]]]"}, {"lineNumber": 1693, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1700, "col_offset": 8, "nodeName": "bad_guess", "type": "List[Union[int, float]]"}, {"lineNumber": 1701, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1707, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 1733, "col_offset": 20, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1734, "col_offset": 20, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1735, "col_offset": 20, "nodeName": "LinprogCommonTests", "type": "Type[LinprogCommonTests]"}, {"lineNumber": 1755, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 1762, "col_offset": 8, "nodeName": "bad_guess", "type": "List[Union[int, float]]"}, {"lineNumber": 1763, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "success", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "maxiter", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "success", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "status", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "status", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "message", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "fun", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "desired_x", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "n", "type": "int"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "M", "type": "float"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "M", "type": "float"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "m", "type": "int"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "Arow", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "brow", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "n", "type": "int"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "m", "type": "int"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "Acol", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "bcol", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "Arow", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "Acol", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "brow", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "bcol", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "cb", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "method", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "res", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "res", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "last_cb", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "res", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "generic_callback_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "inf", "type": "Any"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 289, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "b_ub_orig", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "inf", "type": "Any"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "b_eq_orig", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 35, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[float]]"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "b_ub", "type": "List[float]"}, {"lineNumber": 316, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[float]]"}, {"lineNumber": 316, "col_offset": 43, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 316, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[float, float]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "_assert_warns", "type": "Any"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 354, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 394, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 407, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 407, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 414, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 414, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 419, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 419, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 428, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 428, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[float, None]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "inf", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[float, Any]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 446, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[None, float]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 455, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 455, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[Any, int]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 464, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 464, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 464, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[Any, Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "inf", "type": "Any"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "x0_bounds", "type": "Tuple[Any, Any]"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "x1_bounds", "type": "Tuple[int, Any]"}, {"lineNumber": 478, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 478, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 478, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 478, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 478, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[Tuple[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 487, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 487, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 487, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 489, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 496, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 496, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 496, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 496, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 498, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 510, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 513, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "A_ub", "type": "List[Union[List[int], List[float]]]"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 513, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 513, "col_offset": 49, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 520, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 522, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 528, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 528, "col_offset": 31, "nodeName": "b_ub", "type": "int"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 528, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 528, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[int, int], Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 535, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 537, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 537, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 539, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 541, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 541, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 543, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 545, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 545, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 545, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 545, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 556, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 556, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 556, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 556, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 556, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 564, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 564, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 564, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 564, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 564, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 564, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 570, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 571, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 573, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 574, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 574, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 574, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 574, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 574, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 574, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 583, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 584, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 585, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 585, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 588, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 588, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 588, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 588, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 588, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 600, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 600, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 600, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 600, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 602, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 612, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 612, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 612, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 621, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 621, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 621, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 621, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 623, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 634, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 634, "col_offset": 31, "nodeName": "b_ub", "type": "List[Union[int, float]]"}, {"lineNumber": 634, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 634, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 634, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 645, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 645, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 645, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 645, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 654, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 654, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 654, "col_offset": 31, "nodeName": "b_ub", "type": "int"}, {"lineNumber": 654, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 654, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 656, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 668, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 668, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 668, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 668, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 668, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 670, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 676, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 679, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 700, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 700, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 700, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int], Tuple[int, None]]]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 703, "col_offset": 32, "nodeName": "inf", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 718, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 718, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 718, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 718, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 718, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int], Tuple[None, int]]]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 732, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 732, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 732, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 732, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 732, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 732, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 739, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 746, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 746, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 749, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 749, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 749, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 749, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 749, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 749, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "m", "type": "int"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 765, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 766, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 766, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 766, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 767, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 767, "col_offset": 30, "nodeName": "m", "type": "int"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 770, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 774, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 783, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 783, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 783, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 783, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 783, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 783, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 784, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 784, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 784, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 784, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 784, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 784, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 786, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 791, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 791, "col_offset": 24, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 793, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 799, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 806, "col_offset": 11, "nodeName": "p", "type": "int"}, {"lineNumber": 816, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 820, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 833, "col_offset": 11, "nodeName": "p", "type": "int"}, {"lineNumber": 841, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 849, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 851, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 860, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 860, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 860, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 860, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 860, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 860, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 860, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 862, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 878, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 878, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 878, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 878, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 878, "col_offset": 37, "nodeName": "A_eq", "type": "List[Union[List[int], List[Union[int, float]]]]"}, {"lineNumber": 878, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 878, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 880, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 894, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 896, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 898, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 906, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 908, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 908, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 908, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 908, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 908, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 908, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 910, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 910, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 919, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 919, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 919, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 919, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 919, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 919, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 919, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 921, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 931, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 934, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 934, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 934, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 934, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 934, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 934, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 936, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 944, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 947, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 950, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 950, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 952, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 970, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 999, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1003, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1005, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1010, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1012, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1023, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1024, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1030, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1030, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1033, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1042, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1043, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1050, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1055, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1059, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1060, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1067, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1071, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1073, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 1077, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 1078, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1085, "col_offset": 14, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 1085, "col_offset": 23, "nodeName": "N", "type": "Any"}, {"lineNumber": 1085, "col_offset": 27, "nodeName": "magic_square", "type": "Callable[[Any], Any]"}, {"lineNumber": 1086, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1090, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1094, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1094, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1095, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1095, "col_offset": 41, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 1096, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 1103, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1104, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1128, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1131, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1132, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1135, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1135, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 37, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 43, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 49, "nodeName": "bounds", "type": "List[Tuple[None, None]]"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1137, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1148, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1151, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1154, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1166, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1168, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1169, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1178, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1179, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1182, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1184, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1184, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1192, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1198, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1199, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1199, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1201, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1215, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1220, "col_offset": 12, "nodeName": "res1", "type": "Any"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1225, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1226, "col_offset": 8, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1228, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1233, "col_offset": 12, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1236, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1236, "col_offset": 24, "nodeName": "res1", "type": "Any"}, {"lineNumber": 1237, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1237, "col_offset": 24, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1246, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1246, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1246, "col_offset": 25, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1246, "col_offset": 31, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1246, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1246, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1246, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1248, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1259, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1262, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1264, "col_offset": 8, "nodeName": "_assert_infeasible", "type": "Callable[[Any], Any]"}, {"lineNumber": 1264, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 1272, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1273, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1276, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1276, "col_offset": 22, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1276, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1276, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1276, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1276, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1276, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, int]]]"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1278, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1290, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1292, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1292, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 1292, "col_offset": 25, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1292, "col_offset": 31, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1292, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1292, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1292, "col_offset": 49, "nodeName": "bounds", "type": "Tuple[None, None]"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1294, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1301, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1302, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1303, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1310, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1310, "col_offset": 17, "nodeName": "options", "type": "Any"}, {"lineNumber": 1311, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1311, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1311, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1311, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1311, "col_offset": 37, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1311, "col_offset": 43, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1311, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 1313, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1313, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1320, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1327, "col_offset": 12, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 1328, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1330, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1332, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1332, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1355, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1355, "col_offset": 17, "nodeName": "options", "type": "Any"}, {"lineNumber": 1357, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1359, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1366, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1368, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1368, "col_offset": 24, "nodeName": "fun", "type": "Any"}, {"lineNumber": 1403, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1406, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1419, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1435, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1443, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexBland"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1461, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "platform", "type": "str"}, {"lineNumber": 1470, "col_offset": 8, "nodeName": "test_bug_5400", "type": "Callable[[], Any]"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1484, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1491, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1499, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "test_bug_6690", "type": "Callable[[], Any]"}, {"lineNumber": 1534, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1534, "col_offset": 14, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1534, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 1534, "col_offset": 23, "nodeName": "N", "type": "Any"}, {"lineNumber": 1534, "col_offset": 27, "nodeName": "magic_square", "type": "Callable[[Any], Any]"}, {"lineNumber": 1537, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1538, "col_offset": 15, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1543, "col_offset": 12, "nodeName": "o", "type": "Dict[str, bool]"}, {"lineNumber": 1546, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1548, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1548, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1552, "col_offset": 8, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1552, "col_offset": 14, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1552, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 1552, "col_offset": 23, "nodeName": "N", "type": "Any"}, {"lineNumber": 1552, "col_offset": 27, "nodeName": "magic_square", "type": "Callable[[Any], Any]"}, {"lineNumber": 1553, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1556, "col_offset": 12, "nodeName": "o", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 1557, "col_offset": 12, "nodeName": "permc_specs", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 1561, "col_offset": 16, "nodeName": "permc_spec", "type": "str"}, {"lineNumber": 1561, "col_offset": 30, "nodeName": "permc_specs", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "test_bug_6690", "type": "Callable[[], Any]"}, {"lineNumber": 1588, "col_offset": 12, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1589, "col_offset": 13, "nodeName": "has_umfpack", "type": "bool"}, {"lineNumber": 1593, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 1593, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 1593, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 1593, "col_offset": 18, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1594, "col_offset": 15, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1594, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 1595, "col_offset": 15, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1595, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 1596, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1596, "col_offset": 24, "nodeName": "fun", "type": "Any"}, {"lineNumber": 1596, "col_offset": 34, "nodeName": "fun", "type": "Any"}, {"lineNumber": 1604, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1607, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1607, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1611, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 1611, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 1611, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 1611, "col_offset": 18, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1612, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1612, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 1614, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1614, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 1618, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 1618, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 1618, "col_offset": 18, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1619, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1623, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1626, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1626, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1630, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 1630, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 1630, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 1630, "col_offset": 18, "nodeName": "lpgen_2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1632, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1632, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 1635, "col_offset": 8, "nodeName": "_assert_iteration_limit_reached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1635, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 1635, "col_offset": 45, "nodeName": "maxiter", "type": "Any"}, {"lineNumber": 1636, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1636, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1636, "col_offset": 30, "nodeName": "maxiter", "type": "Any"}, {"lineNumber": 1645, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1648, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1650, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1662, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1665, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1665, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1665, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1665, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1665, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1665, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1665, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1665, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1666, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1666, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1666, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1666, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1666, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1666, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1666, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1668, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1668, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1669, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1669, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1672, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1672, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1672, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1672, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1672, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1672, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1672, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1672, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1674, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1674, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1674, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1674, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1674, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1674, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1674, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[int, None]]]"}, {"lineNumber": 1676, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1676, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1677, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1677, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1680, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1680, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1680, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1680, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1680, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1680, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1680, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1680, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1682, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1682, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1682, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1682, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1682, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1682, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1682, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, int], Tuple[float, None], Tuple[int, None], Tuple[float, float]]]"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1684, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1685, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1685, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1688, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1688, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1688, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1688, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1688, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1688, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1688, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1688, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1690, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1693, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1693, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1693, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1693, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1693, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1693, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1693, "col_offset": 49, "nodeName": "bounds", "type": "List[Union[Tuple[None, None], Tuple[float, None], Tuple[int, None], Tuple[float, float]]]"}, {"lineNumber": 1695, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1695, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1696, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1696, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1699, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1699, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1699, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1699, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1699, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1699, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1699, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1699, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1701, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1701, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1701, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1701, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1701, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1701, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1701, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1703, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "status", "type": "Any"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 1706, "col_offset": 11, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 1706, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 1706, "col_offset": 17, "nodeName": "N", "type": "Any"}, {"lineNumber": 1706, "col_offset": 21, "nodeName": "magic_square", "type": "Callable[[Any], Any]"}, {"lineNumber": 1707, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1708, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1712, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 1713, "col_offset": 12, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1714, "col_offset": 12, "nodeName": "res3", "type": "Any"}, {"lineNumber": 1715, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1715, "col_offset": 24, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1716, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1717, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1717, "col_offset": 24, "nodeName": "res3", "type": "Any"}, {"lineNumber": 1718, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1742, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1743, "col_offset": 15, "nodeName": "test_bug_6139", "type": "Callable[[Any], Any]"}, {"lineNumber": 1743, "col_offset": 44, "nodeName": "self", "type": "TestAutoscaleIP"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1754, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1754, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1754, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1754, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1754, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1754, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1754, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1755, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1755, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1755, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1755, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1757, "col_offset": 8, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1757, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1758, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1758, "col_offset": 21, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1761, "col_offset": 8, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 11, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1761, "col_offset": 17, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 23, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1761, "col_offset": 29, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 35, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1761, "col_offset": 43, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1761, "col_offset": 52, "nodeName": "nontrivial_problem", "type": "Callable[[], Any]"}, {"lineNumber": 1763, "col_offset": 14, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1763, "col_offset": 22, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1763, "col_offset": 25, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1763, "col_offset": 31, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1763, "col_offset": 37, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1763, "col_offset": 43, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1763, "col_offset": 49, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1765, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1765, "col_offset": 21, "nodeName": "status", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "res", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "res", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "rtol", "type": "float"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "atol", "type": "float"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "rtol", "type": "float"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "atol", "type": "float"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "random", "type": "module"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "m", "type": "int"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "m", "type": "int"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "c", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "res", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "complete", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "message", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "method", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "A", "type": "List[List[int]]"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "b", "type": "List[int]"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "options", "type": "Any"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "method", "type": "Any"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "b_eq", "type": "str"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "b_ub_orig", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "b_eq_orig", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 303, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 317, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "options", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 330, "col_offset": 47, "nodeName": "options", "type": "Any"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 334, "col_offset": 55, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 339, "col_offset": 35, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 34, "nodeName": "options", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "options", "type": "Any"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "method", "type": "Any"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "options", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 372, "col_offset": 32, "nodeName": "bounds", "type": "List[Union[Tuple[int, Any], Tuple[Any, int], Tuple[int, int]]]"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 373, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "bounds", "type": "List[Union[Tuple[int, Any], Tuple[Any, int], Tuple[int, int]]]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 395, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 408, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 415, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 420, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 429, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 438, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 439, "col_offset": 39, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 447, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "inf", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 456, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "inf", "type": "Any"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 465, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 466, "col_offset": 39, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 473, "col_offset": 40, "nodeName": "float64", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 479, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 488, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 488, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 497, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 497, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 510, "col_offset": 18, "nodeName": "options", "type": "Any"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 510, "col_offset": 47, "nodeName": "options", "type": "Any"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 514, "col_offset": 50, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 529, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 546, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 546, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 557, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 565, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 575, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "m", "type": "int"}, {"lineNumber": 589, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 589, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 601, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 613, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 613, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 622, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 622, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 635, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 635, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 646, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 646, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 655, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 655, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 660, "col_offset": 25, "nodeName": "nit", "type": "Any"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 669, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 669, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "options", "type": "Any"}, {"lineNumber": 676, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 676, "col_offset": 47, "nodeName": "options", "type": "Any"}, {"lineNumber": 679, "col_offset": 24, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 679, "col_offset": 34, "nodeName": "bounds", "type": "List[Tuple[None, int]]"}, {"lineNumber": 680, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 681, "col_offset": 30, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "status", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "_assert_unbounded", "type": "Callable[[Any], Any]"}, {"lineNumber": 686, "col_offset": 30, "nodeName": "res", "type": "Any"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 701, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 703, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "message", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 721, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 721, "col_offset": 33, "nodeName": "inf", "type": "Any"}, {"lineNumber": 722, "col_offset": 21, "nodeName": "message", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 733, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 733, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 750, "col_offset": 50, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "_assert_iteration_limit_reached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 754, "col_offset": 44, "nodeName": "res", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 757, "col_offset": 28, "nodeName": "res", "type": "Any"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 766, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 767, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 768, "col_offset": 26, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 771, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 772, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 772, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 772, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 772, "col_offset": 41, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 772, "col_offset": 47, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 772, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 785, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 786, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 786, "col_offset": 59, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 793, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 794, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 795, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 797, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 797, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 797, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 797, "col_offset": 41, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 797, "col_offset": 47, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 797, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 808, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 808, "col_offset": 19, "nodeName": "p", "type": "int"}, {"lineNumber": 808, "col_offset": 25, "nodeName": "p", "type": "int"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "p", "type": "int"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "p", "type": "int"}, {"lineNumber": 809, "col_offset": 22, "nodeName": "p", "type": "int"}, {"lineNumber": 809, "col_offset": 28, "nodeName": "p", "type": "int"}, {"lineNumber": 810, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 810, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "p", "type": "int"}, {"lineNumber": 811, "col_offset": 34, "nodeName": "p", "type": "int"}, {"lineNumber": 811, "col_offset": 43, "nodeName": "p", "type": "int"}, {"lineNumber": 812, "col_offset": 25, "nodeName": "n", "type": "int"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 812, "col_offset": 31, "nodeName": "n", "type": "int"}, {"lineNumber": 812, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 813, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 813, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 813, "col_offset": 46, "nodeName": "p", "type": "int"}, {"lineNumber": 814, "col_offset": 40, "nodeName": "n", "type": "int"}, {"lineNumber": 814, "col_offset": 43, "nodeName": "n", "type": "int"}, {"lineNumber": 814, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 816, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 818, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 818, "col_offset": 26, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 818, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 818, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 818, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 818, "col_offset": 47, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 818, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 835, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "p", "type": "int"}, {"lineNumber": 836, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 836, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 837, "col_offset": 16, "nodeName": "p", "type": "int"}, {"lineNumber": 837, "col_offset": 19, "nodeName": "p", "type": "int"}, {"lineNumber": 837, "col_offset": 25, "nodeName": "n", "type": "int"}, {"lineNumber": 838, "col_offset": 22, "nodeName": "p", "type": "int"}, {"lineNumber": 838, "col_offset": 25, "nodeName": "p", "type": "int"}, {"lineNumber": 841, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 845, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 846, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 848, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 849, "col_offset": 26, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 849, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 849, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 849, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 849, "col_offset": 47, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 849, "col_offset": 53, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 861, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 861, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 879, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 879, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 894, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 895, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 895, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 896, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 896, "col_offset": 26, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 896, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 896, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 896, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 896, "col_offset": 47, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 896, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 904, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 904, "col_offset": 21, "nodeName": "m", "type": "int"}, {"lineNumber": 905, "col_offset": 49, "nodeName": "m", "type": "int"}, {"lineNumber": 906, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 909, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 909, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 915, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 915, "col_offset": 21, "nodeName": "m", "type": "int"}, {"lineNumber": 916, "col_offset": 42, "nodeName": "m", "type": "int"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 920, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 926, "col_offset": 21, "nodeName": "m", "type": "int"}, {"lineNumber": 927, "col_offset": 42, "nodeName": "m", "type": "int"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 931, "col_offset": 18, "nodeName": "options", "type": "Any"}, {"lineNumber": 931, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 931, "col_offset": 47, "nodeName": "options", "type": "Any"}, {"lineNumber": 935, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 935, "col_offset": 50, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 944, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 947, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 951, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 970, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 999, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1003, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1005, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1006, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1006, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1008, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1008, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1009, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1009, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1010, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1010, "col_offset": 26, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1010, "col_offset": 29, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1010, "col_offset": 35, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1010, "col_offset": 41, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1010, "col_offset": 47, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1010, "col_offset": 53, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[int, int]]]"}, {"lineNumber": 1023, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1024, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1026, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1027, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1031, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1031, "col_offset": 50, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1042, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1043, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1050, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1051, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1055, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1059, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1062, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1062, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1064, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1064, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1065, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1065, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1066, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1066, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1067, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1067, "col_offset": 26, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 29, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 35, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 47, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 53, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 1071, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1073, "col_offset": 41, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1073, "col_offset": 64, "nodeName": "desired_x", "type": "numpy.ndarray"}, {"lineNumber": 1077, "col_offset": 41, "nodeName": "atol", "type": "float"}, {"lineNumber": 1077, "col_offset": 47, "nodeName": "res", "type": "Any"}, {"lineNumber": 1078, "col_offset": 26, "nodeName": "res", "type": "Any"}, {"lineNumber": 1078, "col_offset": 48, "nodeName": "atol", "type": "float"}, {"lineNumber": 1086, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1087, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1088, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1088, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1089, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1089, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1090, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1090, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1090, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1090, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1090, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1090, "col_offset": 47, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1090, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1094, "col_offset": 41, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1095, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1095, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 1096, "col_offset": 55, "nodeName": "res", "type": "Any"}, {"lineNumber": 1103, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1104, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1128, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1131, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1132, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1136, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1136, "col_offset": 50, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1148, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1148, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1149, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1150, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1151, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1152, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1152, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1153, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1154, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1154, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1154, "col_offset": 29, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1154, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1154, "col_offset": 41, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1154, "col_offset": 47, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1154, "col_offset": 53, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1157, "col_offset": 53, "nodeName": "method", "type": "Any"}, {"lineNumber": 1158, "col_offset": 12, "nodeName": "_assert_unable_to_find_basic_feasible_sol", "type": "Callable[[Any], Any]"}, {"lineNumber": 1158, "col_offset": 54, "nodeName": "res", "type": "Any"}, {"lineNumber": 1160, "col_offset": 12, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1160, "col_offset": 28, "nodeName": "res", "type": "Any"}, {"lineNumber": 1166, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1168, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1169, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1178, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1181, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1181, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1182, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1182, "col_offset": 26, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 1182, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1182, "col_offset": 35, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1182, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1182, "col_offset": 47, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1182, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1192, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1198, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1199, "col_offset": 30, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1199, "col_offset": 41, "nodeName": "b_ub", "type": "numpy.ndarray"}, {"lineNumber": 1199, "col_offset": 55, "nodeName": "options", "type": "Any"}, {"lineNumber": 1200, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1215, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1218, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1218, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1219, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1219, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1220, "col_offset": 19, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1220, "col_offset": 27, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1220, "col_offset": 30, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1220, "col_offset": 36, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1220, "col_offset": 42, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1220, "col_offset": 48, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1220, "col_offset": 54, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1225, "col_offset": 8, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1228, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1231, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1231, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1232, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1232, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1233, "col_offset": 19, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1233, "col_offset": 27, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1233, "col_offset": 30, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1233, "col_offset": 36, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1233, "col_offset": 42, "nodeName": "A_eq", "type": "Any"}, {"lineNumber": 1233, "col_offset": 48, "nodeName": "b_eq", "type": "Any"}, {"lineNumber": 1233, "col_offset": 54, "nodeName": "bounds", "type": "List[Union[Tuple[int, None], Tuple[None, None]]]"}, {"lineNumber": 1236, "col_offset": 42, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1236, "col_offset": 60, "nodeName": "rtol", "type": "float"}, {"lineNumber": 1237, "col_offset": 42, "nodeName": "desired_fun", "type": "float"}, {"lineNumber": 1237, "col_offset": 60, "nodeName": "rtol", "type": "float"}, {"lineNumber": 1247, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1247, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 1259, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1260, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1260, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1261, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1261, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1262, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1262, "col_offset": 26, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1262, "col_offset": 29, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1262, "col_offset": 35, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1262, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1262, "col_offset": 47, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1262, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1272, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1273, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1277, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1277, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1290, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1293, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1293, "col_offset": 50, "nodeName": "options", "type": "Any"}, {"lineNumber": 1301, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1302, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1303, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1310, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1310, "col_offset": 17, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1312, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 1312, "col_offset": 50, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1320, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1327, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1328, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1329, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1329, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1330, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1330, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1330, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1330, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1330, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1330, "col_offset": 47, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1330, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1355, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1355, "col_offset": 17, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1357, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1358, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1358, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1361, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1361, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1362, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1363, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1363, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1364, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1364, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1365, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1365, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1366, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1366, "col_offset": 26, "nodeName": "c", "type": "List[float]"}, {"lineNumber": 1366, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1366, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1366, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[float]]"}, {"lineNumber": 1366, "col_offset": 47, "nodeName": "b_eq", "type": "List[float]"}, {"lineNumber": 1366, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1368, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 1403, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1406, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1422, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1422, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1423, "col_offset": 12, "nodeName": "test_bug_5400", "type": "Callable[[], Any]"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "options", "type": "Dict[str, float]"}, {"lineNumber": 1429, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1429, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1430, "col_offset": 12, "nodeName": "test_bug_7237", "type": "Callable[[], Any]"}, {"lineNumber": 1435, "col_offset": 8, "nodeName": "options", "type": "Dict[str, float]"}, {"lineNumber": 1436, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1436, "col_offset": 26, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1437, "col_offset": 12, "nodeName": "test_bug_8174", "type": "Callable[[], Any]"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1446, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "test_bug_5400", "type": "Callable[[], Any]"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1453, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1453, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 1463, "col_offset": 16, "nodeName": "intp", "type": "Any"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1478, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1478, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1479, "col_offset": 19, "nodeName": "test_bug_6139", "type": "Callable[[], Any]"}, {"lineNumber": 1484, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1485, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1485, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1486, "col_offset": 12, "nodeName": "test_bug_7237", "type": "Callable[[], Any]"}, {"lineNumber": 1491, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1492, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1492, "col_offset": 26, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1493, "col_offset": 12, "nodeName": "test_bug_8174", "type": "Callable[[], Any]"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1499, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1521, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 1537, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1540, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1540, "col_offset": 23, "nodeName": "MatrixRankWarning", "type": "Any"}, {"lineNumber": 1541, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1541, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1543, "col_offset": 17, "nodeName": "key", "type": "str"}, {"lineNumber": 1544, "col_offset": 12, "nodeName": "o", "type": "Dict[str, bool]"}, {"lineNumber": 1546, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1546, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1546, "col_offset": 29, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1546, "col_offset": 35, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1546, "col_offset": 41, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1546, "col_offset": 47, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1546, "col_offset": 53, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 1553, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1554, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1554, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1555, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1555, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1556, "col_offset": 17, "nodeName": "key", "type": "str"}, {"lineNumber": 1562, "col_offset": 34, "nodeName": "permc_spec", "type": "str"}, {"lineNumber": 1563, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1590, "col_offset": 12, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1592, "col_offset": 12, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1594, "col_offset": 31, "nodeName": "A", "type": "Any"}, {"lineNumber": 1594, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 1594, "col_offset": 49, "nodeName": "method", "type": "str"}, {"lineNumber": 1594, "col_offset": 70, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1595, "col_offset": 31, "nodeName": "A", "type": "Any"}, {"lineNumber": 1595, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 1595, "col_offset": 49, "nodeName": "method", "type": "str"}, {"lineNumber": 1596, "col_offset": 24, "nodeName": "res1", "type": "Any"}, {"lineNumber": 1596, "col_offset": 34, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1604, "col_offset": 24, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1604, "col_offset": 34, "nodeName": "bounds", "type": "List[Tuple[None, int]]"}, {"lineNumber": 1605, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1612, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 1612, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 1612, "col_offset": 48, "nodeName": "method", "type": "str"}, {"lineNumber": 1619, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1620, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1620, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1621, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1621, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1622, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1622, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1623, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1623, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1631, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1632, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 1632, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 1632, "col_offset": 48, "nodeName": "method", "type": "str"}, {"lineNumber": 1636, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1645, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1646, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1646, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1647, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1647, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1648, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1648, "col_offset": 26, "nodeName": "c", "type": "List[int]"}, {"lineNumber": 1648, "col_offset": 29, "nodeName": "A_ub", "type": "List[List[int]]"}, {"lineNumber": 1648, "col_offset": 35, "nodeName": "b_ub", "type": "List[int]"}, {"lineNumber": 1648, "col_offset": 41, "nodeName": "A_eq", "type": "List[List[int]]"}, {"lineNumber": 1648, "col_offset": 47, "nodeName": "b_eq", "type": "List[int]"}, {"lineNumber": 1648, "col_offset": 53, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1650, "col_offset": 20, "nodeName": "success", "type": "Any"}, {"lineNumber": 1662, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1667, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1667, "col_offset": 50, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1667, "col_offset": 67, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1668, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1668, "col_offset": 59, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1669, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1675, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1675, "col_offset": 50, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1675, "col_offset": 67, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1676, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1676, "col_offset": 59, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1677, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1683, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1683, "col_offset": 50, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1683, "col_offset": 67, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1684, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1684, "col_offset": 59, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1685, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1690, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1694, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1694, "col_offset": 50, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1694, "col_offset": 67, "nodeName": "x_star", "type": "numpy.ndarray"}, {"lineNumber": 1695, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1695, "col_offset": 59, "nodeName": "x_star", "type": "numpy.ndarray"}, {"lineNumber": 1696, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1702, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1702, "col_offset": 50, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1702, "col_offset": 67, "nodeName": "bad_guess", "type": "List[Union[int, float]]"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1707, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 1707, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1708, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1709, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1709, "col_offset": 23, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1710, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1710, "col_offset": 23, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 1711, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1711, "col_offset": 23, "nodeName": "LinAlgWarning", "type": "Any"}, {"lineNumber": 1712, "col_offset": 18, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1712, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 1713, "col_offset": 19, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1713, "col_offset": 27, "nodeName": "c", "type": "Any"}, {"lineNumber": 1714, "col_offset": 19, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "res2", "type": "Any"}, {"lineNumber": 1718, "col_offset": 16, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1718, "col_offset": 27, "nodeName": "nit", "type": "Any"}, {"lineNumber": 1742, "col_offset": 8, "nodeName": "self", "type": "TestAutoscaleIP"}, {"lineNumber": 1743, "col_offset": 15, "nodeName": "AutoscaleTests", "type": "Type[AutoscaleTests]"}, {"lineNumber": 1756, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1756, "col_offset": 50, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1756, "col_offset": 67, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1757, "col_offset": 41, "nodeName": "f_star", "type": "float"}, {"lineNumber": 1757, "col_offset": 59, "nodeName": "x_star", "type": "List[Union[float, int]]"}, {"lineNumber": 1758, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 1764, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 1764, "col_offset": 50, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1764, "col_offset": 67, "nodeName": "bad_guess", "type": "List[Union[int, float]]"}, {"lineNumber": 1765, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "A_list", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "b_list", "type": "List[Union[int, float]]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "n", "type": "int"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "n", "type": "int"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "n", "type": "int"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "m", "type": "int"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "j", "type": "int"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "x0_bounds", "type": "Tuple[None, None]"}, {"lineNumber": 267, "col_offset": 60, "nodeName": "x1_bounds", "type": "Tuple[int, None]"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 303, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 317, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "method", "type": "Any"}, {"lineNumber": 328, "col_offset": 48, "nodeName": "options", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 330, "col_offset": 47, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "method", "type": "Any"}, {"lineNumber": 340, "col_offset": 48, "nodeName": "options", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "inf", "type": "Any"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "inf", "type": "Any"}, {"lineNumber": 348, "col_offset": 59, "nodeName": "bad_bound", "type": "Union[List[Tuple[int, int]], List[Union[Tuple[int, int], Tuple[int, int, int]]], List[Union[Tuple[int, int], Tuple[Any, Any]]]]"}, {"lineNumber": 357, "col_offset": 34, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "inf", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 373, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "inf", "type": "Any"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 395, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 408, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 415, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 420, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 429, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 438, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 439, "col_offset": 57, "nodeName": "sum", "type": "Any"}, {"lineNumber": 439, "col_offset": 64, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 447, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 456, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 457, "col_offset": 57, "nodeName": "sum", "type": "Any"}, {"lineNumber": 457, "col_offset": 64, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 465, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 466, "col_offset": 57, "nodeName": "sum", "type": "Any"}, {"lineNumber": 466, "col_offset": 64, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 473, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 479, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 488, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 488, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 497, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 497, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 510, "col_offset": 18, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 510, "col_offset": 47, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 529, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 546, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 557, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 565, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 589, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 589, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 601, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 613, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 613, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 622, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 622, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 635, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 635, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 646, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 646, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 655, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 655, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 660, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 669, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 669, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 676, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 676, "col_offset": 47, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 680, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 701, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 721, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 721, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 722, "col_offset": 21, "nodeName": "res", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 733, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 746, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 746, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 746, "col_offset": 38, "nodeName": "items", "type": "Any"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 752, "col_offset": 44, "nodeName": "get", "type": "Any"}, {"lineNumber": 754, "col_offset": 49, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 767, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 773, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 773, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 785, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 798, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 798, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 819, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 844, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 844, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 850, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 850, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 861, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 861, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 879, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 879, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 895, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 897, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 897, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 904, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 905, "col_offset": 18, "nodeName": "pi", "type": "Any"}, {"lineNumber": 905, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 906, "col_offset": 43, "nodeName": "sin", "type": "Any"}, {"lineNumber": 906, "col_offset": 50, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 909, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 909, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 910, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 910, "col_offset": 63, "nodeName": "m", "type": "int"}, {"lineNumber": 915, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "pi", "type": "Any"}, {"lineNumber": 916, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 916, "col_offset": 36, "nodeName": "m", "type": "int"}, {"lineNumber": 917, "col_offset": 43, "nodeName": "sin", "type": "Any"}, {"lineNumber": 917, "col_offset": 50, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 920, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 920, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 18, "nodeName": "pi", "type": "Any"}, {"lineNumber": 927, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 927, "col_offset": 36, "nodeName": "m", "type": "int"}, {"lineNumber": 928, "col_offset": 43, "nodeName": "sin", "type": "Any"}, {"lineNumber": 928, "col_offset": 50, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 931, "col_offset": 18, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 931, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 931, "col_offset": 47, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 935, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 951, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 952, "col_offset": 54, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 952, "col_offset": 68, "nodeName": "c", "type": "numpy.ndarray"}, {"lineNumber": 972, "col_offset": 25, "nodeName": "h", "type": "float"}, {"lineNumber": 973, "col_offset": 22, "nodeName": "h", "type": "float"}, {"lineNumber": 992, "col_offset": 43, "nodeName": "f", "type": "float"}, {"lineNumber": 992, "col_offset": 46, "nodeName": "f", "type": "float"}, {"lineNumber": 992, "col_offset": 58, "nodeName": "g", "type": "float"}, {"lineNumber": 993, "col_offset": 49, "nodeName": "f", "type": "float"}, {"lineNumber": 993, "col_offset": 52, "nodeName": "f", "type": "float"}, {"lineNumber": 993, "col_offset": 58, "nodeName": "g", "type": "float"}, {"lineNumber": 994, "col_offset": 39, "nodeName": "f", "type": "float"}, {"lineNumber": 994, "col_offset": 65, "nodeName": "g", "type": "float"}, {"lineNumber": 995, "col_offset": 45, "nodeName": "f", "type": "float"}, {"lineNumber": 995, "col_offset": 52, "nodeName": "f", "type": "float"}, {"lineNumber": 995, "col_offset": 64, "nodeName": "g", "type": "float"}, {"lineNumber": 996, "col_offset": 38, "nodeName": "f", "type": "float"}, {"lineNumber": 996, "col_offset": 41, "nodeName": "f", "type": "float"}, {"lineNumber": 996, "col_offset": 69, "nodeName": "g", "type": "float"}, {"lineNumber": 997, "col_offset": 45, "nodeName": "f", "type": "float"}, {"lineNumber": 997, "col_offset": 48, "nodeName": "f", "type": "float"}, {"lineNumber": 997, "col_offset": 70, "nodeName": "g", "type": "float"}, {"lineNumber": 1006, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1008, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1009, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1011, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1011, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1026, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1031, "col_offset": 29, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1031, "col_offset": 50, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1034, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1051, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1061, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1061, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1062, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1064, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1065, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1066, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1068, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1068, "col_offset": 54, "nodeName": "options", "type": "Dict[str, Union[bool, float]]"}, {"lineNumber": 1077, "col_offset": 26, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 1078, "col_offset": 33, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1088, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1089, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1091, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1091, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1095, "col_offset": 24, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1095, "col_offset": 33, "nodeName": "res", "type": "Any"}, {"lineNumber": 1096, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1096, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 1136, "col_offset": 29, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1136, "col_offset": 50, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1148, "col_offset": 24, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1149, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1149, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1150, "col_offset": 28, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1152, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1155, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1155, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1157, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 1157, "col_offset": 53, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1180, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1180, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1181, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1183, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1183, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1199, "col_offset": 55, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1200, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1217, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1218, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1219, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1221, "col_offset": 34, "nodeName": "method", "type": "Any"}, {"lineNumber": 1221, "col_offset": 55, "nodeName": "options", "type": "Any"}, {"lineNumber": 1230, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1230, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1231, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1232, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1234, "col_offset": 34, "nodeName": "method", "type": "Any"}, {"lineNumber": 1234, "col_offset": 55, "nodeName": "options", "type": "Any"}, {"lineNumber": 1247, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1247, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1260, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1261, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1263, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1263, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1277, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1277, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1293, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1293, "col_offset": 50, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1312, "col_offset": 29, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1327, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1329, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1331, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1331, "col_offset": 54, "nodeName": "options", "type": "Any"}, {"lineNumber": 1358, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1360, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1360, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1361, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1363, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1364, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1365, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1367, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 1367, "col_offset": 54, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 1422, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1429, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1435, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1436, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexBland"}, {"lineNumber": 1453, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1454, "col_offset": 30, "nodeName": "OptimizeWarning", "type": "Any"}, {"lineNumber": 1455, "col_offset": 16, "nodeName": "test_bug_8174", "type": "Callable[[], Any]"}, {"lineNumber": 1463, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1470, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1470, "col_offset": 14, "nodeName": "TestLinprogSimplexNoPresolve", "type": "Type[TestLinprogSimplexNoPresolve]"}, {"lineNumber": 1470, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1478, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1484, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1485, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1491, "col_offset": 8, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1492, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1521, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1530, "col_offset": 14, "nodeName": "TestLinprogIPSparse", "type": "Type[TestLinprogIPSparse]"}, {"lineNumber": 1530, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1539, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1539, "col_offset": 27, "nodeName": "UmfpackWarning", "type": "Any"}, {"lineNumber": 1540, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1541, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1543, "col_offset": 22, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1543, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 1543, "col_offset": 51, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1547, "col_offset": 33, "nodeName": "method", "type": "str"}, {"lineNumber": 1547, "col_offset": 54, "nodeName": "o", "type": "Dict[str, bool]"}, {"lineNumber": 1554, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1555, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1556, "col_offset": 22, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1556, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 1556, "col_offset": 51, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 1562, "col_offset": 16, "nodeName": "o", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 1563, "col_offset": 22, "nodeName": "linprog", "type": "Callable[..., Any]"}, {"lineNumber": 1563, "col_offset": 30, "nodeName": "c", "type": "Any"}, {"lineNumber": 1563, "col_offset": 33, "nodeName": "A_ub", "type": "Any"}, {"lineNumber": 1563, "col_offset": 39, "nodeName": "b_ub", "type": "Any"}, {"lineNumber": 1563, "col_offset": 45, "nodeName": "A_eq", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 51, "nodeName": "b_eq", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 57, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1565, "col_offset": 16, "nodeName": "_assert_success", "type": "Callable[..., Any]"}, {"lineNumber": 1565, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1577, "col_offset": 14, "nodeName": "TestLinprogIPSparsePresolve", "type": "Type[TestLinprogIPSparsePresolve]"}, {"lineNumber": 1577, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1594, "col_offset": 49, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1595, "col_offset": 49, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1605, "col_offset": 29, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1612, "col_offset": 48, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1620, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1621, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1622, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1623, "col_offset": 34, "nodeName": "A", "type": "Any"}, {"lineNumber": 1623, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 1623, "col_offset": 52, "nodeName": "method", "type": "str"}, {"lineNumber": 1631, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1632, "col_offset": 48, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1633, "col_offset": 42, "nodeName": "maxiter", "type": "Any"}, {"lineNumber": 1646, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1647, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1649, "col_offset": 33, "nodeName": "method", "type": "str"}, {"lineNumber": 1650, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 1667, "col_offset": 29, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1667, "col_offset": 50, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1675, "col_offset": 29, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1675, "col_offset": 50, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1683, "col_offset": 29, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1683, "col_offset": 50, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1694, "col_offset": 29, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1694, "col_offset": 50, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1702, "col_offset": 29, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1702, "col_offset": 50, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1707, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1707, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 1709, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1710, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1711, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1712, "col_offset": 34, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 1712, "col_offset": 42, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 1712, "col_offset": 52, "nodeName": "method", "type": "str"}, {"lineNumber": 1713, "col_offset": 35, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 1713, "col_offset": 43, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 1713, "col_offset": 53, "nodeName": "method", "type": "str"}, {"lineNumber": 1713, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 1714, "col_offset": 27, "nodeName": "c", "type": "Any"}, {"lineNumber": 1714, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 1714, "col_offset": 39, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 1714, "col_offset": 47, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 1714, "col_offset": 57, "nodeName": "method", "type": "str"}, {"lineNumber": 1714, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 1718, "col_offset": 16, "nodeName": "res3", "type": "Any"}, {"lineNumber": 1718, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 1756, "col_offset": 29, "nodeName": "self", "type": "TestAutoscaleRS"}, {"lineNumber": 1756, "col_offset": 50, "nodeName": "self", "type": "TestAutoscaleRS"}, {"lineNumber": 1764, "col_offset": 29, "nodeName": "self", "type": "TestAutoscaleRS"}, {"lineNumber": 1764, "col_offset": 50, "nodeName": "self", "type": "TestAutoscaleRS"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "A_row", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "n", "type": "int"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "j1", "type": "int"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "res", "type": "Any"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 340, "col_offset": 48, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "inf", "type": "Any"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 746, "col_offset": 38, "nodeName": "options", "type": "Any"}, {"lineNumber": 752, "col_offset": 44, "nodeName": "options", "type": "Any"}, {"lineNumber": 773, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 773, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 798, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 798, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 819, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 844, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 850, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 850, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 897, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 897, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 905, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 905, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 905, "col_offset": 39, "nodeName": "m", "type": "int"}, {"lineNumber": 906, "col_offset": 26, "nodeName": "cos", "type": "Any"}, {"lineNumber": 906, "col_offset": 33, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 906, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 910, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 917, "col_offset": 26, "nodeName": "cos", "type": "Any"}, {"lineNumber": 917, "col_offset": 33, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 917, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 928, "col_offset": 26, "nodeName": "cos", "type": "Any"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 928, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 952, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1011, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1011, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1034, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 1061, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1068, "col_offset": 33, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1068, "col_offset": 54, "nodeName": "self", "type": "AutoscaleTests"}, {"lineNumber": 1091, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1091, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1096, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1096, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 1149, "col_offset": 21, "nodeName": "A_ub", "type": "numpy.ndarray"}, {"lineNumber": 1155, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1155, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1157, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 1180, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1183, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1183, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1221, "col_offset": 34, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1221, "col_offset": 55, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1230, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1234, "col_offset": 34, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1234, "col_offset": 55, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1263, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1263, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1327, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 1331, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1331, "col_offset": 54, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1360, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1367, "col_offset": 33, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1423, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1423, "col_offset": 18, "nodeName": "TestLinprogSimplexDefault", "type": "Type[TestLinprogSimplexDefault]"}, {"lineNumber": 1423, "col_offset": 45, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1430, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1430, "col_offset": 18, "nodeName": "TestLinprogSimplexDefault", "type": "Type[TestLinprogSimplexDefault]"}, {"lineNumber": 1430, "col_offset": 45, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1437, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1437, "col_offset": 18, "nodeName": "TestLinprogSimplexDefault", "type": "Type[TestLinprogSimplexDefault]"}, {"lineNumber": 1437, "col_offset": 45, "nodeName": "self", "type": "TestLinprogSimplexDefault"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1447, "col_offset": 18, "nodeName": "TestLinprogSimplexBland", "type": "Type[TestLinprogSimplexBland]"}, {"lineNumber": 1447, "col_offset": 43, "nodeName": "self", "type": "TestLinprogSimplexBland"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1479, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1479, "col_offset": 25, "nodeName": "TestLinprogSimplexNoPresolve", "type": "Type[TestLinprogSimplexNoPresolve]"}, {"lineNumber": 1479, "col_offset": 55, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1486, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1486, "col_offset": 18, "nodeName": "TestLinprogSimplexNoPresolve", "type": "Type[TestLinprogSimplexNoPresolve]"}, {"lineNumber": 1486, "col_offset": 48, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1493, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1493, "col_offset": 18, "nodeName": "TestLinprogSimplexNoPresolve", "type": "Type[TestLinprogSimplexNoPresolve]"}, {"lineNumber": 1493, "col_offset": 48, "nodeName": "self", "type": "TestLinprogSimplexNoPresolve"}, {"lineNumber": 1539, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1543, "col_offset": 22, "nodeName": "self", "type": "TestLinprogIPSparse"}, {"lineNumber": 1543, "col_offset": 35, "nodeName": "key", "type": "str"}, {"lineNumber": 1543, "col_offset": 51, "nodeName": "self", "type": "TestLinprogIPSparse"}, {"lineNumber": 1547, "col_offset": 33, "nodeName": "self", "type": "TestLinprogIPSparse"}, {"lineNumber": 1556, "col_offset": 22, "nodeName": "self", "type": "TestLinprogIPSparse"}, {"lineNumber": 1556, "col_offset": 35, "nodeName": "key", "type": "str"}, {"lineNumber": 1556, "col_offset": 51, "nodeName": "self", "type": "TestLinprogIPSparse"}, {"lineNumber": 1564, "col_offset": 37, "nodeName": "method", "type": "str"}, {"lineNumber": 1564, "col_offset": 58, "nodeName": "o", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 1623, "col_offset": 52, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1631, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1649, "col_offset": 33, "nodeName": "self", "type": "TestLinprogIPSpecific"}, {"lineNumber": 1712, "col_offset": 52, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1713, "col_offset": 53, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1713, "col_offset": 69, "nodeName": "res", "type": "Any"}, {"lineNumber": 1714, "col_offset": 57, "nodeName": "self", "type": "TestLinprogRSCommon"}, {"lineNumber": 1714, "col_offset": 73, "nodeName": "res", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "n", "type": "int"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 746, "col_offset": 38, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 752, "col_offset": 44, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 906, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 917, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 928, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1096, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 1157, "col_offset": 11, "nodeName": "self", "type": "LinprogCommonTests"}, {"lineNumber": 1455, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1455, "col_offset": 22, "nodeName": "TestLinprogSimplexBland", "type": "Type[TestLinprogSimplexBland]"}, {"lineNumber": 1455, "col_offset": 47, "nodeName": "self", "type": "TestLinprogSimplexBland"}, {"lineNumber": 1564, "col_offset": 37, "nodeName": "self", "type": "TestLinprogIPSparse"}]