[{"lineNumber": 1291, "col_offset": 0, "nodeName": "test_zoom_output_shape", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "eps", "type": "float"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "ndimage_to_numpy_mode", "type": "Dict[str, str]"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "npad", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "padded", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "atol", "type": "float"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "data", "type": "List[Union[List[int], List[Union[float, int]]]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "expected_result", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "npad", "type": "int"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "center_slice", "type": "Tuple[slice, ...]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "out1", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "data", "type": "List[Union[List[int], List[Union[float, int]]]]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "tform_original", "type": "Any"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "offset_original", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "tform_h1", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "tform_h2", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "out1", "type": "Any"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "out3", "type": "Any"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "tform_h1", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "tform_h2", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 869, "col_offset": 23, "nodeName": "shift", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 995, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "expected_result", "type": "numpy.ndarray"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1020, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 1032, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "shift", "type": "Tuple[float, float]"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "npad", "type": "int"}, {"lineNumber": 1037, "col_offset": 8, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "center_slice", "type": "Tuple[slice, ...]"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 1051, "col_offset": 12, "nodeName": "z", "type": "Union[int, List[int]]"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1069, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "dim", "type": "int"}, {"lineNumber": 1097, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "zoom", "type": "Tuple[float, float, float]"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "zoom", "type": "Tuple[float, float, float]"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1151, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1159, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1162, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1183, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1188, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1191, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1194, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1199, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1200, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1205, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1208, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1215, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1219, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1223, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1229, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1238, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1251, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1252, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1256, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1266, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1282, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 1287, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 1293, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1294, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "pad", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "npad", "type": "int"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "padded", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "order", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "order", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 213, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "order", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "filtered", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 247, "col_offset": 52, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 61, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 249, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "float64", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 260, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "data", "type": "List[Union[List[int], List[Union[float, int]]]]"}, {"lineNumber": 292, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 305, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 305, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 318, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 318, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 331, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 333, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 344, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 346, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 357, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 359, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 373, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 48, "nodeName": "mapping1", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 375, "col_offset": 42, "nodeName": "out", "type": "Any"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "mapping2", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 377, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 388, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 389, "col_offset": 25, "nodeName": "int32", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 390, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "mapping", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 404, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "expected_result", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 434, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "pad", "type": "Any"}, {"lineNumber": 435, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "npad", "type": "int"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "returned", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 469, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 48, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 486, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 489, "col_offset": 14, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 489, "col_offset": 44, "nodeName": "idx", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 490, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 497, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 497, "col_offset": 40, "nodeName": "float64", "type": "Any"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "shift", "type": "Any"}, {"lineNumber": 500, "col_offset": 29, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 45, "nodeName": "idx", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "out1", "type": "Any"}, {"lineNumber": 502, "col_offset": 40, "nodeName": "out2", "type": "Any"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 509, "col_offset": 44, "nodeName": "idx", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 510, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 515, "col_offset": 14, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 515, "col_offset": 49, "nodeName": "idx", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 516, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 518, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 520, "col_offset": 52, "nodeName": "idx", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 522, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "returned", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 544, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 544, "col_offset": 44, "nodeName": "idx", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 546, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "MemoryError", "type": "Type[MemoryError]"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 565, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 565, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 566, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 571, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 572, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 577, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 578, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 583, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 584, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 592, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 598, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 600, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 600, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 607, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 609, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 618, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 620, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 629, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 629, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 631, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 640, "col_offset": 12, "nodeName": "order", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "filtered", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 23, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 644, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 644, "col_offset": 39, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 647, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 653, "col_offset": 31, "nodeName": "float64", "type": "Any"}, {"lineNumber": 654, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 654, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 656, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 661, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 661, "col_offset": 39, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 662, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 667, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 667, "col_offset": 39, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 675, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[int], List[Union[float, int]]]]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 677, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 684, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 684, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 686, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 693, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 693, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 695, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 702, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 702, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 704, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 711, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 711, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 713, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 720, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 722, "col_offset": 49, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 726, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 728, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 729, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 729, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 731, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 731, "col_offset": 39, "nodeName": "out", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 733, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 733, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 740, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 740, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 742, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 749, "col_offset": 39, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 751, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 757, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 757, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 759, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 765, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 765, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 773, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "out1", "type": "Any"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 778, "col_offset": 40, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 779, "col_offset": 34, "nodeName": "out1", "type": "Any"}, {"lineNumber": 779, "col_offset": 40, "nodeName": "out2", "type": "Any"}, {"lineNumber": 784, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 785, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "out1", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 790, "col_offset": 40, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 791, "col_offset": 34, "nodeName": "out1", "type": "Any"}, {"lineNumber": 791, "col_offset": 40, "nodeName": "out2", "type": "Any"}, {"lineNumber": 796, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "order", "type": "Any"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 802, "col_offset": 12, "nodeName": "filtered", "type": "numpy.ndarray"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 803, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 805, "col_offset": 19, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 807, "col_offset": 40, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 807, "col_offset": 50, "nodeName": "tform_original", "type": "Any"}, {"lineNumber": 810, "col_offset": 15, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 810, "col_offset": 40, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 810, "col_offset": 50, "nodeName": "tform_h1", "type": "Any"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 812, "col_offset": 40, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 812, "col_offset": 50, "nodeName": "tform_h2", "type": "Any"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "out1", "type": "Any"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 814, "col_offset": 32, "nodeName": "out3", "type": "Any"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 824, "col_offset": 19, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 825, "col_offset": 19, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 826, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 826, "col_offset": 34, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 826, "col_offset": 60, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 826, "col_offset": 66, "nodeName": "tform_h2", "type": "Any"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 840, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 846, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 847, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "returned", "type": "Any"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 856, "col_offset": 14, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 858, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 868, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 880, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 881, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 891, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 891, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 892, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 896, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 897, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 897, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 898, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 903, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 903, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 904, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 908, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 909, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 909, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 910, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 910, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 921, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 922, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 924, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 924, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 925, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 925, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 932, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 933, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 942, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 942, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 943, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 952, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 952, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 953, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 953, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 962, "col_offset": 12, "nodeName": "order", "type": "Any"}, {"lineNumber": 963, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 965, "col_offset": 12, "nodeName": "filtered", "type": "numpy.ndarray"}, {"lineNumber": 965, "col_offset": 23, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "shift", "type": "Any"}, {"lineNumber": 966, "col_offset": 28, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 967, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 967, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 976, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 995, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 997, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "expected_result", "type": "numpy.ndarray"}, {"lineNumber": 1007, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1019, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1020, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1021, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1037, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1037, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1038, "col_offset": 13, "nodeName": "pad", "type": "Any"}, {"lineNumber": 1038, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 1038, "col_offset": 26, "nodeName": "npad", "type": "int"}, {"lineNumber": 1039, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1045, "col_offset": 12, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 1052, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1053, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1062, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1063, "col_offset": 14, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 1064, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 1064, "col_offset": 32, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1067, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1068, "col_offset": 15, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1068, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 1069, "col_offset": 15, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1069, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1071, "col_offset": 34, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1072, "col_offset": 34, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1077, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 1081, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 1082, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1086, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1088, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1097, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1100, "col_offset": 14, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1100, "col_offset": 27, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1100, "col_offset": 32, "nodeName": "zoom", "type": "Tuple[float, float, float]"}, {"lineNumber": 1101, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1102, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1102, "col_offset": 39, "nodeName": "ref", "type": "Any"}, {"lineNumber": 1105, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1107, "col_offset": 14, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1107, "col_offset": 27, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1107, "col_offset": 32, "nodeName": "zoom", "type": "Tuple[float, float, float]"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 1108, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1135, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1135, "col_offset": 65, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1136, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1154, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1154, "col_offset": 29, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1155, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1155, "col_offset": 39, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1162, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1166, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1166, "col_offset": 29, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1167, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1167, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1167, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1172, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1175, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1180, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 1181, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 1182, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1183, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1183, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1184, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1184, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1184, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1188, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1191, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1194, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1194, "col_offset": 29, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1195, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1195, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1195, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1199, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1200, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1205, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1208, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1208, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1209, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1214, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1215, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1219, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1223, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1223, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1224, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1232, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 1233, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1238, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 1239, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1239, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1240, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1240, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1240, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1247, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 1252, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1252, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1253, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1253, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1256, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1263, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1266, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1282, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1282, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1283, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1283, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1287, "col_offset": 12, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1288, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1288, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 1288, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "shift", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "shift", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 75, "col_offset": 65, "nodeName": "mode", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "ndimage_to_numpy_mode", "type": "Dict[str, str]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 81, "col_offset": 69, "nodeName": "order", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "mode", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "mode", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "atol", "type": "float"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 213, "col_offset": 57, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 45, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 247, "col_offset": 61, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 260, "col_offset": 68, "nodeName": "order", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 270, "col_offset": 68, "nodeName": "order", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 280, "col_offset": 68, "nodeName": "order", "type": "Any"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 293, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 319, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 332, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 357, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 358, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 374, "col_offset": 56, "nodeName": "order", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 376, "col_offset": 56, "nodeName": "order", "type": "Any"}, {"lineNumber": 388, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 388, "col_offset": 69, "nodeName": "order", "type": "Any"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "out", "type": "Any"}, {"lineNumber": 389, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "order", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "ndimage_to_numpy_mode", "type": "Dict[str, str]"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 436, "col_offset": 52, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 437, "col_offset": 26, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "center_slice", "type": "Tuple[slice, ...]"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 441, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 456, "col_offset": 37, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "geometric_transform", "type": "Any"}, {"lineNumber": 458, "col_offset": 51, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 458, "col_offset": 57, "nodeName": "mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 66, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 460, "col_offset": 50, "nodeName": "returned", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 489, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 489, "col_offset": 55, "nodeName": "order", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 497, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 500, "col_offset": 46, "nodeName": "order", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 501, "col_offset": 56, "nodeName": "order", "type": "Any"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 508, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 513, "col_offset": 39, "nodeName": "shift", "type": "Any"}, {"lineNumber": 513, "col_offset": 53, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 515, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "shift", "type": "Any"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "indices", "type": "Any"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "shift", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 534, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 537, "col_offset": 47, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 537, "col_offset": 53, "nodeName": "idx", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 538, "col_offset": 50, "nodeName": "returned", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 539, "col_offset": 46, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 555, "col_offset": 63, "nodeName": "n", "type": "int"}, {"lineNumber": 555, "col_offset": 66, "nodeName": "n", "type": "int"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "map_coordinates", "type": "Any"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 560, "col_offset": 66, "nodeName": "e", "type": "MemoryError"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 565, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 565, "col_offset": 58, "nodeName": "order", "type": "Any"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 571, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "order", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 577, "col_offset": 62, "nodeName": "order", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 583, "col_offset": 62, "nodeName": "order", "type": "Any"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 591, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 592, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 594, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 596, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 599, "col_offset": 54, "nodeName": "order", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 608, "col_offset": 54, "nodeName": "order", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 619, "col_offset": 54, "nodeName": "order", "type": "Any"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 629, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 630, "col_offset": 55, "nodeName": "order", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 641, "col_offset": 45, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 644, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 645, "col_offset": 55, "nodeName": "order", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 653, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 654, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 655, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 661, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 661, "col_offset": 67, "nodeName": "order", "type": "Any"}, {"lineNumber": 667, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 667, "col_offset": 69, "nodeName": "order", "type": "Any"}, {"lineNumber": 668, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 676, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 684, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 685, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 693, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 694, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 702, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 703, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 704, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 711, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 712, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 713, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 721, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 722, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 726, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 728, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 729, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 730, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 731, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 732, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 740, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 741, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 750, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 757, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 758, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 765, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 766, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 767, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 774, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 777, "col_offset": 19, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 777, "col_offset": 44, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 778, "col_offset": 63, "nodeName": "order", "type": "Any"}, {"lineNumber": 784, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 785, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 786, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 789, "col_offset": 44, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 790, "col_offset": 65, "nodeName": "order", "type": "Any"}, {"lineNumber": 796, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 800, "col_offset": 23, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 800, "col_offset": 45, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 803, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 804, "col_offset": 27, "nodeName": "ones", "type": "Any"}, {"lineNumber": 805, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 805, "col_offset": 33, "nodeName": "tform_original", "type": "Any"}, {"lineNumber": 805, "col_offset": 49, "nodeName": "offset_original", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 806, "col_offset": 33, "nodeName": "tform_h1", "type": "Any"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 809, "col_offset": 46, "nodeName": "order", "type": "Any"}, {"lineNumber": 810, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 810, "col_offset": 66, "nodeName": "order", "type": "Any"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 812, "col_offset": 66, "nodeName": "order", "type": "Any"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 815, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 824, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 825, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 825, "col_offset": 33, "nodeName": "tform_h1", "type": "Any"}, {"lineNumber": 826, "col_offset": 34, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 832, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 833, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 834, "col_offset": 32, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 835, "col_offset": 40, "nodeName": "sup", "type": "Any"}, {"lineNumber": 839, "col_offset": 16, "nodeName": "returned", "type": "Any"}, {"lineNumber": 840, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 840, "col_offset": 50, "nodeName": "returned", "type": "Any"}, {"lineNumber": 841, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 841, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 846, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 847, "col_offset": 20, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 848, "col_offset": 37, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 849, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 850, "col_offset": 23, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 850, "col_offset": 48, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 851, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 851, "col_offset": 50, "nodeName": "returned", "type": "Any"}, {"lineNumber": 852, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 852, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 856, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 868, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 871, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 871, "col_offset": 40, "nodeName": "affine", "type": "Any"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "roll", "type": "Any"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 26, "nodeName": "shift", "type": "Any"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 880, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 881, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 884, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "affine", "type": "Any"}, {"lineNumber": 885, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 891, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 891, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 896, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 897, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 897, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 903, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 903, "col_offset": 44, "nodeName": "order", "type": "Any"}, {"lineNumber": 908, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 909, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 909, "col_offset": 43, "nodeName": "order", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 917, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 920, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 921, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 922, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 923, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 924, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 924, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 932, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 942, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 942, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 952, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 952, "col_offset": 48, "nodeName": "order", "type": "Any"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 963, "col_offset": 23, "nodeName": "spline_filter", "type": "Callable[..., Any]"}, {"lineNumber": 963, "col_offset": 45, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 966, "col_offset": 52, "nodeName": "order", "type": "Any"}, {"lineNumber": 976, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 979, "col_offset": 26, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 979, "col_offset": 29, "nodeName": "shift", "type": "Any"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "roll", "type": "Any"}, {"lineNumber": 980, "col_offset": 23, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 980, "col_offset": 26, "nodeName": "shift", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "shift", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 991, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 991, "col_offset": 29, "nodeName": "shift", "type": "Any"}, {"lineNumber": 995, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 996, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 997, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1000, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1000, "col_offset": 26, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1007, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1010, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1010, "col_offset": 26, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1010, "col_offset": 29, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1011, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1020, "col_offset": 44, "nodeName": "order", "type": "Any"}, {"lineNumber": 1020, "col_offset": 61, "nodeName": "prefilter", "type": "Any"}, {"lineNumber": 1022, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 1025, "col_offset": 61, "nodeName": "x", "type": "Any"}, {"lineNumber": 1037, "col_offset": 19, "nodeName": "ndimage_to_numpy_mode", "type": "Dict[str, str]"}, {"lineNumber": 1038, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1038, "col_offset": 37, "nodeName": "pad_mode", "type": "Optional[str]"}, {"lineNumber": 1039, "col_offset": 52, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1040, "col_offset": 26, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1041, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 1041, "col_offset": 16, "nodeName": "shift", "type": "Tuple[float, float]"}, {"lineNumber": 1041, "col_offset": 47, "nodeName": "center_slice", "type": "Tuple[slice, ...]"}, {"lineNumber": 1044, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1044, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 1044, "col_offset": 29, "nodeName": "shift", "type": "Tuple[float, float]"}, {"lineNumber": 1052, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1052, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1053, "col_offset": 18, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1053, "col_offset": 31, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1053, "col_offset": 36, "nodeName": "z", "type": "Union[int, List[int]]"}, {"lineNumber": 1054, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 1054, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1055, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1056, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1057, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1058, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1059, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 1063, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1063, "col_offset": 27, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1063, "col_offset": 40, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1067, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1068, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1069, "col_offset": 15, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1071, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1072, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1077, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1079, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1081, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1082, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 1083, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 1083, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 1086, "col_offset": 18, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 1086, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 1088, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1093, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1093, "col_offset": 51, "nodeName": "dim", "type": "int"}, {"lineNumber": 1097, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1100, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1101, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1105, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1107, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1108, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1120, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1123, "col_offset": 12, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1123, "col_offset": 25, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1123, "col_offset": 28, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "kron", "type": "Any"}, {"lineNumber": 1124, "col_offset": 23, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1137, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 1137, "col_offset": 28, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1138, "col_offset": 12, "nodeName": "kron", "type": "Any"}, {"lineNumber": 1138, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 1145, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1145, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1153, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1154, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1154, "col_offset": 44, "nodeName": "order", "type": "Any"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1161, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1162, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1165, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1166, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1166, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 1172, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1174, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1175, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1179, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1180, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1181, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1182, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1183, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1183, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 1188, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1190, "col_offset": 52, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1191, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1193, "col_offset": 56, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1194, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1194, "col_offset": 60, "nodeName": "order", "type": "Any"}, {"lineNumber": 1199, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1201, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 1201, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1205, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1207, "col_offset": 53, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1208, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1208, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 1210, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1210, "col_offset": 52, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1214, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1216, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 1216, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1219, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1222, "col_offset": 50, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1223, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1223, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 1225, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 1225, "col_offset": 52, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1231, "col_offset": 58, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1232, "col_offset": 15, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1233, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1237, "col_offset": 56, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1238, "col_offset": 19, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1239, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1239, "col_offset": 58, "nodeName": "order", "type": "Any"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1246, "col_offset": 58, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1247, "col_offset": 15, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1250, "col_offset": 62, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 1252, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1252, "col_offset": 73, "nodeName": "order", "type": "Any"}, {"lineNumber": 1256, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1258, "col_offset": 56, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1259, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 1259, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1260, "col_offset": 12, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1260, "col_offset": 27, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1266, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1282, "col_offset": 14, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1286, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1287, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1287, "col_offset": 27, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 1287, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 1293, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1294, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "mode", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "mode", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "npad", "type": "int"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 244, "col_offset": 57, "nodeName": "order", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 436, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 437, "col_offset": 26, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 438, "col_offset": 42, "nodeName": "order", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 441, "col_offset": 57, "nodeName": "mode", "type": "Any"}, {"lineNumber": 442, "col_offset": 46, "nodeName": "order", "type": "Any"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 457, "col_offset": 50, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 458, "col_offset": 66, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "returned", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 470, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 513, "col_offset": 39, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 518, "col_offset": 53, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 522, "col_offset": 53, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 537, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 538, "col_offset": 28, "nodeName": "returned", "type": "Any"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 560, "col_offset": 18, "nodeName": "skip", "type": "Any"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 641, "col_offset": 57, "nodeName": "order", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 777, "col_offset": 19, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 777, "col_offset": 65, "nodeName": "order", "type": "Any"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 789, "col_offset": 67, "nodeName": "order", "type": "Any"}, {"lineNumber": 800, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 800, "col_offset": 57, "nodeName": "order", "type": "Any"}, {"lineNumber": 804, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "offset_original", "type": "Any"}, {"lineNumber": 824, "col_offset": 33, "nodeName": "eye", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 833, "col_offset": 50, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 834, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 835, "col_offset": 17, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 836, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 836, "col_offset": 27, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 839, "col_offset": 27, "nodeName": "affine_transform", "type": "Any"}, {"lineNumber": 839, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "returned", "type": "Any"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "newbyteorder", "type": "Any"}, {"lineNumber": 850, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 850, "col_offset": 68, "nodeName": "out", "type": "Any"}, {"lineNumber": 851, "col_offset": 28, "nodeName": "returned", "type": "Any"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 857, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 871, "col_offset": 72, "nodeName": "order", "type": "Any"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 884, "col_offset": 70, "nodeName": "order", "type": "Any"}, {"lineNumber": 921, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 963, "col_offset": 23, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 963, "col_offset": 57, "nodeName": "order", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 979, "col_offset": 60, "nodeName": "order", "type": "Any"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 990, "col_offset": 64, "nodeName": "order", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 991, "col_offset": 59, "nodeName": "order", "type": "Any"}, {"lineNumber": 1000, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1010, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1010, "col_offset": 29, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1010, "col_offset": 60, "nodeName": "order", "type": "Any"}, {"lineNumber": 1022, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1022, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "shift", "type": "Any"}, {"lineNumber": 1025, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1039, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 1040, "col_offset": 26, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1041, "col_offset": 28, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1041, "col_offset": 40, "nodeName": "order", "type": "Any"}, {"lineNumber": 1044, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1044, "col_offset": 41, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1044, "col_offset": 53, "nodeName": "order", "type": "Any"}, {"lineNumber": 1053, "col_offset": 18, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1053, "col_offset": 45, "nodeName": "order", "type": "Any"}, {"lineNumber": 1054, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 1056, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 1057, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 1059, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 1062, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1063, "col_offset": 27, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1071, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1072, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1083, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 1086, "col_offset": 18, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1087, "col_offset": 57, "nodeName": "order", "type": "Any"}, {"lineNumber": 1093, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1093, "col_offset": 34, "nodeName": "dim", "type": "int"}, {"lineNumber": 1093, "col_offset": 39, "nodeName": "dim", "type": "int"}, {"lineNumber": 1123, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1123, "col_offset": 48, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1124, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1124, "col_offset": 37, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1135, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1137, "col_offset": 48, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1138, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1138, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1138, "col_offset": 37, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1145, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1147, "col_offset": 12, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 1147, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 1153, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1161, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1165, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1180, "col_offset": 11, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1190, "col_offset": 52, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1193, "col_offset": 56, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1201, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1204, "col_offset": 59, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1207, "col_offset": 53, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1210, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 1216, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1218, "col_offset": 62, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1222, "col_offset": 50, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1225, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 1231, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1237, "col_offset": 56, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1246, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1250, "col_offset": 62, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1258, "col_offset": 56, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1260, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1263, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1286, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1287, "col_offset": 27, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1293, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1294, "col_offset": 30, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 436, "col_offset": 36, "nodeName": "npad", "type": "int"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 470, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "empty", "type": "Any"}, {"lineNumber": 560, "col_offset": 18, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 824, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 824, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 833, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 833, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 833, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 834, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 836, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 839, "col_offset": 27, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 839, "col_offset": 73, "nodeName": "out", "type": "Any"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 849, "col_offset": 20, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 849, "col_offset": 37, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 857, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1022, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1022, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1025, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1032, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1039, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 1039, "col_offset": 36, "nodeName": "npad", "type": "int"}, {"lineNumber": 1052, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1056, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1057, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1058, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1059, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1059, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1062, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1124, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1135, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1135, "col_offset": 25, "nodeName": "prod", "type": "Any"}, {"lineNumber": 1135, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1135, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1138, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1144, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1147, "col_offset": 12, "nodeName": "ndimage", "type": "module"}, {"lineNumber": 1147, "col_offset": 36, "nodeName": "mode", "type": "Any"}, {"lineNumber": 1201, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 1216, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 1260, "col_offset": 46, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1263, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1263, "col_offset": 38, "nodeName": "float64", "type": "Any"}, {"lineNumber": 436, "col_offset": 43, "nodeName": "npad", "type": "int"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 457, "col_offset": 50, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 555, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 557, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 558, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 558, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 824, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 833, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 833, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 849, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1022, "col_offset": 29, "nodeName": "order", "type": "Any"}, {"lineNumber": 1039, "col_offset": 43, "nodeName": "npad", "type": "int"}, {"lineNumber": 1055, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1056, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1056, "col_offset": 50, "nodeName": "eps", "type": "float"}, {"lineNumber": 1057, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 1057, "col_offset": 48, "nodeName": "eps", "type": "float"}, {"lineNumber": 1058, "col_offset": 42, "nodeName": "eps", "type": "float"}, {"lineNumber": 1059, "col_offset": 43, "nodeName": "eps", "type": "float"}, {"lineNumber": 1135, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1210, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 1225, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 1260, "col_offset": 46, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 1263, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 555, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1025, "col_offset": 30, "nodeName": "order", "type": "Any"}, {"lineNumber": 1052, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1052, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 1052, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1052, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}]