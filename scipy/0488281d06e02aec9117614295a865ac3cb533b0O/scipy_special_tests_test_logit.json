[{"lineNumber": 7, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "olderr", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "olderr", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "actual", "type": "Any"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "check_logit_out", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "check_logit_out", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "expit", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "actual", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_expit_out", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_expit_out", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "longdouble", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "logit", "type": "Any"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "actual", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 40, "nodeName": "inf", "type": "Any"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestLogit"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "inf", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestLogit"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "logit", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "actual", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestExpit"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestExpit"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "n", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "olderr", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 26, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "olderr", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "n", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "expit", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "n", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "expit", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "n", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "expit", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "n", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "expit", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "n", "type": "numpy.ndarray"}]