[{"lineNumber": 239, "col_offset": 0, "nodeName": "test_exponential", "type": "Callable[[], Any]"}, {"lineNumber": 569, "col_offset": 0, "nodeName": "test_windowfunc_basics", "type": "Callable[[], Any]"}, {"lineNumber": 622, "col_offset": 0, "nodeName": "test_needs_params", "type": "Callable[[], Any]"}, {"lineNumber": 632, "col_offset": 0, "nodeName": "test_deprecation", "type": "Callable[[], Any]"}, {"lineNumber": 638, "col_offset": 0, "nodeName": "test_deprecated_pickleable", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "window_funcs", "type": "List[Union[Tuple[str, Tuple[()]], Tuple[str, Tuple[int]], Tuple[str, Tuple[float]], Tuple[str, Tuple[float, int]]]]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "cheb_odd_true", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "cheb_even_true", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "exponential_data", "type": "Dict[Union[Tuple[int, None, float, bool], Tuple[int, int, float, bool]], Optional[numpy.ndarray]]"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "tukey_data", "type": "Dict[Union[Tuple[int, float, bool], Tuple[int, int], Tuple[int, float], Tuple[int]], Union[numpy.ndarray, List[int], List[Union[int, float]]]]"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 464, "col_offset": 0, "nodeName": "dpss_data", "type": "Dict[Union[Tuple[int, float, int], Tuple[int, int, int]], Tuple[List[List[float]], List[float]]]"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "window_funcs", "type": "List[Union[Tuple[str, Tuple[()]], Tuple[str, Tuple[int]], Tuple[str, Tuple[float]], Tuple[str, Tuple[float, int]]]]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "dep_hann2", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "cheb_odd_low_at_true", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "cheb_even_low_at_true", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "k", "type": "Union[Tuple[int, None, float, bool], Tuple[int, int, float, bool]]"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "v", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "items", "type": "Callable"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 421, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "tuk0", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "box0", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "tuk1", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "han1", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "M", "type": "int"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "win1", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "win2", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "osfactor", "type": "int"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "sig", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "win", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "window_name", "type": "str"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "window", "type": "Any"}, {"lineNumber": 633, "col_offset": 7, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "cheb_odd", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "cheb_odd", "type": "Any"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "cheb_odd_true", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "cheb_even", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "cheb_even", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "cheb_even_true", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "cheb_odd", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "cheb_odd", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "cheb_odd_low_at_true", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "cheb_even", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "cheb_even", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "cheb_even_low_at_true", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "exponential_data", "type": "Dict[Union[Tuple[int, None, float, bool], Tuple[int, int, float, bool]], Optional[numpy.ndarray]]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "win", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "k", "type": "Union[Tuple[int, float, bool], Tuple[int, int], Tuple[int, float], Tuple[int]]"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "v", "type": "Union[numpy.ndarray, List[int], List[Union[int, float]]]"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "tukey", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "boxcar", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "tuk0", "type": "Any"}, {"lineNumber": 457, "col_offset": 40, "nodeName": "box0", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "tukey", "type": "Callable[..., Any]"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "tuk1", "type": "Any"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "han1", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "k", "type": "Union[Tuple[int, float, int], Tuple[int, int, int]]"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "v", "type": "Tuple[List[List[float]], List[float]]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "win", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "expected", "type": "int"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "win_sub", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "win_2", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "expected", "type": "int"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 508, "col_offset": 34, "nodeName": "lam", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 510, "col_offset": 34, "nodeName": "lam", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "lam", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 516, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 517, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 517, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 520, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 520, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 522, "col_offset": 34, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 529, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 533, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 539, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 539, "col_offset": 37, "nodeName": "cheb_odd_true", "type": "numpy.ndarray"}, {"lineNumber": 542, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 545, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 545, "col_offset": 37, "nodeName": "cheb_even_true", "type": "numpy.ndarray"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "win1", "type": "Any"}, {"lineNumber": 550, "col_offset": 30, "nodeName": "win2", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 554, "col_offset": 34, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 557, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 564, "col_offset": 14, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 565, "col_offset": 34, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 25, "nodeName": "windows", "type": "module"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "window_name", "type": "str"}, {"lineNumber": 572, "col_offset": 36, "nodeName": "sup", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "w1", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "w2", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "w1", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "w2", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 629, "col_offset": 34, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 629, "col_offset": 46, "nodeName": "winstr", "type": "str"}, {"lineNumber": 633, "col_offset": 7, "nodeName": "dep_hann", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "pickle", "type": "module"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 639, "col_offset": 42, "nodeName": "dep_hann", "type": "Any"}, {"lineNumber": 640, "col_offset": 12, "nodeName": "dep_hann2", "type": "Any"}, {"lineNumber": 640, "col_offset": 25, "nodeName": "dep_hann", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "barthann", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "barthann", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "barthann", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "bartlett", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "bartlett", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "bartlett", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "blackman", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "blackman", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "blackman", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "blackman", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "blackmanharris", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "blackmanharris", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "blackmanharris", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "blackmanharris", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "bohman", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "bohman", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "bohman", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "boxcar", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "boxcar", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "boxcar", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "exponential", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "exponential", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "win", "type": "Any"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "flattop", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "flattop", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "flattop", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "flattop", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "general_cosine", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "general_cosine", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "general_hamming", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "general_hamming", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "general_hamming", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "hamming", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "hamming", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "hamming", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "hamming", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "kaiser", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "nuttall", "type": "Callable[..., Any]"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "nuttall", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "nuttall", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "nuttall", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "parzen", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "parzen", "type": "Callable[..., Any]"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "parzen", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "triang", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "triang", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "triang", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "tukey_data", "type": "Dict[Union[Tuple[int, float, bool], Tuple[int, int], Tuple[int, float], Tuple[int]], Union[numpy.ndarray, List[int], List[Union[int, float]]]]"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "v", "type": "Union[numpy.ndarray, List[int], List[Union[int, float]]]"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "win", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "dpss_data", "type": "Dict[Union[Tuple[int, float, int], Tuple[int, int, int]], Tuple[List[List[float]], List[float]]]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "win", "type": "Any"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "ratios", "type": "Any"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "win", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "ratios", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 31, "nodeName": "M", "type": "int"}, {"lineNumber": 489, "col_offset": 23, "nodeName": "M", "type": "int"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 52, "nodeName": "expected", "type": "int"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 35, "nodeName": "M", "type": "int"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 33, "nodeName": "M", "type": "int"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 502, "col_offset": 54, "nodeName": "expected", "type": "int"}, {"lineNumber": 507, "col_offset": 14, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "dpss", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 517, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "windows", "type": "module"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 520, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 522, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "windows", "type": "module"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 529, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "windows", "type": "module"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 533, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 536, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 542, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "get_window", "type": "Callable[..., Any]"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "windows", "type": "module"}, {"lineNumber": 554, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 554, "col_offset": 54, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "windows", "type": "module"}, {"lineNumber": 562, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 14, "nodeName": "windows", "type": "module"}, {"lineNumber": 564, "col_offset": 50, "nodeName": "osfactor", "type": "int"}, {"lineNumber": 566, "col_offset": 23, "nodeName": "sig", "type": "Any"}, {"lineNumber": 566, "col_offset": 61, "nodeName": "win", "type": "Any"}, {"lineNumber": 572, "col_offset": 13, "nodeName": "suppress_warnings", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 573, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "window_name", "type": "str"}, {"lineNumber": 577, "col_offset": 17, "nodeName": "window", "type": "Any"}, {"lineNumber": 578, "col_offset": 17, "nodeName": "window", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "w2", "type": "Any"}, {"lineNumber": 581, "col_offset": 17, "nodeName": "window", "type": "Any"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "window", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 583, "col_offset": 47, "nodeName": "w2", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 592, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 592, "col_offset": 38, "nodeName": "window", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 593, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "window", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "imag", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 618, "col_offset": 28, "nodeName": "imag", "type": "Any"}, {"lineNumber": 634, "col_offset": 47, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 635, "col_offset": 36, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "pickle", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "chebwin", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "windows", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "windows", "type": "module"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "windows", "type": "module"}, {"lineNumber": 242, "col_offset": 60, "nodeName": "k", "type": "Union[Tuple[int, None, float, bool], Tuple[int, int, float, bool]]"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "windows", "type": "module"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "k", "type": "Union[Tuple[int, None, float, bool], Tuple[int, int, float, bool]]"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "windows", "type": "module"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "tukey", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 451, "col_offset": 32, "nodeName": "win", "type": "Any"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "v", "type": "Union[numpy.ndarray, List[int], List[Union[int, float]]]"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "windows", "type": "module"}, {"lineNumber": 480, "col_offset": 40, "nodeName": "k", "type": "Union[Tuple[int, float, int], Tuple[int, int, int]]"}, {"lineNumber": 481, "col_offset": 33, "nodeName": "v", "type": "Tuple[List[List[float]], List[float]]"}, {"lineNumber": 481, "col_offset": 58, "nodeName": "k", "type": "Union[Tuple[int, float, int], Tuple[int, int, int]]"}, {"lineNumber": 482, "col_offset": 36, "nodeName": "v", "type": "Tuple[List[List[float]], List[float]]"}, {"lineNumber": 482, "col_offset": 72, "nodeName": "k", "type": "Union[Tuple[int, float, int], Tuple[int, int, int]]"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "windows", "type": "module"}, {"lineNumber": 488, "col_offset": 34, "nodeName": "M", "type": "int"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "windows", "type": "module"}, {"lineNumber": 493, "col_offset": 38, "nodeName": "M", "type": "int"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 496, "col_offset": 60, "nodeName": "expected", "type": "int"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 498, "col_offset": 32, "nodeName": "win", "type": "Any"}, {"lineNumber": 498, "col_offset": 37, "nodeName": "win_sub", "type": "Any"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "windows", "type": "module"}, {"lineNumber": 500, "col_offset": 36, "nodeName": "M", "type": "int"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "M", "type": "int"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 507, "col_offset": 14, "nodeName": "windows", "type": "module"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "windows", "type": "module"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "windows", "type": "module"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "windows", "type": "module"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "windows", "type": "module"}, {"lineNumber": 566, "col_offset": 39, "nodeName": "osfactor", "type": "int"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "sup", "type": "Any"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "filter", "type": "Any"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 577, "col_offset": 28, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 578, "col_offset": 28, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 579, "col_offset": 38, "nodeName": "w1", "type": "Any"}, {"lineNumber": 581, "col_offset": 28, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "w1", "type": "Any"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 589, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 592, "col_offset": 52, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 593, "col_offset": 51, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 596, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 598, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 599, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 605, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 610, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 611, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 612, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 613, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 634, "col_offset": 47, "nodeName": "dep_hann", "type": "Any"}, {"lineNumber": 635, "col_offset": 36, "nodeName": "hann", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "windows", "type": "module"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "windows", "type": "module"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "windows", "type": "module"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "windows", "type": "module"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "windows", "type": "module"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "windows", "type": "module"}, {"lineNumber": 450, "col_offset": 37, "nodeName": "k", "type": "Union[Tuple[int, float, bool], Tuple[int, int], Tuple[int, float], Tuple[int]]"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 566, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "sig", "type": "Any"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "sup", "type": "Any"}, {"lineNumber": 586, "col_offset": 29, "nodeName": "window", "type": "Any"}, {"lineNumber": 587, "col_offset": 29, "nodeName": "window", "type": "Any"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "window", "type": "Any"}, {"lineNumber": 589, "col_offset": 29, "nodeName": "window", "type": "Any"}, {"lineNumber": 596, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 597, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 598, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 599, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 610, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 611, "col_offset": 42, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 612, "col_offset": 41, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 613, "col_offset": 41, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "fft", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 28, "nodeName": "fft", "type": "Callable[..., Any]"}, {"lineNumber": 635, "col_offset": 36, "nodeName": "windows", "type": "module"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "win", "type": "Any"}, {"lineNumber": 491, "col_offset": 41, "nodeName": "win", "type": "Any"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 502, "col_offset": 36, "nodeName": "win_2", "type": "Any"}, {"lineNumber": 503, "col_offset": 41, "nodeName": "win_2", "type": "Any"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 587, "col_offset": 40, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 588, "col_offset": 40, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 589, "col_offset": 40, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 605, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "fftpack", "type": "module"}, {"lineNumber": 616, "col_offset": 40, "nodeName": "window", "type": "Any"}, {"lineNumber": 618, "col_offset": 28, "nodeName": "fftpack", "type": "module"}, {"lineNumber": 618, "col_offset": 40, "nodeName": "window", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "win_sub", "type": "Any"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "win_sub", "type": "Any"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 603, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 605, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 606, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 607, "col_offset": 31, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 616, "col_offset": 52, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 618, "col_offset": 52, "nodeName": "params", "type": "Union[Tuple[()], Tuple[int], Tuple[float], Tuple[float, int]]"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "np", "type": "module"}]