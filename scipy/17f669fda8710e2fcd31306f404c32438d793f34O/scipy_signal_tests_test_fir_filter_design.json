[{"lineNumber": 16, "col_offset": 0, "nodeName": "test_kaiser_beta", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test_kaiser_atten", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test_kaiserord", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "kaiser_beta", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "kaiser_beta", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "kaiser_beta", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "kaiser_beta", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "kaiser_atten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "kaiser_atten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "numtaps", "type": "int"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "beta", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "expected_response", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "f", "type": "float"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "passIndicator", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "bands", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Hideal", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "mse", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "mse", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "cases", "type": "List[Union[Tuple[List[float], bool, Tuple[int, int]], Tuple[List[float], bool, Tuple[float, int]]]]"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "cases", "type": "List[Union[Tuple[List[float], bool, Tuple[int, int]], Tuple[List[float], bool, Tuple[float, int]]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "nyquist", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "relative_width", "type": "float"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "pass_zero", "type": "str"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "pass_zero", "type": "str"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "beta", "type": "float"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "beta", "type": "float"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "response2", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "taps1", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "a", "type": "float"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "h", "type": "List[float]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "a", "type": "float"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "midx", "type": "int"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "hodd", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "taps", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "h", "type": "List[int]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "h_new", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "pi", "type": "Any"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "pi", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "numtaps", "type": "int"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "beta", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "alpha", "type": "float"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "expected", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "mse", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "f", "type": "float"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "f", "type": "float"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "f", "type": "float"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "f1", "type": "float"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "f2", "type": "float"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "f3", "type": "float"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "f4", "type": "float"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "H", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "pi", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "right", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "passIndicator", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "where", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "passIndicator", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "mean", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "pass_zero", "type": "bool"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "expected_response", "type": "Union[Tuple[int, int], Tuple[float, int]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "hs", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "width", "type": "float"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "width", "type": "float"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "width", "type": "float"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "width", "type": "float"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "taps_str", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "width", "type": "float"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "nyquist", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "relative_width", "type": "float"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "taps", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 285, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 293, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 298, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 318, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 330, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "kaiserord", "type": "Callable[[Any, Any], Tuple[int, Any]]"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "width", "type": "float"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 356, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "alpha", "type": "float"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "h", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "taps", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "response", "type": "Any"}, {"lineNumber": 371, "col_offset": 26, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 371, "col_offset": 32, "nodeName": "taps", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "response1", "type": "Any"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "taps", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "interp", "type": "Any"}, {"lineNumber": 385, "col_offset": 45, "nodeName": "freq", "type": "List[float]"}, {"lineNumber": 385, "col_offset": 51, "nodeName": "gain", "type": "List[float]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 386, "col_offset": 50, "nodeName": "response2", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 391, "col_offset": 34, "nodeName": "taps1", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "firwin2", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "taps1", "type": "Any"}, {"lineNumber": 393, "col_offset": 41, "nodeName": "taps2", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "H", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "pi", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "H", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "h", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "h", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 447, "col_offset": 68, "nodeName": "h", "type": "List[float]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 448, "col_offset": 68, "nodeName": "h", "type": "List[float]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 459, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 463, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 470, "col_offset": 34, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "N", "type": "int"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 492, "col_offset": 34, "nodeName": "hodd", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "H", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "pi", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "abs", "type": "Any"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "H", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 504, "col_offset": 14, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 516, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 526, "col_offset": 30, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 535, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "taps", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "known_taps", "type": "List[float]"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "freqz", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 553, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 566, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 566, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 567, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 568, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 569, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 569, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 570, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 572, "col_offset": 37, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 581, "col_offset": 24, "nodeName": "h_new", "type": "Any"}, {"lineNumber": 581, "col_offset": 31, "nodeName": "h", "type": "List[int]"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "h_new", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 601, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 601, "col_offset": 27, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 612, "col_offset": 27, "nodeName": "k", "type": "List[float]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "N", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "N", "type": "int"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "f1", "type": "float"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "f2", "type": "float"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "f1", "type": "float"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "f2", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "f1", "type": "float"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "f2", "type": "float"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "f3", "type": "float"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "f4", "type": "float"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "f1", "type": "float"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "f2", "type": "float"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "f3", "type": "float"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "f4", "type": "float"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "N", "type": "int"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "N", "type": "int"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "pass_zero", "type": "bool"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "check_response", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "hs", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "taps", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 147, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "taps", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "taps", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 188, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "taps", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "taps", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "nyquist", "type": "int"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 320, "col_offset": 56, "nodeName": "width", "type": "float"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "abs", "type": "Any"}, {"lineNumber": 347, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "sinc", "type": "Any"}, {"lineNumber": 369, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 372, "col_offset": 34, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "response", "type": "Any"}, {"lineNumber": 372, "col_offset": 49, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 372, "col_offset": 57, "nodeName": "pi", "type": "Any"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "taps", "type": "Any"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "taps", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 30, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "pi", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "response1", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "a", "type": "float"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "N", "type": "int"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "h", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "all", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 17, "nodeName": "all", "type": "Any"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 426, "col_offset": 33, "nodeName": "a", "type": "float"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "all", "type": "Any"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "remez", "type": "Callable[..., Any]"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "a", "type": "float"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "h", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "h", "type": "Any"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 500, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 500, "col_offset": 40, "nodeName": "a", "type": "float"}, {"lineNumber": 501, "col_offset": 34, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 504, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "firls", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 556, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 570, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 571, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 572, "col_offset": 52, "nodeName": "arange", "type": "Any"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 580, "col_offset": 42, "nodeName": "h", "type": "List[int]"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 586, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "minimum_phase", "type": "Callable[..., Any]"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "mse", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "tol", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "left", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "right", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "pass_zero", "type": "bool"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "pass_zero", "type": "bool"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "cutoff", "type": "List[Union[int, float]]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "cutoff", "type": "List[Union[float, int]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "expected_response", "type": "Union[Tuple[int, int], Tuple[float, int]]"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "beta", "type": "Any"}, {"lineNumber": 139, "col_offset": 56, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "beta", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "beta", "type": "Any"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 64, "nodeName": "beta", "type": "Any"}, {"lineNumber": 199, "col_offset": 56, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 66, "nodeName": "beta", "type": "Any"}, {"lineNumber": 220, "col_offset": 59, "nodeName": "nyquist", "type": "int"}, {"lineNumber": 223, "col_offset": 56, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 228, "col_offset": 62, "nodeName": "nyquist", "type": "int"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 67, "nodeName": "beta", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "firwin", "type": "Any"}, {"lineNumber": 315, "col_offset": 60, "nodeName": "beta", "type": "float"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 318, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "width", "type": "float"}, {"lineNumber": 330, "col_offset": 60, "nodeName": "beta", "type": "float"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "width", "type": "float"}, {"lineNumber": 331, "col_offset": 59, "nodeName": "width", "type": "float"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 60, "nodeName": "beta", "type": "Any"}, {"lineNumber": 344, "col_offset": 42, "nodeName": "width", "type": "float"}, {"lineNumber": 344, "col_offset": 53, "nodeName": "width", "type": "float"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "width", "type": "float"}, {"lineNumber": 345, "col_offset": 51, "nodeName": "width", "type": "float"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 346, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 372, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "a", "type": "float"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "h", "type": "Any"}, {"lineNumber": 411, "col_offset": 49, "nodeName": "h", "type": "Any"}, {"lineNumber": 426, "col_offset": 44, "nodeName": "a", "type": "float"}, {"lineNumber": 477, "col_offset": 33, "nodeName": "a", "type": "float"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "midx", "type": "int"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "midx", "type": "int"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 491, "col_offset": 39, "nodeName": "h", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "idx", "type": "Any"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "a", "type": "float"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "idx", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 556, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 568, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 570, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "h", "type": "List[int]"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "rng", "type": "Any"}, {"lineNumber": 587, "col_offset": 34, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 587, "col_offset": 46, "nodeName": "h", "type": "Any"}, {"lineNumber": 588, "col_offset": 28, "nodeName": "abs", "type": "Any"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "abs", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "h", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "actual", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "mse", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "tol", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "Hideal", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "cutoff", "type": "List[float]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "mse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "h", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "mse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "hs", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "width", "type": "float"}, {"lineNumber": 142, "col_offset": 61, "nodeName": "width", "type": "float"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 40, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "width", "type": "float"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "width", "type": "float"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "width", "type": "float"}, {"lineNumber": 182, "col_offset": 60, "nodeName": "width", "type": "float"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "width", "type": "float"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "width", "type": "float"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "width", "type": "float"}, {"lineNumber": 202, "col_offset": 60, "nodeName": "width", "type": "float"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "width", "type": "float"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "width", "type": "float"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "width", "type": "float"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "width", "type": "float"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "width", "type": "float"}, {"lineNumber": 226, "col_offset": 60, "nodeName": "width", "type": "float"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "width", "type": "float"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "width", "type": "float"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "freq_samples", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "pass_zero", "type": "str"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "pass_zero", "type": "str"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "width", "type": "float"}, {"lineNumber": 316, "col_offset": 61, "nodeName": "width", "type": "float"}, {"lineNumber": 317, "col_offset": 66, "nodeName": "width", "type": "float"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 369, "col_offset": 55, "nodeName": "taps", "type": "Any"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 382, "col_offset": 41, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 382, "col_offset": 55, "nodeName": "taps", "type": "Any"}, {"lineNumber": 491, "col_offset": 30, "nodeName": "midx", "type": "int"}, {"lineNumber": 556, "col_offset": 33, "nodeName": "mask", "type": "Any"}, {"lineNumber": 559, "col_offset": 33, "nodeName": "mask", "type": "Any"}, {"lineNumber": 568, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 49, "nodeName": "h", "type": "Any"}, {"lineNumber": 588, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "fft", "type": "Any"}, {"lineNumber": 588, "col_offset": 46, "nodeName": "h_new", "type": "Any"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "fft", "type": "Any"}, {"lineNumber": 589, "col_offset": 46, "nodeName": "h", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "H", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "cutoff", "type": "Union[List[Union[float, int]], List[float]]"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "self", "type": "TestFirwin"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "cutoff", "type": "Union[List[Union[float, int]], List[float]]"}, {"lineNumber": 139, "col_offset": 62, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 179, "col_offset": 62, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 223, "col_offset": 62, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "N", "type": "int"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 423, "col_offset": 17, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "midx", "type": "int"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "fft", "type": "module"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "fft", "type": "module"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "freq", "type": "Any"}, {"lineNumber": 139, "col_offset": 68, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 161, "col_offset": 68, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 179, "col_offset": 68, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 199, "col_offset": 68, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 223, "col_offset": 68, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 369, "col_offset": 60, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "midx", "type": "int"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "m", "type": "Any"}, {"lineNumber": 382, "col_offset": 60, "nodeName": "ntaps", "type": "int"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "Hmag", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "pi", "type": "Any"}, {"lineNumber": 411, "col_offset": 54, "nodeName": "N", "type": "int"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "idx", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "np", "type": "module"}]