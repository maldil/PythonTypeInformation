[{"lineNumber": 151, "col_offset": 0, "nodeName": "short_path", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "find_names", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "get_all_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "compare", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 0, "nodeName": "is_deprecated", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "check_items", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "validate_rst_syntax", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 0, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "check_rest", "type": "Callable[..., Any]"}, {"lineNumber": 632, "col_offset": 0, "nodeName": "_run_doctests", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 828, "col_offset": 0, "nodeName": "init_matplotlib", "type": "Callable[[], Any]"}, {"lineNumber": 839, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "BASE_MODULE", "type": "str"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "PUBLIC_SUBMODULES", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "OTHER_MODULE_DOCS", "type": "Dict[str, str]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "DOCTEST_SKIPLIST", "type": "Set[str]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "REFGUIDE_ALL_SKIPLIST", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "REFGUIDE_AUTOSUMMARY_SKIPLIST", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "HAVE_MATPLOTLIB", "type": "bool"}, {"lineNumber": 464, "col_offset": 0, "nodeName": "DEFAULT_NAMESPACE", "type": "Dict[str, module]"}, {"lineNumber": 467, "col_offset": 0, "nodeName": "CHECK_NAMESPACE", "type": "Dict[str, Any]"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "OutputChecker", "type": "Type[doctest.OutputChecker]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "abspath", "type": "str"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "relpath", "type": "str"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "relpath", "type": "str"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "patterns", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "patterns", "type": "List[Pattern[str]]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "module_name", "type": "str"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "__name__", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "not_deprecated", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "num_all", "type": "int"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "num_ref", "type": "int"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "dep_in_ref", "type": "Set[Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "only_ref", "type": "Set[Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "ok_unknown_items", "type": "Set[str]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "error_stream", "type": "io.StringIO"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "token", "type": "str"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "success", "type": "bool"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "error", "type": "str"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 386, "col_offset": 7, "nodeName": "dots", "type": "bool"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "names", "type": "Set[Any]"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 464, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "int64", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "int8", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "int32", "type": "Any"}, {"lineNumber": 478, "col_offset": 17, "nodeName": "float32", "type": "Any"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "float64", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "nan", "type": "Any"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "nan", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "inf", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "inf", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "doctest", "type": "module"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "DIVIDER", "type": "str"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "doctest", "type": "module"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "obj_pattern", "type": "Pattern[str]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "int_pattern", "type": "Pattern[str]"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "vanilla", "type": "doctest.OutputChecker"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "rndm_markers", "type": "Set[str]"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "stopwords", "type": "Set[str]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "flags", "type": "int"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "runner", "type": "DTRunner"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "success", "type": "bool"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "old_printoptions", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "old_errstate", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "cwd", "type": "str"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "results", "type": "List[Tuple[str, bool, str]]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 737, "col_offset": 11, "nodeName": "results", "type": "List[Tuple[str, bool, str]]"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "results", "type": "List[Tuple[Any, bool, str]]"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "fname", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "PSEUDOCODE", "type": "Set[str]"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "parser", "type": "doctest.DocTestParser"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "good_parts", "type": "List[str]"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "part", "type": "str"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "good_text", "type": "str"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "tests", "type": "doctest.DocTest"}, {"lineNumber": 816, "col_offset": 7, "nodeName": "dots", "type": "Any"}, {"lineNumber": 821, "col_offset": 7, "nodeName": "HAVE_MATPLOTLIB", "type": "bool"}, {"lineNumber": 825, "col_offset": 11, "nodeName": "results", "type": "List[Tuple[Any, bool, str]]"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "modules", "type": "List[module]"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "names_dict", "type": "Dict[str, Set[str]]"}, {"lineNumber": 854, "col_offset": 7, "nodeName": "module_names", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "submodule_name", "type": "str"}, {"lineNumber": 868, "col_offset": 26, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "dots", "type": "bool"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "success", "type": "bool"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "results", "type": "List[Tuple[module, Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]]]"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "module", "type": "module"}, {"lineNumber": 888, "col_offset": 18, "nodeName": "modules", "type": "List[module]"}, {"lineNumber": 911, "col_offset": 7, "nodeName": "dots", "type": "bool"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "all_success", "type": "bool"}, {"lineNumber": 939, "col_offset": 31, "nodeName": "results", "type": "List[Tuple[module, Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]]]"}, {"lineNumber": 964, "col_offset": 7, "nodeName": "all_success", "type": "bool"}, {"lineNumber": 972, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 50, "col_offset": 3, "nodeName": "parse_version", "type": "Callable[[str], Tuple[str, ...]]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "parse_version", "type": "Callable[[str], Tuple[str, ...]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "register_directive", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "SeeAlso", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "register_directive", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "Only", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "path", "type": "Optional[str]"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "cwd", "type": "None"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "cwd", "type": "str"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "path", "type": "Optional[str]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "relpath", "type": "Callable"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "path", "type": "Optional[str]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "cwd", "type": "str"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "abspath", "type": "str"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "__name__", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "patterns", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "module", "type": "module"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "pattern", "type": "Pattern[str]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "patterns", "type": "List[Pattern[str]]"}, {"lineNumber": 206, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "module", "type": "module"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "all_dict", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "all_dict", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "not_deprecated", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 279, "col_offset": 58, "nodeName": "num_all", "type": "int"}, {"lineNumber": 280, "col_offset": 46, "nodeName": "num_ref", "type": "int"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 282, "col_offset": 34, "nodeName": "compare", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 52, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 282, "col_offset": 67, "nodeName": "module_name", "type": "str"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "dots", "type": "bool"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "dots", "type": "bool"}, {"lineNumber": 324, "col_offset": 7, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "dots", "type": "bool"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "publish_doctree", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "token", "type": "str"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "token", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "success", "type": "bool"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "success", "type": "bool"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "success", "type": "bool"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "output", "type": "str"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "msg", "type": "str"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "skip_types", "type": "Tuple[Type[Dict[Any, Any]], Type[str], Any, Type[float], Type[int]]"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "NameError", "type": "Type[NameError]"}, {"lineNumber": 412, "col_offset": 34, "nodeName": "OTHER_MODULE_DOCS", "type": "Dict[str, str]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "full_name", "type": "str"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "src_file", "type": "Optional[str]"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "testing", "type": "Any"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 478, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "_item_name", "type": "str"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "item_name", "type": "str"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "_source", "type": "Any"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "source", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "_verbose", "type": "Any"}, {"lineNumber": 521, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "OutputChecker", "type": "Type[doctest.OutputChecker]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "parse_namedtuples", "type": "bool"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "parse_namedtuples", "type": "bool"}, {"lineNumber": 637, "col_offset": 46, "nodeName": "IGNORE_EXCEPTION_DETAIL", "type": "int"}, {"lineNumber": 638, "col_offset": 13, "nodeName": "DTRunner", "type": "Type[DTRunner]"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "full_name", "type": "str"}, {"lineNumber": 661, "col_offset": 23, "nodeName": "get_printoptions", "type": "Any"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 664, "col_offset": 10, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "MyStderr", "type": "Type[Any]"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "t", "type": "doctest.DocTest"}, {"lineNumber": 673, "col_offset": 17, "nodeName": "tests", "type": "List[doctest.DocTest]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "success", "type": "bool"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 694, "col_offset": 7, "nodeName": "ns", "type": "None"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "ns", "type": "Dict[str, module]"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "full_name", "type": "str"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "finder", "type": "doctest.DocTestFinder"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "dots", "type": "bool"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "HAVE_MATPLOTLIB", "type": "bool"}, {"lineNumber": 777, "col_offset": 7, "nodeName": "ns", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "ns", "type": "Dict[str, module]"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 780, "col_offset": 7, "nodeName": "short_name", "type": "Any"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "split", "type": "Callable"}, {"lineNumber": 780, "col_offset": 34, "nodeName": "fname", "type": "Any"}, {"lineNumber": 781, "col_offset": 7, "nodeName": "short_name", "type": "Any"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "DOCTEST_SKIPLIST", "type": "Set[str]"}, {"lineNumber": 782, "col_offset": 15, "nodeName": "results", "type": "List[Tuple[Any, bool, str]]"}, {"lineNumber": 785, "col_offset": 7, "nodeName": "major", "type": "int"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 798, "col_offset": 13, "nodeName": "DocTestParser", "type": "Type[doctest.DocTestParser]"}, {"lineNumber": 800, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "tests", "type": "doctest.DocTest"}, {"lineNumber": 811, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 811, "col_offset": 28, "nodeName": "good_parts", "type": "List[str]"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "get_doctest", "type": "Callable[[str, Dict[str, Any], str, Optional[str], Optional[int]], doctest.DocTest]"}, {"lineNumber": 812, "col_offset": 31, "nodeName": "good_text", "type": "str"}, {"lineNumber": 812, "col_offset": 42, "nodeName": "ns", "type": "Union[Dict[str, module], Any]"}, {"lineNumber": 812, "col_offset": 46, "nodeName": "fname", "type": "Any"}, {"lineNumber": 812, "col_offset": 53, "nodeName": "fname", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "success", "type": "bool"}, {"lineNumber": 813, "col_offset": 13, "nodeName": "output", "type": "List[nothing]"}, {"lineNumber": 813, "col_offset": 22, "nodeName": "_run_doctests", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 813, "col_offset": 45, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 813, "col_offset": 56, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 814, "col_offset": 36, "nodeName": "doctest_warnings", "type": "Any"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "HAVE_MATPLOTLIB", "type": "bool"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 840, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 849, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 854, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "skip_tutorial", "type": "bool"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 862, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 862, "col_offset": 21, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "module_name", "type": "str"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "module", "type": "module"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 885, "col_offset": 7, "nodeName": "doctests", "type": "Any"}, {"lineNumber": 889, "col_offset": 11, "nodeName": "dots", "type": "bool"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "mod_results", "type": "List[Tuple[None, bool, str]]"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "mod_results", "type": "List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 902, "col_offset": 11, "nodeName": "doctests", "type": "Any"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "v", "type": "Union[Tuple[None, bool, str], Tuple[str, bool, str], Tuple[Union[str, bool], ...]]"}, {"lineNumber": 906, "col_offset": 17, "nodeName": "mod_results", "type": "Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]"}, {"lineNumber": 915, "col_offset": 11, "nodeName": "skip_tutorial", "type": "bool"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "module", "type": "module"}, {"lineNumber": 939, "col_offset": 16, "nodeName": "mod_results", "type": "Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "success", "type": "bool"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "all_success", "type": "bool"}, {"lineNumber": 952, "col_offset": 37, "nodeName": "mod_results", "type": "Union[List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]]]"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "sphinx", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "_directives", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "REFGUIDE_AUTOSUMMARY_SKIPLIST", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "name", "type": "str"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "path", "type": "Optional[str]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "abspath", "type": "str"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "relpath", "type": "str"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "module", "type": "module"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "pattern", "type": "str"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "pattern", "type": "str"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "patterns", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "search", "type": "Callable"}, {"lineNumber": 190, "col_offset": 85, "nodeName": "line", "type": "str"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "module_name", "type": "str"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "__all__", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "module", "type": "module"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 69, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 232, "col_offset": 73, "nodeName": "not_deprecated", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "pat", "type": "str"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "REFGUIDE_AUTOSUMMARY_SKIPLIST", "type": "List[str]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "pat", "type": "str"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "REFGUIDE_ALL_SKIPLIST", "type": "List[str]"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 286, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "dep_in_ref", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 291, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "only_ref", "type": "Set[Any]"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "io", "type": "module"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "error_stream", "type": "io.StringIO"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 373, "col_offset": 96, "nodeName": "S", "type": "int"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "lineno", "type": "int"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "stream", "type": "TextIO"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "stream", "type": "TextIO"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 404, "col_offset": 33, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 404, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 404, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "skip_types", "type": "Tuple[Type[Dict[Any, Any]], Type[str], Type[float], Type[int]]"}, {"lineNumber": 412, "col_offset": 7, "nodeName": "__name__", "type": "str"}, {"lineNumber": 418, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 22, "nodeName": "module", "type": "module"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "obj", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "ismodule", "type": "Callable[[object], bool]"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "obj", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "search", "type": "Callable"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "src_file", "type": "Optional[str]"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "file_full_name", "type": "str"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "file_full_name", "type": "str"}, {"lineNumber": 454, "col_offset": 29, "nodeName": "full_name", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "_item_name", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "new_line", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "_item_name", "type": "None"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "_checker", "type": "Any"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "example", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "report_start", "type": "Callable[[doctest.DocTestRunner, Callable[[str], Any], doctest.DocTest, doctest.Example], None]"}, {"lineNumber": 503, "col_offset": 50, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 503, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 503, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 503, "col_offset": 67, "nodeName": "example", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "report_success", "type": "Callable[[doctest.DocTestRunner, Callable[[str], Any], doctest.DocTest, doctest.Example, str], None]"}, {"lineNumber": 508, "col_offset": 52, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 508, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 508, "col_offset": 63, "nodeName": "test", "type": "Any"}, {"lineNumber": 508, "col_offset": 69, "nodeName": "example", "type": "Any"}, {"lineNumber": 508, "col_offset": 78, "nodeName": "got", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "_report_item_name", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "report_unexpected_exception", "type": "Callable[[doctest.DocTestRunner, Callable[[str], Any], doctest.DocTest, doctest.Example, Tuple[Type[BaseException], BaseException, types.TracebackType]], None]"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "example", "type": "Any"}, {"lineNumber": 513, "col_offset": 38, "nodeName": "exc_info", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "_report_item_name", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "report_failure", "type": "Callable[[doctest.DocTestRunner, Callable[[str], Any], doctest.DocTest, doctest.Example, str], None]"}, {"lineNumber": 517, "col_offset": 52, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 517, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 517, "col_offset": 63, "nodeName": "test", "type": "Any"}, {"lineNumber": 518, "col_offset": 52, "nodeName": "example", "type": "Any"}, {"lineNumber": 518, "col_offset": 61, "nodeName": "got", "type": "Any"}, {"lineNumber": 521, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "doctest", "type": "module"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "self", "type": "Checker"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "atol", "type": "float"}, {"lineNumber": 533, "col_offset": 19, "nodeName": "rtol", "type": "float"}, {"lineNumber": 533, "col_offset": 31, "nodeName": "atol", "type": "float"}, {"lineNumber": 533, "col_offset": 37, "nodeName": "rtol", "type": "float"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "ns", "type": "None"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "ns", "type": "Any"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "ns", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "want", "type": "Any"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "got", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 553, "col_offset": 35, "nodeName": "got", "type": "Any"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "a_want", "type": "Any"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "a_got", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 629, "col_offset": 27, "nodeName": "want", "type": "Any"}, {"lineNumber": 629, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "NORMALIZE_WHITESPACE", "type": "int"}, {"lineNumber": 637, "col_offset": 35, "nodeName": "ELLIPSIS", "type": "int"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "flags", "type": "int"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "msg", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "doctest_warnings", "type": "Any"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "doctest_warnings", "type": "Any"}, {"lineNumber": 661, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "filename", "type": "Optional[str]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 680, "col_offset": 17, "nodeName": "cwd", "type": "str"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 681, "col_offset": 22, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "set_printoptions", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 695, "col_offset": 18, "nodeName": "DEFAULT_NAMESPACE", "type": "Dict[str, module]"}, {"lineNumber": 700, "col_offset": 16, "nodeName": "get_all_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 700, "col_offset": 29, "nodeName": "module", "type": "module"}, {"lineNumber": 701, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "full_name", "type": "str"}, {"lineNumber": 703, "col_offset": 24, "nodeName": "DOCTEST_SKIPLIST", "type": "Set[str]"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 715, "col_offset": 17, "nodeName": "DocTestFinder", "type": "Type[doctest.DocTestFinder]"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "tests", "type": "List[doctest.DocTest]"}, {"lineNumber": 718, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "success", "type": "bool"}, {"lineNumber": 725, "col_offset": 17, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 725, "col_offset": 26, "nodeName": "_run_doctests", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 725, "col_offset": 40, "nodeName": "tests", "type": "List[doctest.DocTest]"}, {"lineNumber": 725, "col_offset": 47, "nodeName": "full_name", "type": "str"}, {"lineNumber": 725, "col_offset": 58, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 726, "col_offset": 40, "nodeName": "doctest_warnings", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 778, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 778, "col_offset": 18, "nodeName": "DEFAULT_NAMESPACE", "type": "Dict[str, module]"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 785, "col_offset": 7, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 789, "col_offset": 46, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 798, "col_offset": 13, "nodeName": "doctest", "type": "module"}, {"lineNumber": 800, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 801, "col_offset": 16, "nodeName": "get_doctest", "type": "Callable[[str, Dict[str, Any], str, Optional[str], Optional[int]], doctest.DocTest]"}, {"lineNumber": 801, "col_offset": 35, "nodeName": "part", "type": "str"}, {"lineNumber": 801, "col_offset": 41, "nodeName": "ns", "type": "Union[Dict[str, module], Any]"}, {"lineNumber": 801, "col_offset": 45, "nodeName": "fname", "type": "Any"}, {"lineNumber": 801, "col_offset": 52, "nodeName": "fname", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 808, "col_offset": 12, "nodeName": "good_parts", "type": "List[str]"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "parser", "type": "doctest.DocTestParser"}, {"lineNumber": 813, "col_offset": 37, "nodeName": "tests", "type": "doctest.DocTest"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "results", "type": "List[Tuple[Any, bool, str]]"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 819, "col_offset": 31, "nodeName": "success", "type": "bool"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "use", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "HAVE_MATPLOTLIB", "type": "bool"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 857, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "PUBLIC_SUBMODULES", "type": "List[str]"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "OTHER_MODULE_DOCS", "type": "Dict[str, str]"}, {"lineNumber": 864, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 869, "col_offset": 42, "nodeName": "submodule_name", "type": "str"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 870, "col_offset": 19, "nodeName": "module_name", "type": "str"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "submodule_name", "type": "str"}, {"lineNumber": 873, "col_offset": 33, "nodeName": "OTHER_MODULE_DOCS", "type": "Dict[str, str]"}, {"lineNumber": 876, "col_offset": 11, "nodeName": "submodule_name", "type": "str"}, {"lineNumber": 876, "col_offset": 29, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 885, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 885, "col_offset": 28, "nodeName": "skip_tutorial", "type": "bool"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "init_matplotlib", "type": "Callable[[], Any]"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 895, "col_offset": 18, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 895, "col_offset": 30, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 895, "col_offset": 39, "nodeName": "get_all_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 895, "col_offset": 52, "nodeName": "module", "type": "module"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 896, "col_offset": 31, "nodeName": "__name__", "type": "str"}, {"lineNumber": 899, "col_offset": 23, "nodeName": "check_items", "type": "Callable[..., Any]"}, {"lineNumber": 899, "col_offset": 35, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 899, "col_offset": 45, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 899, "col_offset": 52, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 899, "col_offset": 64, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 899, "col_offset": 72, "nodeName": "__name__", "type": "str"}, {"lineNumber": 900, "col_offset": 23, "nodeName": "check_rest", "type": "Callable[..., Any]"}, {"lineNumber": 900, "col_offset": 34, "nodeName": "module", "type": "module"}, {"lineNumber": 902, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 907, "col_offset": 41, "nodeName": "v", "type": "Union[Tuple[None, bool, str], Tuple[str, bool, str], Tuple[Union[str, bool], ...]]"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 915, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 940, "col_offset": 18, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "all_success", "type": "bool"}, {"lineNumber": 941, "col_offset": 38, "nodeName": "success", "type": "bool"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "success", "type": "bool"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 948, "col_offset": 14, "nodeName": "__name__", "type": "str"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "name", "type": "Optional[Union[str, bool]]"}, {"lineNumber": 952, "col_offset": 18, "nodeName": "success", "type": "Union[bool, str]"}, {"lineNumber": 952, "col_offset": 27, "nodeName": "output", "type": "Union[str, bool]"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "directives", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "module", "type": "module"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "group", "type": "Callable"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "match", "type": "Callable"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "pattern", "type": "Pattern[str]"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "line", "type": "str"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "entry", "type": "str"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "module", "type": "module"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "all_dict", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "is_deprecated", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "output", "type": "str"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 297, "col_offset": 81, "nodeName": "module_name", "type": "str"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "output", "type": "str"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "only_ref", "type": "Set[Any]"}, {"lineNumber": 305, "col_offset": 81, "nodeName": "module_name", "type": "str"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "only_ref", "type": "Set[Any]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "output", "type": "str"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "output", "type": "str"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "output", "type": "str"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "docutils", "type": "module"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "error", "type": "str"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 368, "col_offset": 86, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "ok_unknown_items", "type": "Set[str]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 373, "col_offset": 79, "nodeName": "join", "type": "Callable"}, {"lineNumber": 373, "col_offset": 88, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 373, "col_offset": 96, "nodeName": "re", "type": "module"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "success", "type": "bool"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 407, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 412, "col_offset": 7, "nodeName": "module", "type": "module"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "skip_types", "type": "Union[Tuple[Type[Dict[Any, Any]], Type[str], Type[float], Type[int]], Tuple[Type[Dict[Any, Any]], Type[str], Any, Type[float], Type[int]]]"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "inspect", "type": "module"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "getdoc", "type": "Callable[[object], Optional[str]]"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "obj", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 432, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 447, "col_offset": 23, "nodeName": "short_path", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "src_file", "type": "None"}, {"lineNumber": 452, "col_offset": 46, "nodeName": "full_name", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 492, "col_offset": 53, "nodeName": "checker", "type": "Checker"}, {"lineNumber": 492, "col_offset": 70, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 493, "col_offset": 51, "nodeName": "optionflags", "type": "int"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "_report_item_name", "type": "Callable[..., Any]"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "DocTestRunner", "type": "Type[doctest.DocTestRunner]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "self", "type": "Checker"}, {"lineNumber": 533, "col_offset": 19, "nodeName": "self", "type": "Checker"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "self", "type": "Checker"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 535, "col_offset": 27, "nodeName": "CHECK_NAMESPACE", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "self", "type": "Checker"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "obj_pattern", "type": "Pattern[str]"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "want", "type": "Any"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "match", "type": "Callable"}, {"lineNumber": 561, "col_offset": 67, "nodeName": "got", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "check_output", "type": "Callable[[str, str, int], bool]"}, {"lineNumber": 567, "col_offset": 41, "nodeName": "want", "type": "Any"}, {"lineNumber": 567, "col_offset": 47, "nodeName": "got", "type": "Any"}, {"lineNumber": 567, "col_offset": 52, "nodeName": "optionflags", "type": "Any"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 26, "nodeName": "want", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "got", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "s_want", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "s_got", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "cond", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "cond", "type": "Any"}, {"lineNumber": 613, "col_offset": 19, "nodeName": "_do_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 613, "col_offset": 34, "nodeName": "a_want", "type": "Any"}, {"lineNumber": 613, "col_offset": 42, "nodeName": "a_got", "type": "Any"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "want", "type": "Any"}, {"lineNumber": 625, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 43, "nodeName": "atol", "type": "Any"}, {"lineNumber": 629, "col_offset": 59, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 638, "col_offset": 41, "nodeName": "Checker", "type": "Type[Checker]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "t", "type": "doctest.DocTest"}, {"lineNumber": 674, "col_offset": 25, "nodeName": "short_path", "type": "Callable[..., Any]"}, {"lineNumber": 674, "col_offset": 36, "nodeName": "filename", "type": "Optional[str]"}, {"lineNumber": 674, "col_offset": 48, "nodeName": "cwd", "type": "str"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "fails", "type": "int"}, {"lineNumber": 675, "col_offset": 19, "nodeName": "successes", "type": "int"}, {"lineNumber": 675, "col_offset": 31, "nodeName": "run", "type": "Callable[..., doctest.TestResults]"}, {"lineNumber": 675, "col_offset": 42, "nodeName": "t", "type": "doctest.DocTest"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "fails", "type": "int"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "success", "type": "bool"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 30, "nodeName": "old_printoptions", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 20, "nodeName": "old_errstate", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 707, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 26, "nodeName": "module", "type": "module"}, {"lineNumber": 707, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 715, "col_offset": 17, "nodeName": "doctest", "type": "module"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "find", "type": "Callable[..., List[doctest.DocTest]]"}, {"lineNumber": 717, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 717, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "output_dot", "type": "Callable[..., Any]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "results", "type": "List[Tuple[str, bool, str]]"}, {"lineNumber": 731, "col_offset": 24, "nodeName": "full_name", "type": "str"}, {"lineNumber": 731, "col_offset": 35, "nodeName": "success", "type": "bool"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 785, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 789, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 789, "col_offset": 18, "nodeName": "fname", "type": "Any"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "read", "type": "Callable"}, {"lineNumber": 801, "col_offset": 16, "nodeName": "parser", "type": "doctest.DocTestParser"}, {"lineNumber": 808, "col_offset": 27, "nodeName": "part", "type": "str"}, {"lineNumber": 817, "col_offset": 26, "nodeName": "success", "type": "bool"}, {"lineNumber": 819, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 819, "col_offset": 48, "nodeName": "output", "type": "List[nothing]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 840, "col_offset": 34, "nodeName": "lstrip", "type": "Callable[..., str]"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "OTHER_MODULE_DOCS", "type": "Dict[str, str]"}, {"lineNumber": 865, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 865, "col_offset": 27, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "BASE_MODULE", "type": "str"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 871, "col_offset": 29, "nodeName": "module_name", "type": "str"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "find_names", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 874, "col_offset": 23, "nodeName": "module", "type": "module"}, {"lineNumber": 874, "col_offset": 31, "nodeName": "names_dict", "type": "Dict[str, Set[str]]"}, {"lineNumber": 876, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 877, "col_offset": 27, "nodeName": "module", "type": "module"}, {"lineNumber": 885, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "module", "type": "module"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 893, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "names_dict", "type": "Dict[str, Set[str]]"}, {"lineNumber": 896, "col_offset": 31, "nodeName": "module", "type": "module"}, {"lineNumber": 896, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 899, "col_offset": 72, "nodeName": "module", "type": "module"}, {"lineNumber": 900, "col_offset": 42, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 900, "col_offset": 64, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 901, "col_offset": 39, "nodeName": "dots", "type": "bool"}, {"lineNumber": 903, "col_offset": 27, "nodeName": "check_doctests", "type": "Callable[..., Any]"}, {"lineNumber": 903, "col_offset": 42, "nodeName": "module", "type": "module"}, {"lineNumber": 907, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 907, "col_offset": 30, "nodeName": "v", "type": "Union[Tuple[None, bool, str], Tuple[str, bool, str], Tuple[Union[str, bool], ...]]"}, {"lineNumber": 907, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "results", "type": "List[Tuple[module, Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]]]"}, {"lineNumber": 909, "col_offset": 24, "nodeName": "module", "type": "module"}, {"lineNumber": 909, "col_offset": 32, "nodeName": "mod_results", "type": "Union[List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]], List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]]"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 943, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 948, "col_offset": 14, "nodeName": "module", "type": "module"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "name", "type": "Optional[Union[str, bool]]"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 973, "col_offset": 14, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "group", "type": "Callable"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "name", "type": "str"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "all_dict", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "ismodule", "type": "Callable[[object], bool]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "not_deprecated", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "deprecated", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "match", "type": "Callable"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "pat", "type": "str"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "match", "type": "Callable"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "pat", "type": "str"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "name", "type": "str"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "resolve", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 49, "nodeName": "error_stream", "type": "io.StringIO"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "group", "type": "Callable"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 383, "col_offset": 54, "nodeName": "line", "type": "str"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "validate_rst_syntax", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "__name__", "type": "str"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "module", "type": "module"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "full_name", "type": "str"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "inspect", "type": "module"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 443, "col_offset": 28, "nodeName": "full_name", "type": "str"}, {"lineNumber": 443, "col_offset": 46, "nodeName": "msg", "type": "str"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "getsourcefile", "type": "Callable[[Union[module, Type[Any], types.MethodType, Callable[..., Any], types.TracebackType, types.FrameType, types.CodeType]], Optional[str]]"}, {"lineNumber": 447, "col_offset": 56, "nodeName": "obj", "type": "Any"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "src_file", "type": "Optional[str]"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "full_name", "type": "str"}, {"lineNumber": 456, "col_offset": 38, "nodeName": "validate_rst_syntax", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 58, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 456, "col_offset": 64, "nodeName": "file_full_name", "type": "str"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "doctest", "type": "module"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "doctest", "type": "module"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "self", "type": "DTRunner"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "doctest", "type": "module"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "doctest", "type": "module"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "doctest", "type": "module"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "word", "type": "str"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "_source", "type": "Any"}, {"lineNumber": 545, "col_offset": 40, "nodeName": "word", "type": "str"}, {"lineNumber": 545, "col_offset": 48, "nodeName": "stopwords", "type": "Set[str]"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "word", "type": "str"}, {"lineNumber": 549, "col_offset": 23, "nodeName": "want", "type": "Any"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "word", "type": "str"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "rndm_markers", "type": "Set[str]"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "self", "type": "Checker"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "lstrip", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "int_pattern", "type": "Pattern[str]"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "int_pattern", "type": "Pattern[str]"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 562, "col_offset": 39, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "vanilla", "type": "doctest.OutputChecker"}, {"lineNumber": 574, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 574, "col_offset": 37, "nodeName": "ns", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 575, "col_offset": 35, "nodeName": "ns", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "strip", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "strip", "type": "Any"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "s_want", "type": "str"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "s_got", "type": "str"}, {"lineNumber": 591, "col_offset": 19, "nodeName": "parse_namedtuples", "type": "Any"}, {"lineNumber": 598, "col_offset": 16, "nodeName": "num", "type": "int"}, {"lineNumber": 599, "col_offset": 16, "nodeName": "regex", "type": "str"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "grp", "type": "List[Any]"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "got_again", "type": "str"}, {"lineNumber": 613, "col_offset": 19, "nodeName": "self", "type": "Checker"}, {"lineNumber": 629, "col_offset": 43, "nodeName": "self", "type": "Checker"}, {"lineNumber": 629, "col_offset": 59, "nodeName": "self", "type": "Checker"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 650, "col_offset": 33, "nodeName": "msg", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "out", "type": "Callable[[Any], Any]"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "msg", "type": "Any"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 674, "col_offset": 36, "nodeName": "t", "type": "doctest.DocTest"}, {"lineNumber": 675, "col_offset": 31, "nodeName": "runner", "type": "DTRunner"}, {"lineNumber": 675, "col_offset": 49, "nodeName": "out", "type": "Callable[[Any], Any]"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "module", "type": "module"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "finder", "type": "doctest.DocTestFinder"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "success", "type": "bool"}, {"lineNumber": 731, "col_offset": 44, "nodeName": "join", "type": "Callable"}, {"lineNumber": 731, "col_offset": 52, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 802, "col_offset": 37, "nodeName": "word", "type": "str"}, {"lineNumber": 802, "col_offset": 45, "nodeName": "PSEUDOCODE", "type": "Set[str]"}, {"lineNumber": 803, "col_offset": 37, "nodeName": "ex", "type": "doctest.Example"}, {"lineNumber": 803, "col_offset": 43, "nodeName": "examples", "type": "List[doctest.Example]"}, {"lineNumber": 840, "col_offset": 34, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 864, "col_offset": 37, "nodeName": "name", "type": "str"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 866, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "modules", "type": "List[module]"}, {"lineNumber": 883, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 883, "col_offset": 50, "nodeName": "modules", "type": "List[module]"}, {"lineNumber": 890, "col_offset": 29, "nodeName": "modules", "type": "List[module]"}, {"lineNumber": 891, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 892, "col_offset": 29, "nodeName": "__name__", "type": "str"}, {"lineNumber": 893, "col_offset": 12, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 903, "col_offset": 51, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 903, "col_offset": 76, "nodeName": "dots", "type": "bool"}, {"lineNumber": 904, "col_offset": 59, "nodeName": "doctest_warnings", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 940, "col_offset": 22, "nodeName": "x", "type": "Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]"}, {"lineNumber": 940, "col_offset": 31, "nodeName": "x", "type": "Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]"}, {"lineNumber": 940, "col_offset": 36, "nodeName": "mod_results", "type": "Union[List[Union[Tuple[None, bool, str], Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Union[Tuple[None, bool, str], Tuple[str, bool, str]]], List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]], List[Tuple[str, bool, str]]]"}, {"lineNumber": 943, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 947, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 947, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 949, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 973, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "res", "type": "Optional[Match[str]]"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "module_name", "type": "str"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "module", "type": "module"}, {"lineNumber": 221, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "only_all", "type": "Set[Any]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "name", "type": "str"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "name", "type": "str"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "others", "type": "Set[Any]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "only_ref", "type": "Set[str]"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "name", "type": "str"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "lineno", "type": "int"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "module", "type": "module"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "getdoc", "type": "Callable[[object], Optional[str]]"}, {"lineNumber": 414, "col_offset": 55, "nodeName": "module", "type": "module"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "module", "type": "module"}, {"lineNumber": 415, "col_offset": 62, "nodeName": "dots", "type": "bool"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "get_doc_object", "type": "Any"}, {"lineNumber": 431, "col_offset": 42, "nodeName": "obj", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 442, "col_offset": 46, "nodeName": "group", "type": "Callable"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "inspect", "type": "module"}, {"lineNumber": 456, "col_offset": 85, "nodeName": "dots", "type": "bool"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "self", "type": "Checker"}, {"lineNumber": 545, "col_offset": 48, "nodeName": "self", "type": "Checker"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "self", "type": "Checker"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "want", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "self", "type": "Checker"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "self", "type": "Checker"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "want", "type": "Any"}, {"lineNumber": 562, "col_offset": 39, "nodeName": "got", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "self", "type": "Checker"}, {"lineNumber": 574, "col_offset": 37, "nodeName": "self", "type": "Checker"}, {"lineNumber": 575, "col_offset": 35, "nodeName": "self", "type": "Checker"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "want", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "got", "type": "Any"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 584, "col_offset": 47, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 585, "col_offset": 46, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 588, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "check_output", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 589, "col_offset": 41, "nodeName": "s_want", "type": "str"}, {"lineNumber": 589, "col_offset": 49, "nodeName": "s_got", "type": "str"}, {"lineNumber": 589, "col_offset": 56, "nodeName": "optionflags", "type": "Any"}, {"lineNumber": 591, "col_offset": 19, "nodeName": "self", "type": "Checker"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 598, "col_offset": 26, "nodeName": "a_want", "type": "Any"}, {"lineNumber": 602, "col_offset": 22, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 602, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "check_output", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 607, "col_offset": 41, "nodeName": "want", "type": "Any"}, {"lineNumber": 607, "col_offset": 47, "nodeName": "got_again", "type": "str"}, {"lineNumber": 607, "col_offset": 58, "nodeName": "optionflags", "type": "Any"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "results", "type": "List[Tuple[str, bool, str]]"}, {"lineNumber": 710, "col_offset": 28, "nodeName": "full_name", "type": "str"}, {"lineNumber": 717, "col_offset": 49, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 717, "col_offset": 54, "nodeName": "ns", "type": "Dict[str, module]"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "results", "type": "List[Tuple[str, bool, str]]"}, {"lineNumber": 720, "col_offset": 28, "nodeName": "full_name", "type": "str"}, {"lineNumber": 803, "col_offset": 43, "nodeName": "tests", "type": "doctest.DocTest"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "module_names", "type": "List[str]"}, {"lineNumber": 891, "col_offset": 16, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 892, "col_offset": 29, "nodeName": "module", "type": "module"}, {"lineNumber": 893, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 900, "col_offset": 42, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 900, "col_offset": 46, "nodeName": "names", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 903, "col_offset": 51, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 904, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 947, "col_offset": 24, "nodeName": "module", "type": "module"}, {"lineNumber": 949, "col_offset": 24, "nodeName": "module", "type": "module"}, {"lineNumber": 954, "col_offset": 23, "nodeName": "success", "type": "Union[bool, str]"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 955, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 956, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 957, "col_offset": 21, "nodeName": "success", "type": "Union[bool, str]"}, {"lineNumber": 958, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 958, "col_offset": 22, "nodeName": "name", "type": "Optional[Union[str, bool]]"}, {"lineNumber": 959, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 960, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 961, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "module_name", "type": "str"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "module", "type": "module"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "module_name", "type": "str"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "module_name", "type": "str"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "add", "type": "Callable"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "join", "type": "Callable"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "inspect", "type": "module"}, {"lineNumber": 422, "col_offset": 71, "nodeName": "full_name", "type": "str"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "results", "type": "List[Union[Tuple[Union[str, bool], ...], Tuple[str, bool, str]]]"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "full_name", "type": "str"}, {"lineNumber": 442, "col_offset": 46, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "s_want", "type": "Any"}, {"lineNumber": 584, "col_offset": 47, "nodeName": "s_want", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "s_got", "type": "Any"}, {"lineNumber": 585, "col_offset": 46, "nodeName": "s_got", "type": "Any"}, {"lineNumber": 587, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "self", "type": "Checker"}, {"lineNumber": 602, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 602, "col_offset": 40, "nodeName": "replace", "type": "Any"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 603, "col_offset": 23, "nodeName": "grp", "type": "List[Any]"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "self", "type": "Checker"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 891, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 955, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 957, "col_offset": 33, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 957, "col_offset": 55, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 961, "col_offset": 22, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "names_dict", "type": "Dict[str, Set[str]]"}, {"lineNumber": 200, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "missing", "type": "Set[str]"}, {"lineNumber": 377, "col_offset": 63, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 602, "col_offset": 40, "nodeName": "got", "type": "Any"}, {"lineNumber": 606, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 712, "col_offset": 28, "nodeName": "format_exc", "type": "Callable[..., str]"}, {"lineNumber": 722, "col_offset": 28, "nodeName": "format_exc", "type": "Callable[..., str]"}, {"lineNumber": 955, "col_offset": 26, "nodeName": "output", "type": "Union[str, bool]"}, {"lineNumber": 957, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 957, "col_offset": 55, "nodeName": "output", "type": "Union[str, bool]"}, {"lineNumber": 959, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "name", "type": "Optional[Union[str, bool]]"}, {"lineNumber": 961, "col_offset": 22, "nodeName": "output", "type": "Union[str, bool]"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "format_exc", "type": "Callable[..., str]"}, {"lineNumber": 587, "col_offset": 35, "nodeName": "s_want", "type": "Any"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "s_got", "type": "Any"}, {"lineNumber": 600, "col_offset": 53, "nodeName": "num", "type": "int"}, {"lineNumber": 606, "col_offset": 44, "nodeName": "grp", "type": "List[Any]"}, {"lineNumber": 712, "col_offset": 28, "nodeName": "traceback", "type": "module"}, {"lineNumber": 722, "col_offset": 28, "nodeName": "traceback", "type": "module"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "traceback", "type": "module"}]