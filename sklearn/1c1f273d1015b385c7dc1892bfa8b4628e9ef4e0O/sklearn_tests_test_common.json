[{"lineNumber": 42, "col_offset": 0, "nodeName": "test_all_estimator_no_base_class", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "_sample_func", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "_tested_estimators", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_estimators", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "test_check_estimator_generate_only", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_configure", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "_tested_linear_classifiers", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_import_all_consistency", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_root_import_all_completeness", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "test_all_tests_are_importable", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "estimator_cls_checks", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "all_instance_checks", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "cwd", "type": "str"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "setup_filename", "type": "str"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "classifiers", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "pkgs", "type": "Iterator[pkgutil.ModuleInfo]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "modname", "type": "str"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "msg", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "check_parameters_default_constructible", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "isgenerator", "type": "Callable[[object], bool]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "isgenerator", "type": "Callable[[object], bool]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "classifiers", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "check_class_weight_balanced_linear_classifier", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "package", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "_set_check_estimator_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "BiclusterMixin", "type": "Type[sklearn.base.BiclusterMixin]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_set_checking_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "estimator_cls_checks", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "GridSearchCV", "type": "Type[sklearn.model_selection._search.GridSearchCV]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "setup_filename", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "cwd", "type": "str"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "pkgs", "type": "Iterator[pkgutil.ModuleInfo]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "modname", "type": "str"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "IS_PYPY", "type": "bool"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "package", "type": "module"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 194, "col_offset": 52, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "_construct_instance", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "all_instance_checks", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "_", "type": "Union[importlib.abc.MetaPathFinder, importlib.abc.PathEntryFinder]"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "modname", "type": "str"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "_", "type": "bool"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "package", "type": "module"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 189, "col_offset": 61, "nodeName": "modname", "type": "str"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 194, "col_offset": 52, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "modname", "type": "str"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "modname", "type": "str"}, {"lineNumber": 196, "col_offset": 67, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "items", "type": "Callable"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "ispkg", "type": "bool"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "exec", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "LinearClassifierMixin", "type": "Type[sklearn.linear_model._base.LinearClassifierMixin]"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "modname", "type": "str"}, {"lineNumber": 184, "col_offset": 62, "nodeName": "modname", "type": "str"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 216, "col_offset": 48, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "read", "type": "Callable"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 215, "col_offset": 57, "nodeName": "name", "type": "str"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "clazz", "type": "Any"}]