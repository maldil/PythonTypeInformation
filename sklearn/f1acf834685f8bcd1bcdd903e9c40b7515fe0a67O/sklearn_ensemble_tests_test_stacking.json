[{"lineNumber": 95, "col_offset": 0, "nodeName": "test_stacking_classifier_drop_column_binary_classification", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_stacking_classifier_drop_estimator", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "test_stacking_regressor_drop_estimator", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "test_stacking_regressor_sparse_passthrough", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "test_stacking_classifier_sparse_passthrough", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_stacking_classifier_drop_binary_prob", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 0, "nodeName": "test_stacking_classifier_stratify_default", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "RegressorMixin", "type": "Type[sklearn.base.RegressorMixin]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "ClassifierMixin", "type": "Type[sklearn.base.ClassifierMixin]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "y_diabetes", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "load_diabetes", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "load_iris", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "expected_column_count", "type": "int"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "expected_column_count_drop", "type": "int"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.ensemble._forest.RandomForestClassifier]]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, str], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestClassifier"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "clf_drop", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, str], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "reg_drop", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._base.LinearRegression], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "expected_result_length", "type": "int"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "predict_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "expected_column_count", "type": "int"}, {"lineNumber": 196, "col_offset": 7, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "expected_column_count_drop", "type": "int"}, {"lineNumber": 206, "col_offset": 7, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._base.LinearRegression], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestClassifier"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.ensemble._forest.RandomForestClassifier]]]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "estimator_full", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "estimator_drop", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "n_half_samples", "type": "int"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "total_sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "y_pred_no_weight", "type": "Any"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "y_pred_unit_weight", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "y_pred_biased", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "stacker_cv_3", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "stacker_cv_5", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "expected_column_count", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "expected_column_count_drop", "type": "int"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "load_breast_cancer", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "RandomForestClassifier", "type": "Type[sklearn.ensemble._forest.RandomForestClassifier]"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "y_diabetes", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "RandomForestRegressor", "type": "Type[sklearn.ensemble._forest.RandomForestRegressor]"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "StackingRegressor", "type": "Type[sklearn.ensemble._stacking.StackingRegressor]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "StackingRegressor", "type": "Type[sklearn.ensemble._stacking.StackingRegressor]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "y_diabetes", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "StackingRegressor", "type": "Type[sklearn.ensemble._stacking.StackingRegressor]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "predict_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "expected_column_count", "type": "int"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "expected_column_count_drop", "type": "int"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "y_diabetes", "type": "Any"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "RandomForestRegressor", "type": "Type[sklearn.ensemble._forest.RandomForestRegressor]"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "StackingRegressor", "type": "Type[sklearn.ensemble._stacking.StackingRegressor]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "format", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "RandomForestClassifier", "type": "Type[sklearn.ensemble._forest.RandomForestClassifier]"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "format", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "X_", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "y_", "type": "Any"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "X_", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "y_", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "X_", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "reg", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "clf", "type": "sklearn.dummy.DummyClassifier"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "check_no_attributes_set_in_init", "type": "Any"}, {"lineNumber": 383, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 383, "col_offset": 66, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 388, "col_offset": 10, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 421, "col_offset": 21, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 421, "col_offset": 33, "nodeName": "sample_weight_train", "type": "Any"}, {"lineNumber": 421, "col_offset": 54, "nodeName": "_", "type": "Any"}, {"lineNumber": 421, "col_offset": 58, "nodeName": "train_test_split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "total_sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 427, "col_offset": 39, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "predict", "type": "Any"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 433, "col_offset": 20, "nodeName": "y_pred_no_weight", "type": "Any"}, {"lineNumber": 433, "col_offset": 38, "nodeName": "y_pred_unit_weight", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 472, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 472, "col_offset": 34, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 473, "col_offset": 34, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "cv", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "decision_function", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.ensemble._forest.RandomForestClassifier]]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestClassifier"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, str], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestClassifier"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "clf_drop", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 139, "col_offset": 70, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 62, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, str], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "reg_drop", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 161, "col_offset": 58, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._base.LinearRegression], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 184, "col_offset": 67, "nodeName": "cv", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "predict_params", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "expected_result_length", "type": "int"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "asformat", "type": "Any"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._base.LinearRegression], Tuple[str, sklearn.svm._classes.LinearSVR]]]"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "asformat", "type": "Any"}, {"lineNumber": 233, "col_offset": 50, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.svm._classes.LinearSVC]]]"}, {"lineNumber": 239, "col_offset": 47, "nodeName": "rf", "type": "sklearn.ensemble._forest.RandomForestClassifier"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "y_iris", "type": "Any"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "estimators", "type": "List[Union[Tuple[str, sklearn.linear_model._logistic.LogisticRegression], Tuple[str, sklearn.ensemble._forest.RandomForestClassifier]]]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "NoWeightRegressor"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "DummyRegressor", "type": "Type[sklearn.dummy.DummyRegressor]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "NoWeightClassifier"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "DummyClassifier", "type": "Type[sklearn.dummy.DummyClassifier]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "type_err", "type": "Any"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "StackingClassifier", "type": "Type[sklearn.ensemble._stacking.StackingClassifier]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "type_err", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "StackingRegressor", "type": "Type[sklearn.ensemble._stacking.StackingRegressor]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "estimator_full", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "estimator_drop", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "estimator_drop", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 383, "col_offset": 36, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 429, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 435, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 436, "col_offset": 29, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "stacker_cv_3", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "stacker_cv_5", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "stacker_cv_3", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "stacker_cv_5", "type": "Any"}, {"lineNumber": 472, "col_offset": 34, "nodeName": "stacker_cv_3", "type": "Any"}, {"lineNumber": 473, "col_offset": 34, "nodeName": "stacker_cv_5", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 474, "col_offset": 40, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 477, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "RandomForestClassifier", "type": "Type[sklearn.ensemble._forest.RandomForestClassifier]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "clf_drop", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "clf_drop", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "clf_drop", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "LinearSVR", "type": "Type[sklearn.svm._classes.LinearSVR]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "reg_drop", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "reg_drop", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 182, "col_offset": 54, "nodeName": "LinearSVR", "type": "Type[sklearn.svm._classes.LinearSVR]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "X_trans", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "LinearSVR", "type": "Type[sklearn.svm._classes.LinearSVR]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 236, "col_offset": 56, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "RandomForestClassifier", "type": "Type[sklearn.ensemble._forest.RandomForestClassifier]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "reg", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "clf", "type": "sklearn.dummy.DummyClassifier"}, {"lineNumber": 303, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "msg_err", "type": "Any"}, {"lineNumber": 304, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "clf", "type": "sklearn.ensemble._stacking.StackingClassifier"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "msg_err", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "reg", "type": "sklearn.ensemble._stacking.StackingRegressor"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 18, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "KFold", "type": "Type[sklearn.model_selection._split.KFold]"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "KFold", "type": "Type[sklearn.model_selection._split.KFold]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 363, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 383, "col_offset": 36, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "n_half_samples", "type": "int"}, {"lineNumber": 425, "col_offset": 34, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "stacker", "type": "Any"}, {"lineNumber": 436, "col_offset": 52, "nodeName": "sample_weight_train", "type": "Any"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "est_cv_3", "type": "Any"}, {"lineNumber": 474, "col_offset": 40, "nodeName": "est_cv_5", "type": "Any"}, {"lineNumber": 477, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "self", "type": "NoWeightRegressor"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "self", "type": "NoWeightClassifier"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 332, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 419, "col_offset": 51, "nodeName": "n_half_samples", "type": "int"}, {"lineNumber": 430, "col_offset": 52, "nodeName": "ones", "type": "Any"}, {"lineNumber": 430, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "stacker_cv_3", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "stacker_cv_5", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "LinearSVR", "type": "Type[sklearn.svm._classes.LinearSVR]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "scale", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "shape", "type": "Any"}, {"lineNumber": 332, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "estimator_drop", "type": "Any"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 419, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 419, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 430, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 60, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "y_pred_no_weight", "type": "Any"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "y_pred_biased", "type": "Any"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "X_iris", "type": "Any"}, {"lineNumber": 332, "col_offset": 56, "nodeName": "X_diabetes", "type": "Any"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "estimator_full", "type": "Any"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "np", "type": "module"}]