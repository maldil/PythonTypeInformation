[{"lineNumber": 14, "col_offset": 0, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "fetch_20newsgroups_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "fetch_20newsgroups_vectorized_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "fetch_california_housing_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "fetch_covtype_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "fetch_kddcup99_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "fetch_olivetti_faces_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "fetch_rcv1_fxt", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "download_if_missing", "type": "bool"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "wrapped", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "download_if_missing", "type": "bool"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "fetch_20newsgroups", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "fetch_20newsgroups_vectorized", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "fetch_california_housing", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "fetch_covtype", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "fetch_kddcup99", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "fetch_olivetti_faces", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "_wrapped_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "fetch_rcv1", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}]