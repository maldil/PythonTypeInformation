[{"lineNumber": 60, "col_offset": 0, "nodeName": "test_spectral_unknown_mode", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "test_spectral_unknown_assign_labels", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_spectral_clustering_sparse", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "test_precomputed_nearest_neighbors_filtering", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "test_affinities", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_discretize", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "test_n_components", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_verbose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "histogram", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "amg_loaded", "type": "bool"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "S", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "centers", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "D", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "centers", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "D", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "n_neighbors", "type": "int"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "additional_neighbors", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "kernels_available", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "kern", "type": "str"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "kernels_available", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "n_class", "type": "int"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "circle1", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "circle2", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "circles", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "img", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "labels_arpack", "type": "Any"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "amg_loaded", "type": "bool"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "labels_same_ncomp", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "labels_diff_ncomp", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "captured", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "amg_loaded", "type": "bool"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "S", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "model_copy", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "true_labels", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "pairwise_distances", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "D", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "S", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "true_labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "pairwise_distances", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "D", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "S", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "rbf_kernel", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "S", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 135, "col_offset": 69, "nodeName": "X", "type": "Any"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "kernel_metrics", "type": "Callable[[], Dict[str, Callable[..., Any]]]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "y_true", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "y_indicator", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "y_true_noisy", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "indices", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "center1", "type": "Tuple[int, int]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "center2", "type": "Tuple[int, int]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "radius1", "type": "int"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "radius2", "type": "int"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "circle1", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "circle2", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "copy", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "astype", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "img_to_graph", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "spectral_clustering", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "labels_amg", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "labels", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "labels_same_ncomp", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "make_blobs", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 260, "col_offset": 69, "nodeName": "X", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 264, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 266, "col_offset": 7, "nodeName": "assign_labels", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "S", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "n_clusters", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "n_clusters", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "eigen_solver", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "eigen_solver", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "centers", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "D", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "spectral_clustering", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "S", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 55, "nodeName": "centers", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "D", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "spectral_clustering", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "S", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "S", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "S", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "labels", "type": "Any"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "X", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "kneighbors_graph", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "kern", "type": "str"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "labels", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "histogram", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "labels", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 180, "col_offset": 54, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "discretize", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "y_true_noisy", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "radius1", "type": "int"}, {"lineNumber": 210, "col_offset": 62, "nodeName": "radius2", "type": "int"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "circles", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "circles", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "spectral_clustering", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "X", "type": "Any"}, {"lineNumber": 250, "col_offset": 63, "nodeName": "X", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 251, "col_offset": 38, "nodeName": "labels_diff_ncomp", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 264, "col_offset": 58, "nodeName": "captured", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "search", "type": "Callable"}, {"lineNumber": 267, "col_offset": 53, "nodeName": "out", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "search", "type": "Callable"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "out", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "labels", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "pickle", "type": "module"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "model_copy", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "model_copy", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "model_copy", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "model", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 65, "nodeName": "graph", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "n_class", "type": "int"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 191, "col_offset": 55, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "y_true", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "std", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "labels_arpack", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "adjusted_rand_score", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "labels_arpack", "type": "Any"}, {"lineNumber": 227, "col_offset": 50, "nodeName": "labels_amg", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "spectral_clustering", "type": "Any"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "graph", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 267, "col_offset": 53, "nodeName": "captured", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "captured", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "pickle", "type": "module"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "NearestNeighbors", "type": "Type[sklearn.neighbors._unsupervised.NearestNeighbors]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "check_random_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "kern", "type": "str"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "ones", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "y_true", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 47, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "y_indicator", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "randn", "type": "Any"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "graph", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "eigen_solver", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "assign_labels", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "SpectralClustering", "type": "Type[sklearn.cluster._spectral.SpectralClustering]"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "sp", "type": "sklearn.cluster._spectral.SpectralClustering"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "arange", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "n_class", "type": "int"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "n_class", "type": "int"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "center1", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "center1", "type": "Tuple[int, int]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "center2", "type": "Tuple[int, int]"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "center2", "type": "Tuple[int, int]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "n_neighbors", "type": "int"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "additional_neighbors", "type": "int"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "n_neighbors", "type": "int"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "np", "type": "module"}]