[{"lineNumber": 38, "col_offset": 20, "nodeName": "TransformerMixin", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "_BaseHeterogeneousEnsemble", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "ClassifierMixin", "type": "Any"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "_BaseStacking", "type": "Type[_BaseStacking]"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "RegressorMixin", "type": "Any"}, {"lineNumber": 531, "col_offset": 40, "nodeName": "_BaseStacking", "type": "Type[_BaseStacking]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "cv", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "stack_method", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "named_estimators_", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "fit_params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "n_features_in_", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "serial", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "_le", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "est_idx", "type": "int"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "preds", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "_validate_estimators", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_validate_final_estimator", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "Bunch", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "org_est", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "names", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "check_cv", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "cv", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "_concatenate_predictions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "_fit_single_estimator", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "NotFittedError", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "_concatenate_predictions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "_VisualBlock", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "_VisualBlock", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "_VisualBlock", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "_clone_final_estimator", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "check_classification_targets", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "fit", "type": "Any"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "_le", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 438, "col_offset": 53, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 461, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "inverse_transform", "type": "Any"}, {"lineNumber": 462, "col_offset": 42, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "decision_function", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "_transform", "type": "Any"}, {"lineNumber": 519, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 527, "col_offset": 30, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "_sk_visual_block_", "type": "Any"}, {"lineNumber": 528, "col_offset": 41, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "_clone_final_estimator", "type": "Any"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "column_or_1d", "type": "Any"}, {"lineNumber": 682, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 683, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 683, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 683, "col_offset": 33, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 699, "col_offset": 15, "nodeName": "_transform", "type": "Any"}, {"lineNumber": 699, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 707, "col_offset": 30, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "_sk_visual_block_", "type": "Any"}, {"lineNumber": 708, "col_offset": 41, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "clone", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "clone", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "default", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "org_est", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "cv", "type": "Any"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "nfe", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 250, "col_offset": 62, "nodeName": "names", "type": "Any"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "serial", "type": "Any"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "cv", "type": "Any"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 409, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "_le", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 482, "col_offset": 51, "nodeName": "transform", "type": "Any"}, {"lineNumber": 482, "col_offset": 66, "nodeName": "X", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 502, "col_offset": 55, "nodeName": "transform", "type": "Any"}, {"lineNumber": 502, "col_offset": 70, "nodeName": "X", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 525, "col_offset": 30, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 527, "col_offset": 30, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 644, "col_offset": 23, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 645, "col_offset": 28, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "cv", "type": "Any"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 649, "col_offset": 24, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 650, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "is_regressor", "type": "Any"}, {"lineNumber": 655, "col_offset": 28, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 656, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 699, "col_offset": 15, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "RidgeCV", "type": "Any"}, {"lineNumber": 707, "col_offset": 30, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "method", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "est", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "named_estimators_", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 167, "col_offset": 61, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "cv", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "est", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "meth", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "names", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 173, "col_offset": 62, "nodeName": "stack_method", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "stack_method_", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "stack_method_", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 407, "col_offset": 44, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "LabelEncoder", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "_le", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 654, "col_offset": 44, "nodeName": "RidgeCV", "type": "Any"}, {"lineNumber": 655, "col_offset": 28, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 658, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "preds", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "format", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "method", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "est", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "stack_method_", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 658, "col_offset": 24, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "preds", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "stack_method_", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "preds", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "est_idx", "type": "int"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "self", "type": "_BaseStacking"}]