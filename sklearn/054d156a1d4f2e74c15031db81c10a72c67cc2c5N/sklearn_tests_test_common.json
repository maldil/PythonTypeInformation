[{"lineNumber": 48, "col_offset": 0, "nodeName": "test_all_estimator_no_base_class", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "_sample_func", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "_tested_estimators", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_estimators", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_check_estimator_generate_only", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_configure", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "_tested_linear_classifiers", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_import_all_consistency", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_root_import_all_completeness", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_all_tests_are_importable", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "test_class_support_removed", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "_generate_search_cv_instances", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_search_cv", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 0, "nodeName": "N_FEATURES_IN_AFTER_FIT_MODULES_TO_IGNORE", "type": "Set[str]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "N_FEATURES_IN_AFTER_FIT_ESTIMATORS", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "cwd", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "setup_path", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "setup_filename", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "classifiers", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "pkgs", "type": "Iterator[Tuple[Any, str, bool]]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "modname", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "msg", "type": "str"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "check_estimator", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "isgenerator", "type": "Callable[[object], bool]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "setup_path", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "classifiers", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "check_class_weight_balanced_linear_classifier", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "walk_packages", "type": "Callable[..., Iterator[Tuple[Any, str, bool]]]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "package", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "walk_packages", "type": "Callable[..., Iterator[Tuple[Any, str, bool]]]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "_set_checking_parameters", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "check_n_features_in_after_fitting", "type": "Any"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 296, "col_offset": 68, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "_get_check_estimator_ids", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "BiclusterMixin", "type": "Type[sklearn.base.BiclusterMixin]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_set_checking_parameters", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "setup_filename", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "setup_path", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "cwd", "type": "str"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "__path__", "type": "Any"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "pkgs", "type": "Iterator[Tuple[Any, str, bool]]"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "modname", "type": "str"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "IS_PYPY", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "package", "type": "module"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "__path__", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "__all__", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "check_estimator", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "parametrize_with_checks", "type": "Any"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "RandomizedSearchCV", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "RandomizedSearchCV", "type": "Any"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "_tested_estimators", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "N_FEATURES_IN_AFTER_FIT_MODULES_TO_IGNORE", "type": "Set[str]"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "_construct_instance", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "__path__", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "f", "type": "file"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "_", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "modname", "type": "str"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "_", "type": "bool"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "package", "type": "module"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 61, "nodeName": "modname", "type": "str"}, {"lineNumber": 170, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "modname", "type": "str"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 177, "col_offset": 56, "nodeName": "modname", "type": "str"}, {"lineNumber": 177, "col_offset": 67, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "walk_packages", "type": "Callable[..., Iterator[Tuple[Any, str, bool]]]"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "__path__", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "items", "type": "Callable"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "ispkg", "type": "bool"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "Ridge", "type": "Type[sklearn.linear_model._ridge.Ridge]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "SearchCV", "type": "nothing"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "param_grid", "type": "nothing"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "Ridge", "type": "Type[sklearn.linear_model._ridge.Ridge]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "LinearClassifierMixin", "type": "Type[sklearn.linear_model._base.LinearClassifierMixin]"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "modname", "type": "str"}, {"lineNumber": 165, "col_offset": 62, "nodeName": "modname", "type": "str"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "Estimator", "type": "nothing"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "FitFailedWarning", "type": "Type[sklearn.exceptions.FitFailedWarning]"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "split", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 196, "col_offset": 57, "nodeName": "name", "type": "str"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 234, "col_offset": 14, "nodeName": "SearchCV", "type": "nothing"}, {"lineNumber": 235, "col_offset": 47, "nodeName": "param_grid", "type": "nothing"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "f", "type": "file"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "make_pipeline", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "Estimator", "type": "nothing"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "clazz", "type": "Any"}]