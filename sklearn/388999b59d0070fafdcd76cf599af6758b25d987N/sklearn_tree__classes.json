[{"lineNumber": 50, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "DTYPE", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "DTYPE", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "CRITERIA_CLF", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "CRITERIA_REG", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "DENSE_SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "SPARSE_SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "MultiOutputMixin", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "ClassifierMixin", "type": "Any"}, {"lineNumber": 597, "col_offset": 46, "nodeName": "BaseDecisionTree", "type": "Type[BaseDecisionTree]"}, {"lineNumber": 974, "col_offset": 28, "nodeName": "RegressorMixin", "type": "Any"}, {"lineNumber": 974, "col_offset": 44, "nodeName": "BaseDecisionTree", "type": "Type[BaseDecisionTree]"}, {"lineNumber": 1291, "col_offset": 26, "nodeName": "DecisionTreeClassifier", "type": "Type[DecisionTreeClassifier]"}, {"lineNumber": 1537, "col_offset": 25, "nodeName": "DecisionTreeRegressor", "type": "Type[DecisionTreeRegressor]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_tree", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "_tree", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "Gini", "type": "Any"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "Entropy", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "MSE", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "FriedmanMSE", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "MAE", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "BestSplitter", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "RandomSplitter", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "BestSparseSplitter", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "RandomSparseSplitter", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "_splitter", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "_splitter", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "_splitter", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "_splitter", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "presort", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "presort", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "n_leaves", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "is_classification", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "expanded_class_weight", "type": "None"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "is_classification", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "max_features_", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "proba", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 529, "col_offset": 21, "nodeName": "pruned_tree", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "est", "type": "Any"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "proba", "type": "Any"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "proba", "type": "Any"}, {"lineNumber": 1247, "col_offset": 15, "nodeName": "self", "type": "DecisionTreeRegressor"}, {"lineNumber": 1252, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 1260, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 1282, "col_offset": 8, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "averaged_predictions", "type": "Any"}, {"lineNumber": 1288, "col_offset": 15, "nodeName": "averaged_predictions", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "check_random_state", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "check_X_params", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "check_y_params", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "atleast_1d", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "classes_", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "n_classes_", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "y_encoded", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "y_encoded", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "n_classes_", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "max", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "min_samples_leaf", "type": "int"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "min_samples_split", "type": "int"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "min_samples_split", "type": "int"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "max", "type": "Callable"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "expanded_class_weight", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "min_weight_leaf", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "min_weight_leaf", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "min_impurity_split", "type": "int"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "presort", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "is_classification", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "SPARSE_SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 339, "col_offset": 57, "nodeName": "DENSE_SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 375, "col_offset": 40, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 375, "col_offset": 55, "nodeName": "X_idx_sorted", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "n_classes_", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "classes_", "type": "List[Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "_prune_tree", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "_validate_X_predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "predict", "type": "Any"}, {"lineNumber": 428, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "_validate_X_predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 480, "col_offset": 40, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "apply", "type": "Any"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "_validate_X_predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 505, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 505, "col_offset": 40, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "decision_path", "type": "Any"}, {"lineNumber": 506, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 519, "col_offset": 25, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "pruned_tree", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "pruned_tree", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "_build_pruned_tree_ccp", "type": "Any"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "pruned_tree", "type": "Any"}, {"lineNumber": 527, "col_offset": 44, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 527, "col_offset": 56, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 566, "col_offset": 14, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 568, "col_offset": 15, "nodeName": "Bunch", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 588, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "compute_feature_importances", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 921, "col_offset": 24, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 922, "col_offset": 12, "nodeName": "_validate_X_predict", "type": "Any"}, {"lineNumber": 922, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 922, "col_offset": 40, "nodeName": "check_input", "type": "bool"}, {"lineNumber": 923, "col_offset": 16, "nodeName": "predict", "type": "Any"}, {"lineNumber": 923, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 925, "col_offset": 11, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 926, "col_offset": 12, "nodeName": "proba", "type": "Any"}, {"lineNumber": 927, "col_offset": 12, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "proba", "type": "Any"}, {"lineNumber": 929, "col_offset": 21, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 931, "col_offset": 19, "nodeName": "proba", "type": "Any"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "all_proba", "type": "List[Any]"}, {"lineNumber": 936, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 943, "col_offset": 19, "nodeName": "all_proba", "type": "List[Any]"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "predict_proba", "type": "Callable[..., Any]"}, {"lineNumber": 962, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 964, "col_offset": 11, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 968, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 971, "col_offset": 19, "nodeName": "proba", "type": "Any"}, {"lineNumber": 1190, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 1243, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 1254, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1254, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 1254, "col_offset": 27, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1255, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1262, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1262, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 1262, "col_offset": 27, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1263, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1282, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1282, "col_offset": 26, "nodeName": "grid", "type": "Any"}, {"lineNumber": 1283, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "compute_partial_dependence", "type": "Any"}, {"lineNumber": 1287, "col_offset": 12, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 1287, "col_offset": 18, "nodeName": "target_features", "type": "Any"}, {"lineNumber": 1287, "col_offset": 35, "nodeName": "averaged_predictions", "type": "Any"}, {"lineNumber": 1521, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1738, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "_validate_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "check_classification_targets", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "y_original", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "expanded_class_weight", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "n_classes_", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "numbers", "type": "module"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "numbers", "type": "module"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "max", "type": "Callable"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "min_samples_split", "type": "int"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "is_classification", "type": "Any"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 278, "col_offset": 36, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "_check_sample_weight", "type": "Any"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 288, "col_offset": 64, "nodeName": "X", "type": "Any"}, {"lineNumber": 288, "col_offset": 67, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "expanded_class_weight", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "Criterion", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "Splitter", "type": "Any"}, {"lineNumber": 343, "col_offset": 48, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "max_features_", "type": "Any"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 346, "col_offset": 48, "nodeName": "min_weight_leaf", "type": "Any"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "n_classes_", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "DepthFirstTreeBuilder", "type": "Any"}, {"lineNumber": 360, "col_offset": 44, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 360, "col_offset": 54, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 362, "col_offset": 44, "nodeName": "min_weight_leaf", "type": "Any"}, {"lineNumber": 363, "col_offset": 44, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 365, "col_offset": 44, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "BestFirstTreeBuilder", "type": "Any"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 368, "col_offset": 43, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "min_weight_leaf", "type": "Any"}, {"lineNumber": 370, "col_offset": 43, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 371, "col_offset": 43, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "builder", "type": "Any"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 377, "col_offset": 50, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "n_classes_", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "check_array", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 396, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "class_type", "type": "Any"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "k", "type": "int"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "atleast_1d", "type": "Any"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "n_classes_", "type": "Any"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 521, "col_offset": 31, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 521, "col_offset": 49, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 521, "col_offset": 60, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 523, "col_offset": 31, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 526, "col_offset": 31, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 527, "col_offset": 44, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 527, "col_offset": 56, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "est", "type": "Any"}, {"lineNumber": 567, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 837, "col_offset": 22, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 839, "col_offset": 22, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 840, "col_offset": 30, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 841, "col_offset": 29, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 842, "col_offset": 37, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 843, "col_offset": 25, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 844, "col_offset": 27, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 845, "col_offset": 25, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 846, "col_offset": 25, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 847, "col_offset": 34, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 849, "col_offset": 20, "nodeName": "presort", "type": "Any"}, {"lineNumber": 850, "col_offset": 22, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 892, "col_offset": 26, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 893, "col_offset": 24, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 894, "col_offset": 25, "nodeName": "X_idx_sorted", "type": "Any"}, {"lineNumber": 922, "col_offset": 12, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 923, "col_offset": 16, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 925, "col_offset": 11, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 926, "col_offset": 20, "nodeName": "proba", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 936, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 936, "col_offset": 27, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "proba_k", "type": "Any"}, {"lineNumber": 938, "col_offset": 16, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 940, "col_offset": 16, "nodeName": "proba_k", "type": "Any"}, {"lineNumber": 940, "col_offset": 27, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 964, "col_offset": 11, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 965, "col_offset": 26, "nodeName": "proba", "type": "Any"}, {"lineNumber": 968, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 1191, "col_offset": 22, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 1192, "col_offset": 21, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 1193, "col_offset": 22, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 1194, "col_offset": 30, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 1195, "col_offset": 29, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 1196, "col_offset": 37, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 1197, "col_offset": 25, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 1198, "col_offset": 27, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 1199, "col_offset": 25, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1200, "col_offset": 34, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 1201, "col_offset": 31, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 1202, "col_offset": 20, "nodeName": "presort", "type": "Any"}, {"lineNumber": 1203, "col_offset": 22, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 1244, "col_offset": 26, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1245, "col_offset": 24, "nodeName": "check_input", "type": "Any"}, {"lineNumber": 1246, "col_offset": 25, "nodeName": "X_idx_sorted", "type": "Any"}, {"lineNumber": 1254, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1255, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1255, "col_offset": 33, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 1262, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1263, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1263, "col_offset": 30, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 1263, "col_offset": 53, "nodeName": "intp", "type": "Any"}, {"lineNumber": 1282, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1282, "col_offset": 38, "nodeName": "DTYPE", "type": "Any"}, {"lineNumber": 1283, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1284, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 1522, "col_offset": 22, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 1523, "col_offset": 21, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 1524, "col_offset": 22, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 1525, "col_offset": 30, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 1526, "col_offset": 29, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 1527, "col_offset": 37, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 1528, "col_offset": 25, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 1529, "col_offset": 27, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 1530, "col_offset": 25, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 1531, "col_offset": 34, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 1532, "col_offset": 31, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 1533, "col_offset": 25, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1534, "col_offset": 22, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 1739, "col_offset": 22, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 1740, "col_offset": 21, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 1741, "col_offset": 22, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 1742, "col_offset": 30, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 1743, "col_offset": 29, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 1744, "col_offset": 37, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 1745, "col_offset": 25, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 1746, "col_offset": 27, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 1747, "col_offset": 34, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 1748, "col_offset": 31, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 1749, "col_offset": 25, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1750, "col_offset": 22, "nodeName": "ccp_alpha", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "DTYPE", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "sort_indices", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "copy", "type": "Any"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "int", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "classes_k", "type": "Any"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "unique", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "classes_k", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "compute_sample_weight", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "y_original", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "intp", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "flags", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "iinfo", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "int32", "type": "Any"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "max_features", "type": "int"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "max_features", "type": "int"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 278, "col_offset": 36, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "numbers", "type": "module"}, {"lineNumber": 282, "col_offset": 36, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 292, "col_offset": 48, "nodeName": "expanded_class_weight", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 302, "col_offset": 38, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 333, "col_offset": 57, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 334, "col_offset": 57, "nodeName": "n_classes_", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 57, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 337, "col_offset": 57, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "SPLITTERS", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "DTYPE", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "take", "type": "Any"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 450, "col_offset": 23, "nodeName": "proba", "type": "Any"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "proba", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 521, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 521, "col_offset": 60, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 523, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 526, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 566, "col_offset": 14, "nodeName": "clone", "type": "Any"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 568, "col_offset": 23, "nodeName": "ccp_pruning_path", "type": "Any"}, {"lineNumber": 568, "col_offset": 40, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 923, "col_offset": 16, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 927, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 936, "col_offset": 27, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 937, "col_offset": 26, "nodeName": "proba", "type": "Any"}, {"lineNumber": 939, "col_offset": 16, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 941, "col_offset": 33, "nodeName": "proba_k", "type": "Any"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "proba", "type": "Any"}, {"lineNumber": 969, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 1190, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1255, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 1263, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 1263, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1283, "col_offset": 46, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1284, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "self", "type": "DecisionTreeRegressor"}, {"lineNumber": 1521, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1738, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 157, "col_offset": 60, "nodeName": "check_X_params", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "check_y_params", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "intc", "type": "Any"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 162, "col_offset": 67, "nodeName": "intc", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "classes_", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "n_classes_", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 224, "col_offset": 64, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 239, "col_offset": 66, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "max", "type": "Callable"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "max_features", "type": "int"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "numbers", "type": "module"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "max_features", "type": "int"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "max_features", "type": "int"}, {"lineNumber": 273, "col_offset": 63, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "CRITERIA_CLF", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 57, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 334, "col_offset": 57, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "CRITERIA_REG", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 57, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 355, "col_offset": 68, "nodeName": "intp", "type": "Any"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 389, "col_offset": 51, "nodeName": "intc", "type": "Any"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 390, "col_offset": 50, "nodeName": "intc", "type": "Any"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 399, "col_offset": 50, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 434, "col_offset": 42, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 434, "col_offset": 52, "nodeName": "proba", "type": "Any"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 438, "col_offset": 51, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 439, "col_offset": 45, "nodeName": "class_type", "type": "Any"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 441, "col_offset": 40, "nodeName": "take", "type": "Any"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "n_outputs_", "type": "Any"}, {"lineNumber": 525, "col_offset": 69, "nodeName": "intp", "type": "Any"}, {"lineNumber": 568, "col_offset": 40, "nodeName": "est", "type": "Any"}, {"lineNumber": 926, "col_offset": 30, "nodeName": "n_classes_", "type": "Any"}, {"lineNumber": 927, "col_offset": 25, "nodeName": "proba", "type": "Any"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 928, "col_offset": 23, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 938, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "all_proba", "type": "List[Any]"}, {"lineNumber": 969, "col_offset": 22, "nodeName": "k", "type": "int"}, {"lineNumber": 969, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 969, "col_offset": 34, "nodeName": "proba", "type": "Any"}, {"lineNumber": 1283, "col_offset": 46, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 162, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "classes_k", "type": "Any"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 251, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 273, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 273, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 355, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "indices", "type": "Any"}, {"lineNumber": 389, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 390, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 434, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 438, "col_offset": 51, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 525, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 926, "col_offset": 30, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 937, "col_offset": 35, "nodeName": "k", "type": "int"}, {"lineNumber": 938, "col_offset": 29, "nodeName": "proba_k", "type": "Any"}, {"lineNumber": 938, "col_offset": 52, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 969, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 251, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 441, "col_offset": 35, "nodeName": "k", "type": "int"}, {"lineNumber": 441, "col_offset": 40, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 937, "col_offset": 39, "nodeName": "n_classes_", "type": "Any"}, {"lineNumber": 938, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 251, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 253, "col_offset": 42, "nodeName": "log2", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 265, "col_offset": 59, "nodeName": "n_features_", "type": "Any"}, {"lineNumber": 937, "col_offset": 39, "nodeName": "self", "type": "DecisionTreeClassifier"}, {"lineNumber": 937, "col_offset": 55, "nodeName": "k", "type": "int"}, {"lineNumber": 253, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "self", "type": "BaseDecisionTree"}, {"lineNumber": 265, "col_offset": 59, "nodeName": "self", "type": "BaseDecisionTree"}]