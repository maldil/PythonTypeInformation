[{"lineNumber": 36, "col_offset": 20, "nodeName": "TransformerMixin", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "_BaseHeterogeneousEnsemble", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "ClassifierMixin", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "_BaseStacking", "type": "Type[_BaseStacking]"}, {"lineNumber": 500, "col_offset": 24, "nodeName": "RegressorMixin", "type": "Any"}, {"lineNumber": 500, "col_offset": 40, "nodeName": "_BaseStacking", "type": "Type[_BaseStacking]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "cv", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "stack_method", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "n_features_in_", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "n_features_in_", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "named_estimators_", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "fit_params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "_le", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "est_idx", "type": "int"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "preds", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "_validate_estimators", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "_validate_final_estimator", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "Bunch", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "org_est", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "names", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "check_cv", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "cv", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "_concatenate_predictions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_fit_single_estimator", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "X_meta", "type": "Any"}, {"lineNumber": 194, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "_concatenate_predictions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "_clone_final_estimator", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "check_classification_targets", "type": "Any"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "fit", "type": "Any"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "_le", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 416, "col_offset": 53, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 439, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "inverse_transform", "type": "Any"}, {"lineNumber": 440, "col_offset": 42, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "decision_function", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "_transform", "type": "Any"}, {"lineNumber": 497, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "_clone_final_estimator", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "column_or_1d", "type": "Any"}, {"lineNumber": 650, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 651, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 651, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 651, "col_offset": 33, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "_transform", "type": "Any"}, {"lineNumber": 667, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "clone", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "clone", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "default", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "org_est", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "cv", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "cv", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "stack_method", "type": "Any"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 416, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 439, "col_offset": 38, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "_le", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 460, "col_offset": 51, "nodeName": "transform", "type": "Any"}, {"lineNumber": 460, "col_offset": 66, "nodeName": "X", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 480, "col_offset": 55, "nodeName": "transform", "type": "Any"}, {"lineNumber": 480, "col_offset": 70, "nodeName": "X", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 612, "col_offset": 23, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 613, "col_offset": 28, "nodeName": "final_estimator", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "cv", "type": "Any"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "passthrough", "type": "Any"}, {"lineNumber": 618, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "is_regressor", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 624, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "method", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "est", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "named_estimators_", "type": "Any"}, {"lineNumber": 166, "col_offset": 47, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 166, "col_offset": 61, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "cv", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "est", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "meth", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "names", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 172, "col_offset": 62, "nodeName": "stack_method", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "stack_method_", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "stack_method_", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 385, "col_offset": 44, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "LabelEncoder", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "_le", "type": "Any"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 622, "col_offset": 44, "nodeName": "RidgeCV", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "final_estimator_", "type": "Any"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "preds", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "format", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "method", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "est", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "est_fitted_idx", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "name_est", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "all_estimators", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "stack_method_", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "est", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "self", "type": "StackingClassifier"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "self", "type": "StackingRegressor"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "preds", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "stack_method_", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "preds", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "X_meta", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "_BaseStacking"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "est_idx", "type": "int"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "_BaseStacking"}]