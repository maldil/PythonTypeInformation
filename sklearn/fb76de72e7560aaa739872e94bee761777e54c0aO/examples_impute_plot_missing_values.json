[{"lineNumber": 45, "col_offset": 0, "nodeName": "get_scores_for_imputer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "get_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "rng", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "REGRESSOR", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "results_diabetes", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "mses_diabetes", "type": "Any"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "stds_diabetes", "type": "Any"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "results_boston", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "mses_boston", "type": "Any"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "stds_boston", "type": "Any"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "n_bars", "type": "int"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "xval", "type": "Any"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "x_labels", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "colors", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "j", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "xval", "type": "Any"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "j", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "xval", "type": "Any"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 6, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "RandomForestRegressor", "type": "Type[sklearn.ensemble._forest.RandomForestRegressor]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "estimator", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "impute_scores", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "impute_scores", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "full_scores", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "missing_rate", "type": "float"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "n_missing_samples", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "missing_samples", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "missing_features", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "imputer", "type": "sklearn.impute._base.SimpleImputer"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "zero_impute_scores", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "imputer", "type": "sklearn.impute._base.SimpleImputer"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "mean_impute_scores", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "imputer", "type": "sklearn.impute._knn.KNNImputer"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "knn_impute_scores", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "imputer", "type": "sklearn.impute._iterative.IterativeImputer"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "iterative_impute_scores", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "results_diabetes", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "results_boston", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "mses_diabetes", "type": "Any"}, {"lineNumber": 117, "col_offset": 7, "nodeName": "arange", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "n_bars", "type": "int"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "figure", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "subplot", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "set_xlim", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "xval", "type": "Any"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "invert_yaxis", "type": "Any"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "set_yticklabels", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "x_labels", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "subplot", "type": "Any"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "xval", "type": "Any"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "invert_yaxis", "type": "Any"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "set_yticklabels", "type": "Any"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "show", "type": "Any"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "make_pipeline", "type": "Callable[..., sklearn.pipeline.Pipeline]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "REGRESSOR", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "estimator", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "target", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "REGRESSOR", "type": "sklearn.ensemble._forest.RandomForestRegressor"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "missing_samples", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "n_missing_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "SimpleImputer", "type": "Type[sklearn.impute._base.SimpleImputer]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "get_scores_for_imputer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "imputer", "type": "sklearn.impute._base.SimpleImputer"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 82, "col_offset": 68, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "SimpleImputer", "type": "Type[sklearn.impute._base.SimpleImputer]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "get_scores_for_imputer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "imputer", "type": "sklearn.impute._base.SimpleImputer"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "KNNImputer", "type": "Type[sklearn.impute._knn.KNNImputer]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "get_scores_for_imputer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "imputer", "type": "sklearn.impute._knn.KNNImputer"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "IterativeImputer", "type": "Type[sklearn.impute._iterative.IterativeImputer]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "get_scores_for_imputer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "imputer", "type": "sklearn.impute._iterative.IterativeImputer"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "get_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "results_diabetes", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "get_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "results_boston", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "plt", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "barh", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "j", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "plt", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "barh", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "j", "type": "Any"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "n_bars", "type": "int"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "make_union", "type": "Callable[..., sklearn.pipeline.FeatureUnion]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "imputer", "type": "sklearn.impute._base.SimpleImputer"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "floor", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "rng", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "load_diabetes", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "load_boston", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "mses_diabetes", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "mses_boston", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "MissingIndicator", "type": "Type[sklearn.impute._base.MissingIndicator]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "missing_rate", "type": "float"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "n_missing_samples", "type": "int"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "missing_features", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "std", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "std", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "std", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "std", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "std", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "j", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "stds_diabetes", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "colors", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "min", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "mses_diabetes", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "max", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "mses_diabetes", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "j", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "stds_boston", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "colors", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "n_missing_samples", "type": "int"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "bool", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "bool", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "full_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "full_scores", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "zero_impute_scores", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "zero_impute_scores", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "mean_impute_scores", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "mean_impute_scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "knn_impute_scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "knn_impute_scores", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "iterative_impute_scores", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "iterative_impute_scores", "type": "Any"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "j", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "j", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "where", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "missing_samples", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "np", "type": "module"}]