[{"lineNumber": 56, "col_offset": 0, "nodeName": "test_as_float_array", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_np_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_memmap", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_ordering", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "test_check_array_force_all_finite_object", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_check_array", "type": "Callable[[], Any]"}, {"lineNumber": 352, "col_offset": 0, "nodeName": "test_check_array_pandas_dtype_object_conversion", "type": "Callable[[], Any]"}, {"lineNumber": 364, "col_offset": 0, "nodeName": "test_check_array_pandas_dtype_casting", "type": "Callable[[], Any]"}, {"lineNumber": 403, "col_offset": 0, "nodeName": "test_check_array_on_mock_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 0, "nodeName": "test_check_array_dtype_stability", "type": "Callable[[], Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "test_check_array_dtype_warning", "type": "Callable[[], Any]"}, {"lineNumber": 456, "col_offset": 0, "nodeName": "test_check_array_accept_sparse_type_exception", "type": "Callable[[], Any]"}, {"lineNumber": 481, "col_offset": 0, "nodeName": "test_check_array_accept_sparse_no_exception", "type": "Callable[[], Any]"}, {"lineNumber": 491, "col_offset": 0, "nodeName": "X_64bit", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 0, "nodeName": "test_check_array_accept_large_sparse_no_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 0, "nodeName": "test_check_array_accept_large_sparse_raise_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 0, "nodeName": "test_check_array_min_samples_and_features_messages", "type": "Callable[[], Any]"}, {"lineNumber": 576, "col_offset": 0, "nodeName": "test_check_array_complex_data_error", "type": "Callable[[], Any]"}, {"lineNumber": 615, "col_offset": 0, "nodeName": "test_has_fit_parameter", "type": "Callable[[], Any]"}, {"lineNumber": 631, "col_offset": 0, "nodeName": "test_check_symmetric", "type": "Callable[[], Any]"}, {"lineNumber": 664, "col_offset": 0, "nodeName": "test_check_is_fitted", "type": "Callable[[], Any]"}, {"lineNumber": 700, "col_offset": 0, "nodeName": "test_check_is_fitted_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 746, "col_offset": 0, "nodeName": "test_check_consistent_length", "type": "Callable[[], Any]"}, {"lineNumber": 766, "col_offset": 0, "nodeName": "test_check_dataframe_fit_attribute", "type": "Callable[[], Any]"}, {"lineNumber": 778, "col_offset": 0, "nodeName": "test_suppress_validation", "type": "Callable[[], Any]"}, {"lineNumber": 789, "col_offset": 0, "nodeName": "test_check_array_series", "type": "Callable[[], Any]"}, {"lineNumber": 801, "col_offset": 0, "nodeName": "test_check_dataframe_mixed_float_dtypes", "type": "Callable[[], Any]"}, {"lineNumber": 831, "col_offset": 0, "nodeName": "test_check_memory", "type": "Callable[[], Any]"}, {"lineNumber": 852, "col_offset": 0, "nodeName": "test_check_array_memmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 881, "col_offset": 0, "nodeName": "test_check_X_y_informative_error", "type": "Callable[[], Any]"}, {"lineNumber": 888, "col_offset": 0, "nodeName": "test_retrieve_samples_from_non_standard_shape", "type": "Callable[[], Any]"}, {"lineNumber": 1015, "col_offset": 0, "nodeName": "test_check_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 1068, "col_offset": 0, "nodeName": "test_allclose_dense_sparse_raise", "type": "Callable[[Any], Any]"}, {"lineNumber": 1079, "col_offset": 0, "nodeName": "test_deprecate_positional_args_warns_for_function", "type": "Callable[[], Any]"}, {"lineNumber": 1111, "col_offset": 0, "nodeName": "test_deprecate_positional_args_warns_for_class", "type": "Callable[[], Any]"}, {"lineNumber": 1140, "col_offset": 0, "nodeName": "test_check_fit_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 1168, "col_offset": 0, "nodeName": "test_check_sparse_pandas_sp_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 940, "col_offset": 0, "nodeName": "_psd_cases_valid", "type": "Dict[str, Union[Tuple[Tuple[int, float], numpy.ndarray, Type[sklearn.exceptions.PositiveSpectrumWarning], str], Tuple[numpy.ndarray, numpy.ndarray, Type[sklearn.exceptions.PositiveSpectrumWarning], str], Tuple[Tuple[int, complex], numpy.ndarray, Type[sklearn.exceptions.PositiveSpectrumWarning], str], Tuple[numpy.ndarray, numpy.ndarray, None, str], Tuple[Tuple[int, int], numpy.ndarray, None, str]]]"}, {"lineNumber": 988, "col_offset": 0, "nodeName": "_psd_cases_invalid", "type": "Dict[str, Union[Tuple[numpy.ndarray, Type[ValueError], str], Tuple[Tuple[int, int], Type[ValueError], str], Tuple[Tuple[int, complex], Type[ValueError], str]]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "X2", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "X2", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "tested_dtypes", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "tested_dtypes", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "X2", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "matrices", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "M", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "matrices", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "nan", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "nan", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "X_converted", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "asflt", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "value", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "value", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "X_array", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "X_ndim", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "X_F", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "X_int", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "X_float", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "Xs", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "orders", "type": "List[Optional[str]]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "copys", "type": "List[bool]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "X_coo", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "X_dok", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "X_int", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "X_float", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "Xs", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "accept_sparses", "type": "List[List[str]]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "X_dense", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "X_no_array", "type": "sklearn.utils.estimator_checks._NotAnArray"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "expected_warn_regex", "type": "str"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "X_str", "type": "List[List[str]]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "X", "type": "Union[List[List[str]], numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "X_bytes", "type": "List[List[bytes]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "X", "type": "Union[List[List[bytes]], numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "X_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "cat_df", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "mock_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "checked_arr", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "checked_arr", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "X_int_list", "type": "List[List[int]]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "X_float32", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "X_int64", "type": "numpy.ndarray"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "X_csr_float32", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "X_csc_float32", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "X_csc_int32", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "integer_data", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "float32_data", "type": "List[Any]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 428, "col_offset": 13, "nodeName": "integer_data", "type": "List[Any]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "float32_data", "type": "List[Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "invalid_type", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "attr", "type": "str"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "X", "type": "List[List[complex]]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "X", "type": "Tuple[Tuple[complex, complex, complex], Tuple[complex, complex, complex]]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "X", "type": "Tuple[numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "X", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "arr_sym", "type": "numpy.ndarray"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "arr_bad", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "test_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "svr", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "a_", "type": "str"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "b_", "type": "str"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "memory", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "memory", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "dummy", "type": "DummyMemory"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "memory", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "dummy", "type": "WrongDummyMemory"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "y", "type": "None"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 1041, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 1073, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1143, "col_offset": 4, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "indices_", "type": "Union[Any, List[int]]"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "sp_mat", "type": "Any"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "sdf", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "int64", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "bool", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "int8", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "int16", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "uint16", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "X2", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "isfortran", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "nan", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "X_converted", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "tmp", "type": "IO[bytes]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "M", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "f", "type": "Union[Callable[..., Any], Callable[..., numpy.ndarray], Callable[[Any], Any]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "T", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "copy", "type": "bool"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "retype", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "retype", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "X_ndim", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "int", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "float", "type": "Any"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "X_F", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "X_int", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "X_float", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "int32", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "int", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "float", "type": "Any"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 260, "col_offset": 60, "nodeName": "bool", "type": "Any"}, {"lineNumber": 260, "col_offset": 69, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "order", "type": "Optional[str]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "copy", "type": "bool"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "product", "type": "Callable"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "Xs", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 45, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 53, "nodeName": "orders", "type": "List[Optional[str]]"}, {"lineNumber": 264, "col_offset": 61, "nodeName": "copys", "type": "List[bool]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "copy", "type": "bool"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "tocoo", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "todok", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "int", "type": "Any"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 290, "col_offset": 27, "nodeName": "float", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "X_coo", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "X_dok", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "X_int", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "X_float", "type": "Any"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "product", "type": "Callable"}, {"lineNumber": 294, "col_offset": 49, "nodeName": "Xs", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 53, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 61, "nodeName": "accept_sparses", "type": "List[List[str]]"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "copys", "type": "List[bool]"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "copy", "type": "bool"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "X_dense", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "_NotAnArray", "type": "Type[sklearn.utils.estimator_checks._NotAnArray]"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "X_dense", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "X_no_array", "type": "sklearn.utils.estimator_checks._NotAnArray"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "X_str", "type": "List[List[str]]"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "X_bytes", "type": "List[List[bytes]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "MockDataFrame", "type": "Type[sklearn.utils._mocking.MockDataFrame]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "X_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 369, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 372, "col_offset": 45, "nodeName": "float16", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "int16", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 380, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 381, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 383, "col_offset": 45, "nodeName": "float16", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 386, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "int16", "type": "Any"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "int16", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 392, "col_offset": 58, "nodeName": "float64", "type": "Any"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "int64", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "float64", "type": "Any"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "MockDataFrame", "type": "Type[sklearn.utils._mocking.MockDataFrame]"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 30, "nodeName": "mock_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 30, "nodeName": "mock_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "X_int_list", "type": "List[List[int]]"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "X_int_list", "type": "List[List[int]]"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "X_float32", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 424, "col_offset": 34, "nodeName": "X_float32", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "X_int64", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "X_int64", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "X_csc_int32", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "X_float32", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 31, "nodeName": "X_csr_float32", "type": "Any"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "X_csc_float32", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 48, "nodeName": "X_csc_float32", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "X_csc_float32", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "SVR", "type": "Type[sklearn.svm._classes.SVR]"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 483, "col_offset": 26, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 497, "col_offset": 10, "nodeName": "X", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "X_64bit", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "y_checked", "type": "Any"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 571, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 573, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 573, "col_offset": 26, "nodeName": "y_checked", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "MockDataFrame", "type": "Type[sklearn.utils._mocking.MockDataFrame]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "has_fit_parameter", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 617, "col_offset": 29, "nodeName": "RandomForestRegressor", "type": "Type[sklearn.ensemble._forest.RandomForestRegressor]"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "has_fit_parameter", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "SVR", "type": "Type[sklearn.svm._classes.SVR]"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "has_fit_parameter", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "has_fit_parameter", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 626, "col_offset": 29, "nodeName": "TestClassWithDeprecatedFitMethod", "type": "Type[Any]"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "arr_format", "type": "str"}, {"lineNumber": 649, "col_offset": 20, "nodeName": "arr", "type": "Any"}, {"lineNumber": 649, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 671, "col_offset": 10, "nodeName": "ARDRegression", "type": "Type[sklearn.linear_model._bayes.ARDRegression]"}, {"lineNumber": 672, "col_offset": 10, "nodeName": "SVR", "type": "Type[sklearn.svm._classes.SVR]"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 690, "col_offset": 11, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 706, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[Any]"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 732, "col_offset": 10, "nodeName": "ARDRegression", "type": "Type[sklearn.linear_model._bayes.ARDRegression]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 774, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "set_config", "type": "Callable[..., None]"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "assert_all_finite", "type": "Callable[..., Any]"}, {"lineNumber": 783, "col_offset": 22, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "set_config", "type": "Callable[..., None]"}, {"lineNumber": 791, "col_offset": 9, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 792, "col_offset": 10, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 793, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 797, "col_offset": 10, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 797, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 798, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 808, "col_offset": 9, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 809, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 819, "col_offset": 40, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 824, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "check_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "cachedir", "type": "Any"}, {"lineNumber": 835, "col_offset": 13, "nodeName": "check_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "cachedir", "type": "Any"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "DummyMemory", "type": "Type[DummyMemory]"}, {"lineNumber": 838, "col_offset": 13, "nodeName": "check_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 838, "col_offset": 26, "nodeName": "dummy", "type": "DummyMemory"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "memory", "type": "Any"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "dummy", "type": "DummyMemory"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "WrongDummyMemory", "type": "Type[WrongDummyMemory]"}, {"lineNumber": 846, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 847, "col_offset": 60, "nodeName": "dummy", "type": "WrongDummyMemory"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 855, "col_offset": 41, "nodeName": "X_memmap", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "retype", "type": "Any"}, {"lineNumber": 870, "col_offset": 15, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "check_non_negative", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 871, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "retype", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "check_non_negative", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 873, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "retype", "type": "Any"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "A", "type": "numpy.ndarray"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "TestNonNumericShape", "type": "Type[Any]"}, {"lineNumber": 914, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 933, "col_offset": 37, "nodeName": "raised_error", "type": "Any"}, {"lineNumber": 944, "col_offset": 27, "nodeName": "PositiveSpectrumWarning", "type": "Type[sklearn.exceptions.PositiveSpectrumWarning]"}, {"lineNumber": 948, "col_offset": 26, "nodeName": "PositiveSpectrumWarning", "type": "Type[sklearn.exceptions.PositiveSpectrumWarning]"}, {"lineNumber": 951, "col_offset": 34, "nodeName": "PositiveSpectrumWarning", "type": "Type[sklearn.exceptions.PositiveSpectrumWarning]"}, {"lineNumber": 956, "col_offset": 34, "nodeName": "PositiveSpectrumWarning", "type": "Type[sklearn.exceptions.PositiveSpectrumWarning]"}, {"lineNumber": 960, "col_offset": 26, "nodeName": "PositiveSpectrumWarning", "type": "Type[sklearn.exceptions.PositiveSpectrumWarning]"}, {"lineNumber": 975, "col_offset": 11, "nodeName": "enable_warnings", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "w_type", "type": "None"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "w_msg", "type": "str"}, {"lineNumber": 979, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 984, "col_offset": 7, "nodeName": "w_type", "type": "Optional[Any]"}, {"lineNumber": 989, "col_offset": 34, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 991, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 993, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 996, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 999, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1019, "col_offset": 20, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1019, "col_offset": 41, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1020, "col_offset": 11, "nodeName": "flags", "type": "Any"}, {"lineNumber": 1023, "col_offset": 20, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1024, "col_offset": 20, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1027, "col_offset": 20, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 1028, "col_offset": 20, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1042, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1043, "col_offset": 20, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1043, "col_offset": 41, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1043, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 1044, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1044, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1048, "col_offset": 20, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1048, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 1049, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1049, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1055, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1056, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1056, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 1057, "col_offset": 11, "nodeName": "_allclose_dense_sparse", "type": "Callable[..., Any]"}, {"lineNumber": 1057, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 1057, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 1063, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1064, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1146, "col_offset": 22, "nodeName": "T", "type": "Any"}, {"lineNumber": 1152, "col_offset": 13, "nodeName": "_check_fit_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 1152, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 1152, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1152, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1153, "col_offset": 15, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 1172, "col_offset": 9, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 1173, "col_offset": 13, "nodeName": "_sparse_random_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 1175, "col_offset": 10, "nodeName": "from_spmatrix", "type": "Any"}, {"lineNumber": 1175, "col_offset": 44, "nodeName": "sp_mat", "type": "Any"}, {"lineNumber": 1176, "col_offset": 13, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 1176, "col_offset": 25, "nodeName": "sdf", "type": "Any"}, {"lineNumber": 1178, "col_offset": 7, "nodeName": "sp_format", "type": "Any"}, {"lineNumber": 1180, "col_offset": 8, "nodeName": "sp_format", "type": "str"}, {"lineNumber": 1182, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 1182, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 1183, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "sp_format", "type": "Union[str, Any]"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "assert_allclose_dense_sparse", "type": "Any"}, {"lineNumber": 1184, "col_offset": 33, "nodeName": "sp_mat", "type": "Any"}, {"lineNumber": 1184, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "X2", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "X2", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "X2", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "M", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "memmap", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "tmp", "type": "IO[bytes]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "M", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "asflt", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "B", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "B", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "copy", "type": "bool"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "sp", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "flags", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "float", "type": "Any"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "force_all_finite", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "float", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "X_array", "type": "Any"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "X_ndim", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "X_C", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "order", "type": "Optional[str]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "X_csc", "type": "Any"}, {"lineNumber": 290, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "message", "type": "str"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "accept_sparse", "type": "List[str]"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "X_str", "type": "List[List[str]]"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 58, "nodeName": "X_str", "type": "List[List[str]]"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "X_bytes", "type": "List[List[bytes]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "object", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 369, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 372, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 374, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 383, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "checked_arr", "type": "Any"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "checked_arr", "type": "Any"}, {"lineNumber": 409, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 43, "nodeName": "int64", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "sp", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "sp", "type": "Any"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "sp", "type": "Any"}, {"lineNumber": 425, "col_offset": 47, "nodeName": "int32", "type": "Any"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 429, "col_offset": 39, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 434, "col_offset": 39, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 434, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 438, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 440, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 445, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 463, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 473, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 477, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "X_csr", "type": "Any"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "sp", "type": "Any"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 509, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 509, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 510, "col_offset": 20, "nodeName": "X_64bit", "type": "Any"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 517, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 523, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 529, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 538, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 542, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 542, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 551, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 556, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 565, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 566, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 583, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 583, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "X", "type": "List[List[complex]]"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 588, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "X", "type": "Tuple[Tuple[complex, complex, complex], Tuple[complex, complex, complex]]"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 593, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 594, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 594, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 598, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 600, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 600, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 601, "col_offset": 20, "nodeName": "X", "type": "Tuple[numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 606, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "X", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "sp", "type": "Any"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 611, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "has_fit_parameter", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 616, "col_offset": 33, "nodeName": "KNeighborsClassifier", "type": "Type[sklearn.neighbors._classification.KNeighborsClassifier]"}, {"lineNumber": 619, "col_offset": 29, "nodeName": "SVR", "type": "Type[sklearn.svm._classes.SVR]"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 26, "nodeName": "dok_matrix", "type": "Any"}, {"lineNumber": 637, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 26, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 638, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 639, "col_offset": 26, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 639, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 26, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 641, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 642, "col_offset": 26, "nodeName": "bsr_matrix", "type": "Any"}, {"lineNumber": 642, "col_offset": 40, "nodeName": "arr_asym", "type": "numpy.ndarray"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 645, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "check_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "arr_bad", "type": "Any"}, {"lineNumber": 649, "col_offset": 27, "nodeName": "test_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 656, "col_offset": 17, "nodeName": "check_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 656, "col_offset": 33, "nodeName": "arr", "type": "Any"}, {"lineNumber": 657, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 657, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 666, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 666, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "ARDRegression", "type": "Type[sklearn.linear_model._bayes.ARDRegression]"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 668, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 24, "nodeName": "svr", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "svr", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 696, "col_offset": 11, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 697, "col_offset": 27, "nodeName": "svr", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 703, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 708, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 709, "col_offset": 24, "nodeName": "est", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 711, "col_offset": 24, "nodeName": "est", "type": "Any"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 712, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 713, "col_offset": 24, "nodeName": "est", "type": "Any"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 716, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 717, "col_offset": 24, "nodeName": "est", "type": "Any"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 24, "nodeName": "est", "type": "Any"}, {"lineNumber": 720, "col_offset": 61, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 724, "col_offset": 61, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 725, "col_offset": 61, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 733, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 733, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 739, "col_offset": 25, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 749, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 749, "col_offset": 54, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 752, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 752, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 754, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 757, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 757, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 761, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 772, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "check_consistent_length", "type": "Callable[..., None]"}, {"lineNumber": 773, "col_offset": 32, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 21, "nodeName": "inf", "type": "Any"}, {"lineNumber": 780, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 780, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "assert_all_finite", "type": "Callable[..., Any]"}, {"lineNumber": 781, "col_offset": 26, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 785, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 785, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "assert_all_finite", "type": "Callable[..., Any]"}, {"lineNumber": 786, "col_offset": 26, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "Series", "type": "Any"}, {"lineNumber": 793, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 798, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 809, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "float", "type": "Any"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "memory", "type": "Any"}, {"lineNumber": 834, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "memory", "type": "Any"}, {"lineNumber": 843, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 843, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "check_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 848, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 848, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "check_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 849, "col_offset": 21, "nodeName": "dummy", "type": "WrongDummyMemory"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 855, "col_offset": 9, "nodeName": "TempMemmap", "type": "Any"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 856, "col_offset": 32, "nodeName": "X_memmap", "type": "Any"}, {"lineNumber": 858, "col_offset": 47, "nodeName": "copy", "type": "Any"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 877, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "check_non_negative", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 878, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 884, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "check_X_y", "type": "Callable[..., Any]"}, {"lineNumber": 885, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "y", "type": "None"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "shape", "type": "Tuple[str]"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "_num_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 897, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 897, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 897, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "shape", "type": "Tuple[str]"}, {"lineNumber": 904, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 904, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "_num_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 914, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "check_scalar", "type": "Callable[..., None]"}, {"lineNumber": 915, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 917, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 933, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 933, "col_offset": 23, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "check_scalar", "type": "Callable[..., None]"}, {"lineNumber": 934, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 934, "col_offset": 24, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 936, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 936, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 936, "col_offset": 42, "nodeName": "err_msg", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 937, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 937, "col_offset": 44, "nodeName": "err_msg", "type": "Any"}, {"lineNumber": 941, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 942, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 942, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 943, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 947, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 949, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 950, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 955, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 959, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 979, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "w_type", "type": "Optional[Any]"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 982, "col_offset": 12, "nodeName": "expected_lambdas", "type": "Any"}, {"lineNumber": 985, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 995, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 998, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1011, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1011, "col_offset": 23, "nodeName": "err_type", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "_check_psd_eigenvalues", "type": "Callable[..., Any]"}, {"lineNumber": 1012, "col_offset": 31, "nodeName": "lambdas", "type": "Any"}, {"lineNumber": 1017, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1018, "col_offset": 15, "nodeName": "flags", "type": "Any"}, {"lineNumber": 1020, "col_offset": 11, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1024, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1031, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1031, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1037, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1037, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "_check_sample_weight", "type": "Callable[..., Any]"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1042, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1042, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1044, "col_offset": 11, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1044, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1047, "col_offset": 30, "nodeName": "int", "type": "Any"}, {"lineNumber": 1048, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1049, "col_offset": 11, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1049, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 1056, "col_offset": 11, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 1056, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 1056, "col_offset": 26, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "base", "type": "Any"}, {"lineNumber": 1064, "col_offset": 11, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 1064, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 1065, "col_offset": 15, "nodeName": "_allclose_dense_sparse", "type": "Callable[..., Any]"}, {"lineNumber": 1065, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 1065, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 1071, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 1075, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 1075, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1076, "col_offset": 8, "nodeName": "_allclose_dense_sparse", "type": "Callable[..., Any]"}, {"lineNumber": 1076, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 1076, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 1085, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1085, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1087, "col_offset": 8, "nodeName": "f1", "type": "Callable[..., Any]"}, {"lineNumber": 1089, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1089, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "f1", "type": "Callable[..., Any]"}, {"lineNumber": 1097, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1097, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "f2", "type": "Callable[..., Any]"}, {"lineNumber": 1106, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1106, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "f3", "type": "Callable[..., Any]"}, {"lineNumber": 1118, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1118, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1120, "col_offset": 8, "nodeName": "A1", "type": "Type[Any]"}, {"lineNumber": 1122, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1122, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1124, "col_offset": 8, "nodeName": "A1", "type": "Type[Any]"}, {"lineNumber": 1131, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1131, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1133, "col_offset": 8, "nodeName": "A2", "type": "Type[Any]"}, {"lineNumber": 1135, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 1135, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "A2", "type": "Type[Any]"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1145, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1147, "col_offset": 22, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 1153, "col_offset": 26, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1153, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1158, "col_offset": 11, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 1158, "col_offset": 29, "nodeName": "_safe_indexing", "type": "Callable[..., Any]"}, {"lineNumber": 1158, "col_offset": 64, "nodeName": "indices_", "type": "Union[Any, List[int]]"}, {"lineNumber": 1160, "col_offset": 8, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 1160, "col_offset": 25, "nodeName": "_safe_indexing", "type": "Callable[..., Any]"}, {"lineNumber": 1160, "col_offset": 61, "nodeName": "indices_", "type": "Union[Any, List[int]]"}, {"lineNumber": 1163, "col_offset": 8, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 1164, "col_offset": 8, "nodeName": "_safe_indexing", "type": "Callable[..., Any]"}, {"lineNumber": 1164, "col_offset": 49, "nodeName": "indices_", "type": "Union[Any, List[int]]"}, {"lineNumber": 1172, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1175, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 1176, "col_offset": 44, "nodeName": "sp_format", "type": "Any"}, {"lineNumber": 1182, "col_offset": 11, "nodeName": "sp", "type": "Any"}, {"lineNumber": 1183, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "X2", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "as_float_array", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "f", "type": "Union[Callable[..., Any], Callable[..., numpy.ndarray], Callable[[Any], Any]]"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "M", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "A", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "flags", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "A", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "flags", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "match_msg", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "force_all_finite", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "err_msg", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "int", "type": "Any"}, {"lineNumber": 223, "col_offset": 54, "nodeName": "force_all_finite", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "arange", "type": "Any"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "order", "type": "Optional[str]"}, {"lineNumber": 265, "col_offset": 66, "nodeName": "copy", "type": "bool"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "flags", "type": "Any"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "order", "type": "Optional[str]"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 299, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 61, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "message", "type": "Union[Warning, str]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "message", "type": "str"}, {"lineNumber": 304, "col_offset": 30, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 310, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "format", "type": "Any"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "format", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "format", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "X_ndim", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "X", "type": "Union[List[List[str]], numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "X", "type": "Union[numpy.ndarray, List[List[bytes]]]"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "cat_df", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "cat_df", "type": "Any"}, {"lineNumber": 408, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 61, "nodeName": "float64", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 42, "nodeName": "float64", "type": "Any"}, {"lineNumber": 448, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 469, "col_offset": 41, "nodeName": "invalid_type", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 473, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 475, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 477, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "request", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "attr", "type": "str"}, {"lineNumber": 509, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 509, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 517, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 523, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 529, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 529, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 537, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 537, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 542, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 542, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 551, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 556, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "empty", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 565, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 583, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 593, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 598, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 600, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 637, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 638, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 639, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 641, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 642, "col_offset": 26, "nodeName": "sp", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 651, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "check_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 652, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 653, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "check_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 657, "col_offset": 11, "nodeName": "sp", "type": "Any"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "format", "type": "Any"}, {"lineNumber": 658, "col_offset": 36, "nodeName": "arr_format", "type": "str"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 659, "col_offset": 49, "nodeName": "arr_sym", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 661, "col_offset": 39, "nodeName": "arr_sym", "type": "numpy.ndarray"}, {"lineNumber": 666, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 675, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 675, "col_offset": 27, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "ard", "type": "sklearn.linear_model._bayes.ARDRegression"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 677, "col_offset": 27, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "check_is_fitted", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 28, "nodeName": "svr", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "make_blobs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 694, "col_offset": 13, "nodeName": "make_blobs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 708, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 710, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 711, "col_offset": 65, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 712, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 713, "col_offset": 65, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 716, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 718, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 719, "col_offset": 65, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 733, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 734, "col_offset": 29, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 736, "col_offset": 13, "nodeName": "make_blobs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 743, "col_offset": 29, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 749, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 749, "col_offset": 54, "nodeName": "sp", "type": "Any"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 752, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 754, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 755, "col_offset": 40, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 757, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 758, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 761, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 762, "col_offset": 40, "nodeName": "RandomForestRegressor", "type": "Type[sklearn.ensemble._forest.RandomForestRegressor]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 775, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 779, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 785, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 793, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 798, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 60, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 814, "col_offset": 35, "nodeName": "float64", "type": "Any"}, {"lineNumber": 814, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 814, "col_offset": 59, "nodeName": "float16", "type": "Any"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 834, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 843, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 843, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 848, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 856, "col_offset": 47, "nodeName": "copy", "type": "Any"}, {"lineNumber": 857, "col_offset": 15, "nodeName": "may_share_memory", "type": "Any"}, {"lineNumber": 857, "col_offset": 35, "nodeName": "X_memmap", "type": "Any"}, {"lineNumber": 857, "col_offset": 45, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 857, "col_offset": 64, "nodeName": "copy", "type": "Any"}, {"lineNumber": 858, "col_offset": 15, "nodeName": "flags", "type": "Any"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 884, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 894, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 904, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 905, "col_offset": 21, "nodeName": "TestNoLenWeirdShape", "type": "Type[Any]"}, {"lineNumber": 914, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 915, "col_offset": 49, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 916, "col_offset": 29, "nodeName": "min_val", "type": "Any"}, {"lineNumber": 916, "col_offset": 46, "nodeName": "max_val", "type": "Any"}, {"lineNumber": 933, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 934, "col_offset": 49, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 935, "col_offset": 29, "nodeName": "min_val", "type": "Any"}, {"lineNumber": 935, "col_offset": 46, "nodeName": "max_val", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "raised_error", "type": "Any"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "raised_error", "type": "Any"}, {"lineNumber": 941, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 942, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 942, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 943, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 947, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 949, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 949, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 950, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 950, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 954, "col_offset": 62, "nodeName": "float64", "type": "Any"}, {"lineNumber": 955, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 955, "col_offset": 57, "nodeName": "float64", "type": "Any"}, {"lineNumber": 959, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 979, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 979, "col_offset": 36, "nodeName": "w_msg", "type": "Union[str, Any]"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "_check_psd_eigenvalues", "type": "Callable[..., Any]"}, {"lineNumber": 981, "col_offset": 35, "nodeName": "lambdas", "type": "Any"}, {"lineNumber": 995, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 995, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 998, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 998, "col_offset": 63, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1011, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1011, "col_offset": 39, "nodeName": "err_msg", "type": "Any"}, {"lineNumber": 1017, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1018, "col_offset": 15, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 1019, "col_offset": 58, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1023, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1024, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1028, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1031, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1033, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1037, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1037, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 1038, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1042, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1047, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1048, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 1055, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1063, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1064, "col_offset": 34, "nodeName": "base", "type": "Any"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1075, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1075, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 1085, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1089, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1097, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1106, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1118, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1122, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1131, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1135, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1145, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1146, "col_offset": 22, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 1147, "col_offset": 22, "nodeName": "sp", "type": "Any"}, {"lineNumber": 1153, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1156, "col_offset": 15, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 1156, "col_offset": 30, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1158, "col_offset": 44, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1160, "col_offset": 40, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1164, "col_offset": 23, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1175, "col_offset": 10, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_sparse_random_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "X", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "copy", "type": "bool"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "B", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "copy", "type": "bool"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "B", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "A", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "B", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "flags", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "flags", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "accept_sparse", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 70, "nodeName": "copy", "type": "bool"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "isspmatrix_dok", "type": "Any"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 310, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 316, "col_offset": 39, "nodeName": "accept_sparse", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "format", "type": "Any"}, {"lineNumber": 321, "col_offset": 58, "nodeName": "format", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "X_ndim", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 342, "col_offset": 47, "nodeName": "expected_warn_regex", "type": "str"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 348, "col_offset": 47, "nodeName": "expected_warn_regex", "type": "str"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "X_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "X_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "X_df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 376, "col_offset": 35, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "X_df", "type": "Any"}, {"lineNumber": 386, "col_offset": 35, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "pd", "type": "Any"}, {"lineNumber": 399, "col_offset": 38, "nodeName": "FLOAT_DTYPES", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 429, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 435, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 441, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 448, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 478, "col_offset": 42, "nodeName": "invalid_type", "type": "sklearn.svm._classes.SVR"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 659, "col_offset": 31, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 675, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 686, "col_offset": 19, "nodeName": "e", "type": "ValueError"}, {"lineNumber": 691, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 691, "col_offset": 19, "nodeName": "e", "type": "AttributeError"}, {"lineNumber": 758, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 814, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 834, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 857, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 858, "col_offset": 15, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 949, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 950, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 954, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 955, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 981, "col_offset": 60, "nodeName": "enable_warnings", "type": "Any"}, {"lineNumber": 995, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 998, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 1019, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 1023, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 1028, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 1033, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1033, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1038, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1038, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1055, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1063, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1146, "col_offset": 22, "nodeName": "sp", "type": "Any"}, {"lineNumber": 1153, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1156, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 1156, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 1175, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "sp", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "M", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "sp", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "M", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "flags", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "flags", "type": "Any"}, {"lineNumber": 281, "col_offset": 55, "nodeName": "flags", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "flags", "type": "Any"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "flags", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "sp", "type": "Any"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 321, "col_offset": 58, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 435, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 659, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 1033, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 1038, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 1153, "col_offset": 62, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 281, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "X_checked", "type": "Any"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "X", "type": "Any"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "attr", "type": "str"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "np", "type": "module"}]