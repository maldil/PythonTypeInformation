[{"lineNumber": 76, "col_offset": 0, "nodeName": "subject_body_extractor", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "text_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "subject_body_transformer", "type": "sklearn.preprocessing._function_transformer.FunctionTransformer"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "text_stats_transformer", "type": "sklearn.preprocessing._function_transformer.FunctionTransformer"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "pipeline", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "fetch_20newsgroups", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "fetch_20newsgroups", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "FunctionTransformer", "type": "Type[sklearn.preprocessing._function_transformer.FunctionTransformer]"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "subject_body_extractor", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "FunctionTransformer", "type": "Type[sklearn.preprocessing._function_transformer.FunctionTransformer]"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "text_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "Pipeline", "type": "Type[sklearn.pipeline.Pipeline]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "predict", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "posts", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "body", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sub", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "sub", "type": "Any"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "pipeline", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "pipeline", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "body", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "partition", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "posts", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "subject_body_transformer", "type": "sklearn.preprocessing._function_transformer.FunctionTransformer"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "classification_report", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "text", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "headers", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "prefix", "type": "str"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "sub", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "ColumnTransformer", "type": "Type[sklearn.compose._column_transformer.ColumnTransformer]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "LinearSVC", "type": "Type[sklearn.svm._classes.LinearSVC]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "posts", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "line", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "prefix", "type": "str"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "TfidfVectorizer", "type": "Type[sklearn.feature_extraction.text.TfidfVectorizer]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "Pipeline", "type": "Type[sklearn.pipeline.Pipeline]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "Pipeline", "type": "Type[sklearn.pipeline.Pipeline]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "text_stats_transformer", "type": "sklearn.preprocessing._function_transformer.FunctionTransformer"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "TfidfVectorizer", "type": "Type[sklearn.feature_extraction.text.TfidfVectorizer]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "TruncatedSVD", "type": "Type[sklearn.decomposition._truncated_svd.TruncatedSVD]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "DictVectorizer", "type": "Type[sklearn.feature_extraction._dict_vectorizer.DictVectorizer]"}]