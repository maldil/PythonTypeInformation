[{"lineNumber": 38, "col_offset": 0, "nodeName": "test_get_submatrix", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "_test_shape_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_spectral_coclustering", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_spectral_biclustering", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "_do_scale_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "_do_bistochastic_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "test_scale_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_bistochastic_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "test_log_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_fit_best_piecewise", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_project_and_cluster", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_perfect_checkerboard", "type": "Callable[[], Any]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "test_wrong_shape", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "BiclusterMixin", "type": "Type[sklearn.base.BiclusterMixin]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "model", "type": "MockBiclustering"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "param_grid", "type": "Dict[str, Union[List[int], List[str], List[bool], List[Optional[int]]]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "random_state", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "non_default_params", "type": "Dict[str, Union[List[bool], List[int], List[str]]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "row_sum", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "col_sum", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "generator", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "generator", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "generator", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "mat", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "vectors", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "best", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "vectors", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "MockBiclustering", "type": "Type[MockBiclustering]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "n_clusters", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "rows", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "cols", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "make_biclusters", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "min", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "where", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "S", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "S", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "rows", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "cols", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "make_checkerboard", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "S", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "row_sum", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "col_sum", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "row_sum", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "col_sum", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_do_scale_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "_do_bistochastic_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_fit_best_piecewise", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "vectors", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "best", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "rows", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "cols", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "make_checkerboard", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "S", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 219, "col_offset": 7, "nodeName": "rows", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "cols", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "make_checkerboard", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "S", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "S", "type": "Any"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "rows", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "cols", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "make_checkerboard", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "S", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "get_submatrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "i_ind", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "j_ind", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "get_indices", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "random_state", "type": "int"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "S", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "S", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "S", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "ParameterGrid", "type": "Type[sklearn.model_selection._search.ParameterGrid]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "param_grid", "type": "Dict[str, Union[List[int], List[str], List[bool], List[Optional[int]]]]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "S", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "param_name", "type": "str"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "param_values", "type": "Union[List[bool], List[int], List[str]]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "items", "type": "Callable"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "param_value", "type": "Union[bool, int, str]"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "param_values", "type": "Union[List[bool], List[int], List[str]]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "tile", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "tile", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "_scale_normalize", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "mat", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "_do_scale_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "mat", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "_bistochastic_normalize", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_do_bistochastic_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "mat", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "generator", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "_log_normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "mat", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "vectors", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "_project_and_cluster", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "mat", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "vectors", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "consensus_score", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "biclusters_", "type": "Tuple[Any, Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "consensus_score", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "biclusters_", "type": "Tuple[Any, Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "consensus_score", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "biclusters_", "type": "Tuple[Any, Any]"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "model", "type": "MockBiclustering"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "i_ind", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "j_ind", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "SpectralCoclustering", "type": "Type[sklearn.cluster._bicluster.SpectralCoclustering]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "mat", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "_test_shape_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "non_default_params", "type": "Dict[str, Union[List[bool], List[int], List[str]]]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "v_measure_score", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "labels", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "rows", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "cols", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "rows", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "cols", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "rows", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "cols", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "where", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "where", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "submatrix", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "random_state", "type": "int"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "rows_", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 86, "col_offset": 59, "nodeName": "ones", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "consensus_score", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "biclusters_", "type": "Tuple[Any, Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "SpectralBiclustering", "type": "Type[sklearn.cluster._bicluster.SpectralBiclustering]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "_test_shape_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "row_sum", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "col_sum", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "row_sum", "type": "Any"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "col_sum", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "rows_", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 86, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "rows", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "cols", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "mat", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "mat", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "rows_", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "consensus_score", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "biclusters_", "type": "Tuple[Any, Any]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralCoclustering"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "raises", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "mat", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "rows_", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "rows", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "cols", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "param_name", "type": "str"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "param_value", "type": "Union[bool, int, str]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "get_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "model", "type": "sklearn.cluster._bicluster.SpectralBiclustering"}]