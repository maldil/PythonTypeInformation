[{"lineNumber": 22, "col_offset": 0, "nodeName": "no_stdout_stderr", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "gen_toy_problem_2d", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "gen_toy_problem_4d", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_modweiszfeld_step_1d", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_modweiszfeld_step_2d", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_spatial_median_1d", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_spatial_median_2d", "type": "Callable[[], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_theil_sen_1d", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "test_theil_sen_1d_no_intercept", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_theil_sen_2d", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "test_calc_breakdown_point", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "test_checksubparams_negative_subpopulation", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "test_checksubparams_too_few_subsamples", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "test_checksubparams_too_many_subsamples", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_checksubparams_n_subsamples_if_less_samples_than_features", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "test_subpopulation", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "test_subsamples", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "test_verbosity", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_theil_sen_parallel", "type": "Callable[[], Any]"}, {"lineNumber": 267, "col_offset": 0, "nodeName": "test_less_samples_than_features", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "old_stdout", "type": "IO[str]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "old_stderr", "type": "IO[str]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "intercept", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "noise", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "intercept", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "c", "type": "float"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "noise", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "ix", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "c", "type": "float"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "noise", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "ix", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "median", "type": "float"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "y", "type": "float"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "y", "type": "float"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "true_median", "type": "float"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "true_median", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "fermat_weber", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "bp", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "devnull", "type": "file"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "stdout", "type": "file"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "devnull", "type": "file"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "stderr", "type": "file"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "devnull", "type": "file"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "old_stdout", "type": "IO[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "old_stderr", "type": "IO[str]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "c", "type": "float"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "c", "type": "float"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "noise", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "c", "type": "float"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "noise", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "c", "type": "float"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "noise", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "c", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "median", "type": "float"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "median", "type": "float"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "y", "type": "float"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "median", "type": "float"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "y", "type": "float"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "y", "type": "float"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "median", "type": "float"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "y", "type": "float"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "_modified_weiszfeld_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "new_y", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "_", "type": "int"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "median", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "_spatial_median", "type": "Callable[..., Tuple[int, Any]]"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "true_median", "type": "float"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "median", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "_", "type": "int"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "median", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "_spatial_median", "type": "Callable[..., Tuple[int, Any]]"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "median", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "true_median", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "_", "type": "int"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "median", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "_spatial_median", "type": "Callable[..., Tuple[int, Any]]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "fmin_bfgs", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "cost_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "median", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "fermat_weber", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "_spatial_median", "type": "Callable[..., Tuple[int, Any]]"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "w", "type": "float"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "c", "type": "float"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 172, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 174, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 184, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "gen_toy_problem_2d", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "c", "type": "float"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "_breakdown_point", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 203, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 203, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 213, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "n_features", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 10, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "gen_toy_problem_4d", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 230, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 231, "col_offset": 47, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "c", "type": "float"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "gen_toy_problem_4d", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 238, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "w", "type": "float"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "gen_toy_problem_1d", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "c", "type": "float"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "gen_toy_problem_2d", "type": "Callable[[], Any]"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 257, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 262, "col_offset": 61, "nodeName": "X", "type": "Any"}, {"lineNumber": 262, "col_offset": 64, "nodeName": "y", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "c", "type": "float"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "n_features", "type": "int"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 274, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 275, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 275, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 276, "col_offset": 47, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 279, "col_offset": 74, "nodeName": "X", "type": "Any"}, {"lineNumber": 279, "col_offset": 77, "nodeName": "y", "type": "Any"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "devnull", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "c", "type": "float"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "c", "type": "float"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "ix", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "normal", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "c", "type": "float"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "ix", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "normal", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "w", "type": "float"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "c", "type": "float"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "no_stdout_stderr", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 248, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 248, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 276, "col_offset": 47, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "theil_sen", "type": "sklearn.linear_model._theil_sen.TheilSenRegressor"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "devnull", "type": "file"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "w", "type": "float"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "dot", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "dot", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "n_outliers", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "w", "type": "float"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "c", "type": "float"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "n_features", "type": "int"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "n_features", "type": "int"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "LinearRegression", "type": "Type[sklearn.linear_model._base.LinearRegression]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "norm", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "w", "type": "float"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "bp", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "TheilSenRegressor", "type": "Type[sklearn.linear_model._theil_sen.TheilSenRegressor]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "lstq", "type": "sklearn.linear_model._base.LinearRegression"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 237, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 47, "nodeName": "X", "type": "Any"}]