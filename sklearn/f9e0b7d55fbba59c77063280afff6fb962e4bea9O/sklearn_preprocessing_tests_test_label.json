[{"lineNumber": 32, "col_offset": 0, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_label_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_label_binarizer_unseen_labels", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_label_binarizer_set_label_encoding", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_label_binarizer_errors", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_label_encoder_negative_ints", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "test_label_encoder_str_bad_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "test_label_encoder_errors", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "test_sparse_output_multilabel_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "test_multilabel_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 341, "col_offset": 0, "nodeName": "test_multilabel_binarizer_empty_sample", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "test_multilabel_binarizer_unknown_class", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 0, "nodeName": "test_multilabel_binarizer_given_classes", "type": "Callable[[], Any]"}, {"lineNumber": 400, "col_offset": 0, "nodeName": "test_multilabel_binarizer_multiple_calls", "type": "Callable[[], Any]"}, {"lineNumber": 418, "col_offset": 0, "nodeName": "test_multilabel_binarizer_same_length_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 435, "col_offset": 0, "nodeName": "test_multilabel_binarizer_non_integer_labels", "type": "Callable[[], Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "test_multilabel_binarizer_non_unique", "type": "Callable[[], Any]"}, {"lineNumber": 470, "col_offset": 0, "nodeName": "test_multilabel_binarizer_inverse_validation", "type": "Callable[[], Any]"}, {"lineNumber": 489, "col_offset": 0, "nodeName": "test_label_binarize_with_class_order", "type": "Callable[[], Any]"}, {"lineNumber": 507, "col_offset": 0, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 549, "col_offset": 0, "nodeName": "test_label_binarize_binary", "type": "Callable[[], Any]"}, {"lineNumber": 568, "col_offset": 0, "nodeName": "test_label_binarize_multiclass", "type": "Callable[[], Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "test_label_binarize_multilabel", "type": "Callable[[], Any]"}, {"lineNumber": 601, "col_offset": 0, "nodeName": "test_invalid_input_label_binarize", "type": "Callable[[], Any]"}, {"lineNumber": 610, "col_offset": 0, "nodeName": "test_inverse_binarize_multiclass", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "iris", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "to_invert", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "one_class", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "multi_label", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "y_seq_of_seqs", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "inverse_transformed", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "y", "type": "List[Union[List[int], List[nothing]]]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "w", "type": "str"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "indicator_mat2", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "tuple_classes", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "inputs", "type": "List[Union[Tuple[List[Union[Tuple[str, str], Tuple[str]]], List[str]], Tuple[List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]], Any]]]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "inputs", "type": "List[Union[Tuple[List[Union[Tuple[str, str], Tuple[str]]], List[str]], Tuple[List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]], Any]]]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "y_sparse", "type": "List[Any]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "got", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "one_class", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "classes", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 202, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "values", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "ret", "type": "Any"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "inverse_transformed", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 342, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 347, "col_offset": 45, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 355, "col_offset": 47, "nodeName": "w", "type": "str"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 361, "col_offset": 13, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 361, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 361, "col_offset": 47, "nodeName": "w", "type": "str"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 363, "col_offset": 31, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 372, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 373, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 377, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 378, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 382, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 388, "col_offset": 10, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 390, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 411, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 412, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 415, "col_offset": 47, "nodeName": "indicator_mat2", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 426, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 427, "col_offset": 61, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 431, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 432, "col_offset": 61, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "_to_object_array", "type": "Any"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 445, "col_offset": 13, "nodeName": "classes", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 458, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 467, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 499, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "y_type", "type": "str"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 554, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 556, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 556, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 556, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 556, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 565, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 565, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 565, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 565, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 565, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 575, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 575, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 575, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 23, "nodeName": "y_sparse", "type": "List[Any]"}, {"lineNumber": 611, "col_offset": 10, "nodeName": "_inverse_binarize_multiclass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 615, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "to_invert", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "multi_label", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "y_seq_of_seqs", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 10, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "unknown", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 242, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "got", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "got", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 42, "nodeName": "got", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 331, "col_offset": 45, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "got", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 41, "nodeName": "y", "type": "List[Union[List[int], List[nothing]]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 378, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 46, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 396, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 41, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 45, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 431, "col_offset": 46, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 45, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 440, "col_offset": 48, "nodeName": "tuple_classes", "type": "Any"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 448, "col_offset": 51, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 449, "col_offset": 41, "nodeName": "classes", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 450, "col_offset": 65, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 454, "col_offset": 56, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 455, "col_offset": 41, "nodeName": "classes", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 456, "col_offset": 65, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 459, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 459, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 41, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 483, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 509, "col_offset": 51, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 520, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 521, "col_offset": 38, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "type_of_target", "type": "Callable[[Any], str]"}, {"lineNumber": 524, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "y_type", "type": "str"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 541, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 542, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 543, "col_offset": 38, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 544, "col_offset": 25, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 544, "col_offset": 46, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "eye", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 577, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "sparse_matrix", "type": "Any"}, {"lineNumber": 592, "col_offset": 14, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 593, "col_offset": 35, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 593, "col_offset": 44, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 593, "col_offset": 55, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 596, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 596, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 606, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 39, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 615, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 242, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "got", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "got", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 294, "col_offset": 49, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "got", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "got", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 305, "col_offset": 42, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 306, "col_offset": 49, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "got", "type": "Any"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "got", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 356, "col_offset": 42, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 362, "col_offset": 42, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 51, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 45, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 49, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 454, "col_offset": 50, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 484, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 485, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 517, "col_offset": 46, "nodeName": "classes", "type": "Any"}, {"lineNumber": 517, "col_offset": 65, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 518, "col_offset": 45, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 519, "col_offset": 49, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 520, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 520, "col_offset": 35, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "_inverse_binarize_multiclass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 526, "col_offset": 52, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 529, "col_offset": 23, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 529, "col_offset": 54, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 35, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 536, "col_offset": 46, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 539, "col_offset": 59, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 540, "col_offset": 42, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 542, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 35, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 543, "col_offset": 24, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 544, "col_offset": 25, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 545, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 35, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 545, "col_offset": 52, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 546, "col_offset": 43, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 546, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 578, "col_offset": 34, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 578, "col_offset": 67, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 589, "col_offset": 38, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 589, "col_offset": 50, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 589, "col_offset": 62, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 590, "col_offset": 38, "nodeName": "dok_matrix", "type": "Any"}, {"lineNumber": 590, "col_offset": 50, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 596, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 597, "col_offset": 34, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 597, "col_offset": 67, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 606, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 52, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 286, "col_offset": 36, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "got", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "got", "type": "Any"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "got", "type": "Any"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 305, "col_offset": 42, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "got", "type": "Any"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 378, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 378, "col_offset": 31, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 431, "col_offset": 31, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 509, "col_offset": 31, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 526, "col_offset": 71, "nodeName": "classes", "type": "Any"}, {"lineNumber": 530, "col_offset": 66, "nodeName": "y_type", "type": "str"}, {"lineNumber": 531, "col_offset": 62, "nodeName": "classes", "type": "Any"}, {"lineNumber": 554, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "indices", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "got", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "indices", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "got", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 319, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 511, "col_offset": 42, "nodeName": "classes", "type": "Any"}, {"lineNumber": 511, "col_offset": 61, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 512, "col_offset": 41, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 513, "col_offset": 45, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 554, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 298, "col_offset": 26, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 532, "col_offset": 66, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 533, "col_offset": 65, "nodeName": "pos_label", "type": "Any"}]