[{"lineNumber": 44, "col_offset": 0, "nodeName": "test_gnb", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_gnb_var", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "test_gnb_prior", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_gnb_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_gnb_neg_priors", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_gnb_priors", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "test_gnb_priors_sum_isclose", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "test_gnb_wrong_nb_priors", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "test_gnb_prior_greater_one", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_gnb_prior_large_bias", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "test_gnb_check_update_with_no_data", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_gnb_pfit_wrong_nb_features", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_gnb_partial_fit", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 0, "nodeName": "test_gnb_naive_bayes_scale_invariance", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_discretenb_deprecated_coef_intercept", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_discretenb_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_discretenb_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_naive_bayes_input_check_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "test_discretenb_input_check_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "test_discretenb_predict_proba", "type": "Callable[[], Any]"}, {"lineNumber": 341, "col_offset": 0, "nodeName": "test_discretenb_uniform_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 0, "nodeName": "test_discretenb_provide_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "test_discretenb_provide_prior_with_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 0, "nodeName": "test_discretenb_sample_weight_multiclass", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 0, "nodeName": "test_mnnb", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "test_mnb_prior_unobserved_targets", "type": "Callable[[], Any]"}, {"lineNumber": 561, "col_offset": 0, "nodeName": "test_mnb_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 573, "col_offset": 0, "nodeName": "test_bnb", "type": "Callable[[], Any]"}, {"lineNumber": 619, "col_offset": 0, "nodeName": "test_bnb_feature_log_prob", "type": "Callable[[], Any]"}, {"lineNumber": 642, "col_offset": 0, "nodeName": "test_cnb", "type": "Callable[[], Any]"}, {"lineNumber": 708, "col_offset": 0, "nodeName": "test_categoricalnb", "type": "Callable[[], Any]"}, {"lineNumber": 818, "col_offset": 0, "nodeName": "test_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 871, "col_offset": 0, "nodeName": "test_alpha_vector", "type": "Callable[[], Any]"}, {"lineNumber": 913, "col_offset": 0, "nodeName": "test_check_accuracy_on_digits", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "DISCRETE_NAIVE_BAYES_CLASSES", "type": "List[Union[Type[sklearn.naive_bayes.BernoulliNB], Type[sklearn.naive_bayes.CategoricalNB], Type[sklearn.naive_bayes.ComplementNB], Type[sklearn.naive_bayes.MultinomialNB]]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "ALL_NAIVE_BAYES_CLASSES", "type": "List[Union[Type[sklearn.naive_bayes.MultinomialNB], Type[sklearn.naive_bayes.BernoulliNB], Type[sklearn.naive_bayes.CategoricalNB], Type[sklearn.naive_bayes.ComplementNB], Type[sklearn.naive_bayes.GaussianNB]]]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "rng", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "X1", "type": "Any"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "y1", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "X2", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "ComplementNB", "type": "Type[sklearn.naive_bayes.ComplementNB]"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "DISCRETE_NAIVE_BAYES_CLASSES", "type": "List[Union[Type[sklearn.naive_bayes.BernoulliNB], Type[sklearn.naive_bayes.CategoricalNB], Type[sklearn.naive_bayes.ComplementNB], Type[sklearn.naive_bayes.MultinomialNB]]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 35, "col_offset": 5, "nodeName": "normal", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "astype", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 5, "nodeName": "randint", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "sw", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "sw", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "ind", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "priors", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "prev_points", "type": "int"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "mean", "type": "float"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "var", "type": "float"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "x_empty", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "att", "type": "str"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "prior", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "prior", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 447, "col_offset": 7, "nodeName": "train_on_single_class_y", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 454, "col_offset": 7, "nodeName": "use_partial_fit", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "attribute_names", "type": "List[str]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "attribute_name", "type": "str"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "attribute_names", "type": "List[str]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "y_pred2", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "y_pred3", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "class_prior", "type": "numpy.ndarray"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "X_test", "type": "numpy.ndarray"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "num", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "denom", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "T", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "feature_count", "type": "numpy.ndarray"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "class_count", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "feature_all", "type": "numpy.ndarray"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "y3", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "X3_test", "type": "numpy.ndarray"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "bayes_denominator", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "factor", "type": "Union[float, int]"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "X_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "y_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "expected_prediction", "type": "numpy.ndarray"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 791, "col_offset": 25, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "c_nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 26, "col_offset": 58, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 5, "nodeName": "rng", "type": "Any"}, {"lineNumber": 40, "col_offset": 5, "nodeName": "rng", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "X1", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "sw", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "var_", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "var_", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "var_", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "var_", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "ind", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "var_", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "var_", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 57, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "tmean", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "tvar", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "_update_mean_variance", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "prev_points", "type": "int"}, {"lineNumber": 168, "col_offset": 64, "nodeName": "mean", "type": "float"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "var", "type": "float"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "x_empty", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "tmean", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "mean", "type": "float"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "tvar", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "var", "type": "float"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 66, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "var_", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "var_", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "var_", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "var_", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "X2", "type": "Any"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "X2", "type": "Any"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "fit", "type": "Any"}, {"lineNumber": 279, "col_offset": 48, "nodeName": "X2", "type": "Any"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "X2", "type": "Any"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "predict", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 289, "col_offset": 64, "nodeName": "X2", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 293, "col_offset": 64, "nodeName": "X2", "type": "Any"}, {"lineNumber": 293, "col_offset": 68, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "X2", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 302, "col_offset": 59, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "predict", "type": "Any"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 346, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "prior", "type": "Any"}, {"lineNumber": 357, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "prior", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "fit", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "iris_data1", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "iris_data2", "type": "Any"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "iris_target1", "type": "Any"}, {"lineNumber": 374, "col_offset": 42, "nodeName": "iris_target2", "type": "Any"}, {"lineNumber": 374, "col_offset": 57, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 400, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 400, "col_offset": 35, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 400, "col_offset": 38, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 421, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 450, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 487, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "X2", "type": "Any"}, {"lineNumber": 493, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 494, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 494, "col_offset": 43, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 495, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 497, "col_offset": 31, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 19, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 503, "col_offset": 52, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 512, "col_offset": 23, "nodeName": "y_pred2", "type": "Any"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 514, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 515, "col_offset": 24, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 516, "col_offset": 53, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 517, "col_offset": 30, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 517, "col_offset": 45, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 518, "col_offset": 30, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 518, "col_offset": 49, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 521, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 522, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 524, "col_offset": 14, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "y_pred3", "type": "Any"}, {"lineNumber": 525, "col_offset": 32, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 527, "col_offset": 24, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 527, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 528, "col_offset": 53, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 529, "col_offset": 45, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 530, "col_offset": 30, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 530, "col_offset": 49, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 540, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 563, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 568, "col_offset": 21, "nodeName": "exp", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 595, "col_offset": 10, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 600, "col_offset": 60, "nodeName": "class_prior", "type": "numpy.ndarray"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 606, "col_offset": 61, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 613, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 616, "col_offset": 57, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 630, "col_offset": 10, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 635, "col_offset": 10, "nodeName": "log", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 682, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 683, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 684, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 689, "col_offset": 10, "nodeName": "ComplementNB", "type": "Type[sklearn.naive_bayes.ComplementNB]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 690, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 690, "col_offset": 43, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 692, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 695, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 696, "col_offset": 23, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 696, "col_offset": 43, "nodeName": "feature_count", "type": "numpy.ndarray"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 698, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 698, "col_offset": 41, "nodeName": "class_count", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 700, "col_offset": 23, "nodeName": "feature_all_", "type": "Any"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "feature_all", "type": "numpy.ndarray"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 701, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 701, "col_offset": 53, "nodeName": "weights", "type": "Any"}, {"lineNumber": 703, "col_offset": 10, "nodeName": "ComplementNB", "type": "Type[sklearn.naive_bayes.ComplementNB]"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 710, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 711, "col_offset": 37, "nodeName": "X2", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 712, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 712, "col_offset": 31, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 714, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 715, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 716, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 718, "col_offset": 12, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "y3", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 725, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 725, "col_offset": 37, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 725, "col_offset": 48, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 726, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 726, "col_offset": 37, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 726, "col_offset": 48, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 726, "col_offset": 57, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 726, "col_offset": 60, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 731, "col_offset": 37, "nodeName": "msg", "type": "str"}, {"lineNumber": 731, "col_offset": 42, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 731, "col_offset": 55, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 737, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 738, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 748, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 749, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 751, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 784, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 786, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 788, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "X_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 28, "nodeName": "y_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "X1_count", "type": "Any"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "X2_count", "type": "Any"}, {"lineNumber": 791, "col_offset": 25, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 792, "col_offset": 23, "nodeName": "X1_count", "type": "Any"}, {"lineNumber": 792, "col_offset": 33, "nodeName": "exp_X1_count", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 793, "col_offset": 23, "nodeName": "X2_count", "type": "Any"}, {"lineNumber": 793, "col_offset": 33, "nodeName": "exp_X2_count", "type": "Any"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 794, "col_offset": 30, "nodeName": "new_X", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 795, "col_offset": 23, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 795, "col_offset": 36, "nodeName": "expected_prediction", "type": "numpy.ndarray"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 796, "col_offset": 42, "nodeName": "exp_n_categories_", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 812, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 822, "col_offset": 9, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 823, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 823, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 823, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 823, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 824, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 824, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 824, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 825, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 826, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 828, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 829, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 829, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 829, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 829, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 830, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 830, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 830, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 830, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 831, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 832, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 834, "col_offset": 9, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 835, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 835, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 835, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 835, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 837, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 840, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 841, "col_offset": 9, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 842, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 842, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 842, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 843, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 844, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 847, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 847, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 847, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 848, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 849, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 856, "col_offset": 11, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 857, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 858, "col_offset": 11, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 859, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 859, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 859, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 859, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 859, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 860, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 860, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 860, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 860, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 861, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 861, "col_offset": 51, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 861, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 861, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 865, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 865, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 865, "col_offset": 51, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 866, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 867, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 867, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 867, "col_offset": 51, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 868, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 868, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 878, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 879, "col_offset": 19, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 879, "col_offset": 22, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 882, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 883, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 887, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 893, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 894, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 894, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 894, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 894, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 894, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 899, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 900, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 900, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 910, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 910, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 910, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 910, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 910, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 917, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 917, "col_offset": 11, "nodeName": "load_digits", "type": "Any"}, {"lineNumber": 918, "col_offset": 17, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 919, "col_offset": 11, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 922, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 922, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 922, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 925, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 925, "col_offset": 54, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 925, "col_offset": 61, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 929, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 929, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 932, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 932, "col_offset": 63, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 936, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 936, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 936, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 939, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 939, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 939, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 942, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 942, "col_offset": 43, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 942, "col_offset": 50, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "var_", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "rng", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "sw", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "rng", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "priors", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 181, "col_offset": 47, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "unique", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 51, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "unique", "type": "Any"}, {"lineNumber": 191, "col_offset": 70, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "iris", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "iris", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "f", "type": "Union[float, int]"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 279, "col_offset": 52, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "X2", "type": "Any"}, {"lineNumber": 289, "col_offset": 68, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "X2", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "X2", "type": "Any"}, {"lineNumber": 320, "col_offset": 38, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 321, "col_offset": 38, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 321, "col_offset": 51, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 330, "col_offset": 51, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 332, "col_offset": 39, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "iris", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "iris", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "target", "type": "Any"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "iris_data1", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "iris_target1", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 383, "col_offset": 32, "nodeName": "iris_data2", "type": "Any"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "iris_target2", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 55, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 409, "col_offset": 35, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "clf", "type": "Any"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "attribute_name", "type": "str"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "element", "type": "Any"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 489, "col_offset": 9, "nodeName": "kind", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 501, "col_offset": 19, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 503, "col_offset": 37, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 509, "col_offset": 28, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 515, "col_offset": 24, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 516, "col_offset": 37, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 524, "col_offset": 14, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 527, "col_offset": 24, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 568, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 569, "col_offset": 51, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 600, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 610, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 615, "col_offset": 50, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 616, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "X_test", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 635, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "tile", "type": "Any"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 639, "col_offset": 54, "nodeName": "num", "type": "Any"}, {"lineNumber": 639, "col_offset": 60, "nodeName": "denom", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 23, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 30, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 690, "col_offset": 40, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 695, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 698, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 699, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 700, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 701, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 714, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 719, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 725, "col_offset": 48, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 726, "col_offset": 48, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 731, "col_offset": 42, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 737, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 738, "col_offset": 24, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 739, "col_offset": 48, "nodeName": "X3_test", "type": "numpy.ndarray"}, {"lineNumber": 740, "col_offset": 30, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 740, "col_offset": 48, "nodeName": "bayes_denominator", "type": "Any"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 743, "col_offset": 15, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 743, "col_offset": 39, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 750, "col_offset": 56, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 751, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 751, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 755, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 756, "col_offset": 52, "nodeName": "factor", "type": "Union[float, int]"}, {"lineNumber": 757, "col_offset": 14, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 758, "col_offset": 16, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 758, "col_offset": 19, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 760, "col_offset": 27, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 784, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 786, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 789, "col_offset": 39, "nodeName": "min_categories", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 813, "col_offset": 39, "nodeName": "min_categories", "type": "Any"}, {"lineNumber": 814, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 814, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 815, "col_offset": 16, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 823, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 824, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 825, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 826, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 826, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 829, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 830, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 831, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 832, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 832, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 835, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 837, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 837, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 842, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 843, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 844, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 844, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 848, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 849, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 859, "col_offset": 51, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 860, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 861, "col_offset": 51, "nodeName": "c_nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 865, "col_offset": 51, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 867, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 882, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 883, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 883, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 883, "col_offset": 59, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 887, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 887, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 893, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 894, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 899, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 901, "col_offset": 30, "nodeName": "_check_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 902, "col_offset": 31, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 907, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 910, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 918, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 918, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 918, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 919, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 919, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 922, "col_offset": 29, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 923, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 925, "col_offset": 29, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 929, "col_offset": 29, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 929, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 932, "col_offset": 29, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 932, "col_offset": 52, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 933, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 936, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 939, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 940, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "normal", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 96, "col_offset": 72, "nodeName": "sw", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "sw", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "ind", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "ind", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 181, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 58, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "att", "type": "str"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "NaiveBayes", "type": "Any"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "NaiveBayes", "type": "Any"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "unique", "type": "Any"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "unique", "type": "Any"}, {"lineNumber": 297, "col_offset": 46, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 326, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 50, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "iris", "type": "Any"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "iris", "type": "Any"}, {"lineNumber": 380, "col_offset": 53, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 398, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 10, "nodeName": "DiscreteNaiveBayes", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "clf", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 407, "col_offset": 50, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 408, "col_offset": 48, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "clf", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "clf", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "clf", "type": "Any"}, {"lineNumber": 450, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "clf", "type": "Any"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 41, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "X2", "type": "Any"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 44, "nodeName": "unique", "type": "Any"}, {"lineNumber": 507, "col_offset": 54, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 36, "nodeName": "unique", "type": "Any"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 569, "col_offset": 35, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 600, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 615, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 685, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 686, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 686, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 686, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 711, "col_offset": 21, "nodeName": "X2", "type": "Any"}, {"lineNumber": 711, "col_offset": 25, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 743, "col_offset": 15, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 743, "col_offset": 39, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 750, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 750, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 751, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 756, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 758, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 759, "col_offset": 60, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 760, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 760, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 814, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 814, "col_offset": 41, "nodeName": "error_msg", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 826, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 832, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 837, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 844, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 883, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 887, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 898, "col_offset": 22, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 901, "col_offset": 30, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 919, "col_offset": 21, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 919, "col_offset": 36, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 923, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 933, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 940, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "rng", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 259, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 262, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 266, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "DiscreteNaiveBayes", "type": "Union[Type[sklearn.naive_bayes.MultinomialNB], Type[sklearn.naive_bayes.BernoulliNB]]"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "DiscreteNaiveBayes", "type": "Union[Type[sklearn.naive_bayes.MultinomialNB], Type[sklearn.naive_bayes.BernoulliNB]]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "exp", "type": "Any"}, {"lineNumber": 337, "col_offset": 42, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "exp", "type": "Any"}, {"lineNumber": 338, "col_offset": 42, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 478, "col_offset": 43, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 507, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 27, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 636, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 685, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 29, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 686, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 750, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 756, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 759, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 760, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 237, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 42, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 42, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 636, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 636, "col_offset": 53, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 686, "col_offset": 41, "nodeName": "weights", "type": "Any"}, {"lineNumber": 759, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 252, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 254, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 255, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 325, "col_offset": 52, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 335, "col_offset": 54, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 336, "col_offset": 54, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "element", "type": "Any"}, {"lineNumber": 686, "col_offset": 49, "nodeName": "i", "type": "int"}]