[{"lineNumber": 53, "col_offset": 0, "nodeName": "test_predictproba_hardvoting", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_notfitted", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_majority_label_iris", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_tie_situation", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_weights_iris", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_weights_regressor", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_predict_on_toy_problem", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_predict_proba_on_toy_problem", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "test_multilabel", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_gridsearch", "type": "Callable[[], Any]"}, {"lineNumber": 265, "col_offset": 0, "nodeName": "test_parallel_fit", "type": "Callable[[], Any]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "test_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 328, "col_offset": 0, "nodeName": "test_sample_weight_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "test_voting_classifier_set_params", "type": "Callable[[], Any]"}, {"lineNumber": 360, "col_offset": 0, "nodeName": "test_set_estimator_drop", "type": "Callable[[], Any]"}, {"lineNumber": 432, "col_offset": 0, "nodeName": "test_estimator_weights_format", "type": "Callable[[], Any]"}, {"lineNumber": 449, "col_offset": 0, "nodeName": "test_transform", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "iris", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 33, "col_offset": 3, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "X_r", "type": "Any"}, {"lineNumber": 35, "col_offset": 5, "nodeName": "y_r", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "ereg", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "reg1", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "reg2", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "reg3", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "ereg", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "reg1_pred", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "reg2_pred", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "reg3_pred", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "ereg_pred", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "avg", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "ereg_weights_none", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "ereg_weights_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "ereg_none_pred", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "ereg_equal_pred", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "clf1_res", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "clf2_res", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "clf3_res", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "t00", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "t11", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "t21", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "t31", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "eclf_res", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "clf", "type": "sklearn.multiclass.OneVsRestClassifier"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Union[List[float], List[str], List[List[float]]]]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "clf4", "type": "sklearn.neighbors._classification.KNeighborsClassifier"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "ClassifierMixin", "type": "Type[sklearn.base.ClassifierMixin]"}, {"lineNumber": 320, "col_offset": 46, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "fit", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "ClassifierMixin", "type": "Type[sklearn.base.ClassifierMixin]"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "voter", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "pattern", "type": "str"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "iris", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "VotingRegressor", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "predict", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "predict", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "X_r", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "NotFittedError", "type": "Type[sklearn.exceptions.NotFittedError]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "X_r", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "DummyRegressor", "type": "Type[sklearn.dummy.DummyRegressor]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "DummyRegressor", "type": "Type[sklearn.dummy.DummyRegressor]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "DummyRegressor", "type": "Type[sklearn.dummy.DummyRegressor]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "VotingRegressor", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "y_r_test", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "X_r", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "y_r", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "predict", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "average", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "ereg_pred", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "avg", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "VotingRegressor", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "VotingRegressor", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "X_r_test", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "ereg_none_pred", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "ereg_equal_pred", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "t00", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "t11", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "t21", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "t31", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "make_multilabel_classification", "type": "Any"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "OneVsRestClassifier", "type": "Type[sklearn.multiclass.OneVsRestClassifier]"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "SVC", "type": "Type[sklearn.svm._classes.SVC]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "KNeighborsClassifier", "type": "Type[sklearn.neighbors._classification.KNeighborsClassifier]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "ClassifierErrorFit", "type": "Type[Any]"}, {"lineNumber": 335, "col_offset": 10, "nodeName": "MockClassifier", "type": "Type[Any]"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 349, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 368, "col_offset": 69, "nodeName": "X", "type": "Any"}, {"lineNumber": 368, "col_offset": 72, "nodeName": "y", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 388, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 388, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 389, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 409, "col_offset": 58, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 409, "col_offset": 62, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 444, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 39, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "voter", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 496, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 499, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 499, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 500, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "n_features_in_", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 542, "col_offset": 21, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 543, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "pattern", "type": "str"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "iris", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "ereg", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "ereg", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "ereg_weights_none", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "ereg_weights_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "ereg_weights_none", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "ereg_weights_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "SVC", "type": "Type[sklearn.svm._classes.SVC]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 261, "col_offset": 51, "nodeName": "params", "type": "Dict[str, Union[List[float], List[str], List[List[float]]]]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "iris", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "iris", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 282, "col_offset": 37, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 282, "col_offset": 55, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 54, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 283, "col_offset": 74, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 297, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 298, "col_offset": 54, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 298, "col_offset": 74, "nodeName": "X", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 304, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 305, "col_offset": 54, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 73, "nodeName": "X", "type": "Any"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 324, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "fit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 355, "col_offset": 54, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 355, "col_offset": 74, "nodeName": "X", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 50, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 357, "col_offset": 50, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 380, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 380, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 380, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 389, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "predict", "type": "Any"}, {"lineNumber": 396, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 397, "col_offset": 54, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 397, "col_offset": 74, "nodeName": "X", "type": "Any"}, {"lineNumber": 399, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 420, "col_offset": 46, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 423, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "transform", "type": "Any"}, {"lineNumber": 428, "col_offset": 39, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "transform", "type": "Any"}, {"lineNumber": 429, "col_offset": 39, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 446, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 446, "col_offset": 54, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 446, "col_offset": 74, "nodeName": "X", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 472, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 473, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 473, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "voter", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "voter", "type": "Any"}, {"lineNumber": 496, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 499, "col_offset": 13, "nodeName": "voter", "type": "Any"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 500, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "est", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "est", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 543, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "err_msg", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "reg1", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "reg2", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 127, "col_offset": 41, "nodeName": "reg3", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "fit", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "X_r_train", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "y_r_train", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "reg1_pred", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "reg2_pred", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "reg3_pred", "type": "Any"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "reg1", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 141, "col_offset": 68, "nodeName": "reg2", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "reg3", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "reg1", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 143, "col_offset": 69, "nodeName": "reg2", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "reg3", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "eclf_res", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "eclf_res", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "eclf_res", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "eclf_res", "type": "Any"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 283, "col_offset": 54, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 298, "col_offset": 54, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 305, "col_offset": 54, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 322, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 324, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 325, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 333, "col_offset": 38, "nodeName": "sample_weight", "type": "Dict[str, Any]"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 350, "col_offset": 51, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 355, "col_offset": 54, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 356, "col_offset": 50, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 357, "col_offset": 50, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 377, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 377, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 380, "col_offset": 41, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "est", "type": "Any"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "estimators_", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 389, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 58, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 393, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "y", "type": "Any"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 397, "col_offset": 54, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 399, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 401, "col_offset": 66, "nodeName": "X", "type": "Any"}, {"lineNumber": 401, "col_offset": 69, "nodeName": "y", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 415, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 58, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 418, "col_offset": 44, "nodeName": "X1", "type": "numpy.ndarray"}, {"lineNumber": 418, "col_offset": 48, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 30, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 429, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 446, "col_offset": 54, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "VotingClassifier", "type": "Any"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "transform", "type": "Any"}, {"lineNumber": 469, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "transform", "type": "Any"}, {"lineNumber": 470, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "transform", "type": "Any"}, {"lineNumber": 471, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 30, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 473, "col_offset": 30, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 494, "col_offset": 34, "nodeName": "ones", "type": "Any"}, {"lineNumber": 494, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 496, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "voter", "type": "Any"}, {"lineNumber": 543, "col_offset": 29, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "DummyRegressor", "type": "Type[sklearn.dummy.DummyRegressor]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 114, "col_offset": 64, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "reg1", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "reg2", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "reg3", "type": "sklearn.dummy.DummyRegressor"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "ereg", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "fit", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "fit", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 179, "col_offset": 64, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "fit", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "clf3_res", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "clf3_res", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "clf3_res", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "clf3_res", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "clf", "type": "sklearn.multiclass.OneVsRestClassifier"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 65, "nodeName": "y", "type": "Any"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "clf3", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 311, "col_offset": 45, "nodeName": "clf4", "type": "sklearn.neighbors._classification.KNeighborsClassifier"}, {"lineNumber": 336, "col_offset": 49, "nodeName": "clf", "type": "Any"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 370, "col_offset": 62, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 371, "col_offset": 48, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 400, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 411, "col_offset": 48, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 411, "col_offset": 62, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 415, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 437, "col_offset": 23, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 441, "col_offset": 37, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "eclf1", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "eclf3", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 494, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 494, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 497, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 543, "col_offset": 29, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "clf2_res", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "clf2_res", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "clf2_res", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "clf2_res", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 228, "col_offset": 53, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 228, "col_offset": 68, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 293, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 339, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "eclf", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "clf1_res", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "clf1_res", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "clf1_res", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "clf1_res", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 278, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 292, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 366, "col_offset": 62, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 367, "col_offset": 48, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 407, "col_offset": 62, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "eclf2", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 458, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 461, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "clf1", "type": "sklearn.linear_model._logistic.LogisticRegression"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "clf3", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "eclf3", "type": "Any"}]