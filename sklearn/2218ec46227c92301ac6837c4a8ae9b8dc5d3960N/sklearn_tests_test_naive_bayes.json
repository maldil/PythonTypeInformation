[{"lineNumber": 42, "col_offset": 0, "nodeName": "test_gnb", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_gnb_prior", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_gnb_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_gnb_neg_priors", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_gnb_priors", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_gnb_priors_sum_isclose", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "test_gnb_wrong_nb_priors", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_gnb_prior_greater_one", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "test_gnb_prior_large_bias", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_gnb_check_update_with_no_data", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "test_gnb_pfit_wrong_nb_features", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_gnb_partial_fit", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "test_gnb_naive_bayes_scale_invariance", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "test_discretenb_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "test_discretenb_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "test_discretenb_input_check_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "test_discretenb_predict_proba", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "test_discretenb_uniform_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "test_discretenb_provide_prior", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 0, "nodeName": "test_discretenb_provide_prior_with_partial_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 0, "nodeName": "test_discretenb_sample_weight_multiclass", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 0, "nodeName": "test_mnnb", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 0, "nodeName": "test_mnb_prior_unobserved_targets", "type": "Callable[[], Any]"}, {"lineNumber": 521, "col_offset": 0, "nodeName": "test_mnb_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "test_bnb", "type": "Callable[[], Any]"}, {"lineNumber": 579, "col_offset": 0, "nodeName": "test_bnb_feature_log_prob", "type": "Callable[[], Any]"}, {"lineNumber": 602, "col_offset": 0, "nodeName": "test_cnb", "type": "Callable[[], Any]"}, {"lineNumber": 668, "col_offset": 0, "nodeName": "test_categoricalnb", "type": "Callable[[], Any]"}, {"lineNumber": 778, "col_offset": 0, "nodeName": "test_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 831, "col_offset": 0, "nodeName": "test_alpha_vector", "type": "Callable[[], Any]"}, {"lineNumber": 873, "col_offset": 0, "nodeName": "test_check_accuracy_on_digits", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "rng", "type": "Any"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "X1", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "y1", "type": "Any"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "X2", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 33, "col_offset": 5, "nodeName": "normal", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "astype", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 5, "nodeName": "randint", "type": "Any"}, {"lineNumber": 39, "col_offset": 5, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "sw", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "sw", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "ind", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "priors", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "prev_points", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "mean", "type": "float"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "var", "type": "float"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "x_empty", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "att", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "prior", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "prior", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "y_pred2", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "y_pred3", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "class_prior", "type": "numpy.ndarray"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "X_test", "type": "numpy.ndarray"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "num", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "denom", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "T", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "feature_count", "type": "numpy.ndarray"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "class_count", "type": "numpy.ndarray"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "feature_all", "type": "numpy.ndarray"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "y3", "type": "numpy.ndarray"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "X3_test", "type": "numpy.ndarray"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "bayes_denominator", "type": "Any"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "factor", "type": "Union[float, int]"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "X_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "y_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "expected_prediction", "type": "numpy.ndarray"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "c_nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 33, "col_offset": 5, "nodeName": "rng", "type": "Any"}, {"lineNumber": 38, "col_offset": 5, "nodeName": "rng", "type": "Any"}, {"lineNumber": 39, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "X1", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "sw", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "ind", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "tmean", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "tvar", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "_update_mean_variance", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "prev_points", "type": "int"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "mean", "type": "float"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "var", "type": "float"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "x_empty", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "tmean", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "mean", "type": "float"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "tvar", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "var", "type": "float"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 66, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "theta_", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "sigma_", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "cls", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "cls", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "X2", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "clf", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "fit", "type": "Any"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "X2", "type": "Any"}, {"lineNumber": 296, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "predict", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 303, "col_offset": 49, "nodeName": "X2", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "X2", "type": "Any"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "X2", "type": "Any"}, {"lineNumber": 311, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "X2", "type": "Any"}, {"lineNumber": 312, "col_offset": 51, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 316, "col_offset": 59, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "predict", "type": "Any"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "prior", "type": "Any"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "prior", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "fit", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "iris_data1", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "iris_data2", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "iris_target1", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "iris_target2", "type": "Any"}, {"lineNumber": 388, "col_offset": 57, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 414, "col_offset": 10, "nodeName": "fit", "type": "Any"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 418, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 447, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "X2", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 454, "col_offset": 43, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 463, "col_offset": 52, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 466, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "y_pred2", "type": "Any"}, {"lineNumber": 472, "col_offset": 32, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 476, "col_offset": 53, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 477, "col_offset": 45, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 478, "col_offset": 30, "nodeName": "y_pred_log_proba2", "type": "Any"}, {"lineNumber": 478, "col_offset": 49, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "y_pred3", "type": "Any"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 487, "col_offset": 24, "nodeName": "predict_log_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 488, "col_offset": 53, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 489, "col_offset": 30, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 489, "col_offset": 45, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 30, "nodeName": "y_pred_log_proba3", "type": "Any"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "y_pred_log_proba", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 500, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 503, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 523, "col_offset": 10, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "exp", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 555, "col_offset": 10, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 560, "col_offset": 60, "nodeName": "class_prior", "type": "numpy.ndarray"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 566, "col_offset": 61, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 570, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 573, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 576, "col_offset": 57, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 590, "col_offset": 10, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 591, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 595, "col_offset": 10, "nodeName": "log", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 599, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 642, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 643, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 643, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 644, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 649, "col_offset": 10, "nodeName": "ComplementNB", "type": "Type[sklearn.naive_bayes.ComplementNB]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 650, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 650, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 650, "col_offset": 43, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 655, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 656, "col_offset": 23, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 656, "col_offset": 43, "nodeName": "feature_count", "type": "numpy.ndarray"}, {"lineNumber": 657, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 658, "col_offset": 41, "nodeName": "class_count", "type": "numpy.ndarray"}, {"lineNumber": 659, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 660, "col_offset": 23, "nodeName": "feature_all_", "type": "Any"}, {"lineNumber": 660, "col_offset": 41, "nodeName": "feature_all", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 661, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 661, "col_offset": 53, "nodeName": "weights", "type": "Any"}, {"lineNumber": 663, "col_offset": 10, "nodeName": "ComplementNB", "type": "Type[sklearn.naive_bayes.ComplementNB]"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 664, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 665, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 665, "col_offset": 53, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 670, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 671, "col_offset": 37, "nodeName": "X2", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 672, "col_offset": 23, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 672, "col_offset": 31, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 674, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 675, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "y3", "type": "numpy.ndarray"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 679, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 685, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 685, "col_offset": 37, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 685, "col_offset": 48, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 686, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 686, "col_offset": 37, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 686, "col_offset": 48, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 57, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 686, "col_offset": 60, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 691, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 691, "col_offset": 37, "nodeName": "msg", "type": "str"}, {"lineNumber": 691, "col_offset": 42, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 691, "col_offset": 55, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 694, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 697, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 711, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 744, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 746, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 748, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "X_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 28, "nodeName": "y_n_categories", "type": "numpy.ndarray"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "X1_count", "type": "Any"}, {"lineNumber": 751, "col_offset": 14, "nodeName": "X2_count", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 752, "col_offset": 23, "nodeName": "X1_count", "type": "Any"}, {"lineNumber": 752, "col_offset": 33, "nodeName": "exp_X1_count", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 753, "col_offset": 23, "nodeName": "X2_count", "type": "Any"}, {"lineNumber": 753, "col_offset": 33, "nodeName": "exp_X2_count", "type": "Any"}, {"lineNumber": 754, "col_offset": 18, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 754, "col_offset": 30, "nodeName": "new_X", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 755, "col_offset": 23, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 755, "col_offset": 36, "nodeName": "expected_prediction", "type": "numpy.ndarray"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 756, "col_offset": 42, "nodeName": "exp_n_categories_", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 772, "col_offset": 10, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 782, "col_offset": 9, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 783, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 783, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 783, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 784, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 784, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 784, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 785, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 786, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 788, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 789, "col_offset": 30, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 789, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 789, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 790, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 790, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 792, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 794, "col_offset": 9, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 795, "col_offset": 30, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 795, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 796, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 797, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 800, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 801, "col_offset": 9, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 802, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 802, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 802, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 802, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 804, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 806, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 807, "col_offset": 17, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 807, "col_offset": 30, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 807, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 807, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 808, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 809, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 816, "col_offset": 11, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 817, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 818, "col_offset": 11, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 819, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 819, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 819, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 819, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 820, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 820, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 820, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 820, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 820, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 821, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 821, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 821, "col_offset": 51, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 821, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 821, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 823, "col_offset": 11, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 824, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 825, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 825, "col_offset": 51, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 826, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 826, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 827, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 827, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 827, "col_offset": 51, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 828, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 828, "col_offset": 28, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 832, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 839, "col_offset": 19, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 839, "col_offset": 22, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 842, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 843, "col_offset": 30, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 847, "col_offset": 51, "nodeName": "prob", "type": "numpy.ndarray"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 853, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 854, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 854, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 854, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 854, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 854, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 859, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable"}, {"lineNumber": 860, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "assert_raise_message", "type": "Any"}, {"lineNumber": 870, "col_offset": 25, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 870, "col_offset": 37, "nodeName": "expected_msg", "type": "str"}, {"lineNumber": 870, "col_offset": 51, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 870, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 64, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 877, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 877, "col_offset": 11, "nodeName": "load_digits", "type": "Any"}, {"lineNumber": 878, "col_offset": 17, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 879, "col_offset": 11, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 882, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 882, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 882, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 885, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 885, "col_offset": 54, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 885, "col_offset": 61, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 889, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 889, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 892, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 892, "col_offset": 63, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 896, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 896, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 896, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 899, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 899, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 899, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 902, "col_offset": 43, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 902, "col_offset": 50, "nodeName": "y_3v8", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "rng", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "sw", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "rng", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "clf_dupl", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "clf_sw", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "priors", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "unique", "type": "Any"}, {"lineNumber": 175, "col_offset": 54, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "clf_pf", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "unique", "type": "Any"}, {"lineNumber": 180, "col_offset": 70, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "clf_pf2", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "iris", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "iris", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "f", "type": "Union[float, int]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "clf", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "pickle", "type": "module"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 276, "col_offset": 43, "nodeName": "X2", "type": "Any"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "X2", "type": "Any"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "X2", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "pickle", "type": "module"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "X2", "type": "Any"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "X2", "type": "Any"}, {"lineNumber": 303, "col_offset": 53, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 316, "col_offset": 47, "nodeName": "X2", "type": "Any"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "X2", "type": "Any"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "X_bernoulli", "type": "List[List[int]]"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "X_multinomial", "type": "List[List[int]]"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "iris", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "iris", "type": "Any"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "target", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "cls", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "iris_data1", "type": "Any"}, {"lineNumber": 395, "col_offset": 44, "nodeName": "iris_target1", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 397, "col_offset": 32, "nodeName": "iris_data2", "type": "Any"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "iris_target2", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 415, "col_offset": 35, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 449, "col_offset": 9, "nodeName": "kind", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 454, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 463, "col_offset": 37, "nodeName": "y_pred_proba", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 467, "col_offset": 28, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "clf2", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "y_pred_proba2", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 487, "col_offset": 24, "nodeName": "clf3", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 488, "col_offset": 37, "nodeName": "y_pred_proba3", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 529, "col_offset": 51, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 560, "col_offset": 37, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "feature_log_prob_", "type": "Any"}, {"lineNumber": 570, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "unnorm_predict_proba", "type": "numpy.ndarray"}, {"lineNumber": 576, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 576, "col_offset": 48, "nodeName": "X_test", "type": "numpy.ndarray"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 595, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "feature_count_", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "tile", "type": "Any"}, {"lineNumber": 599, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 599, "col_offset": 54, "nodeName": "num", "type": "Any"}, {"lineNumber": 599, "col_offset": 60, "nodeName": "denom", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 643, "col_offset": 30, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "normed_weights", "type": "Any"}, {"lineNumber": 650, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 650, "col_offset": 40, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 655, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 657, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 659, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 661, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 665, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.ComplementNB"}, {"lineNumber": 674, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 675, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 679, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 679, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 48, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 686, "col_offset": 48, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 42, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 694, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 697, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 48, "nodeName": "X3_test", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 30, "nodeName": "bayes_numerator", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 48, "nodeName": "bayes_denominator", "type": "Any"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 703, "col_offset": 15, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 703, "col_offset": 39, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 710, "col_offset": 56, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 711, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 711, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 714, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 716, "col_offset": 52, "nodeName": "factor", "type": "Union[float, int]"}, {"lineNumber": 717, "col_offset": 14, "nodeName": "CategoricalNB", "type": "Type[sklearn.naive_bayes.CategoricalNB]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 718, "col_offset": 19, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 720, "col_offset": 27, "nodeName": "n_categories_", "type": "Any"}, {"lineNumber": 744, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 746, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 749, "col_offset": 39, "nodeName": "min_categories", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 754, "col_offset": 18, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 773, "col_offset": 39, "nodeName": "min_categories", "type": "Any"}, {"lineNumber": 774, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 774, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 775, "col_offset": 16, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 783, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 784, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 785, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 786, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 786, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 789, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 790, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 792, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 792, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 795, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 796, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 797, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 802, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 804, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 804, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 807, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 808, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 809, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 820, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 821, "col_offset": 51, "nodeName": "c_nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 825, "col_offset": 51, "nodeName": "b_nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 827, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 832, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 838, "col_offset": 29, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 842, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 843, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 843, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 843, "col_offset": 59, "nodeName": "feature_prob", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 847, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 853, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 854, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 859, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 861, "col_offset": 30, "nodeName": "_check_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 862, "col_offset": 31, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 867, "col_offset": 31, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 51, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 878, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 878, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 878, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 879, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 879, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 883, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 885, "col_offset": 29, "nodeName": "MultinomialNB", "type": "Type[sklearn.naive_bayes.MultinomialNB]"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 889, "col_offset": 29, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 889, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 892, "col_offset": 29, "nodeName": "BernoulliNB", "type": "Type[sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 892, "col_offset": 52, "nodeName": "X_3v8", "type": "Any"}, {"lineNumber": 893, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 896, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 899, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 903, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "normal", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "class_prior_", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 85, "col_offset": 72, "nodeName": "sw", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "sw", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "ind", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "ind", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 61, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "GaussianNB", "type": "Type[sklearn.naive_bayes.GaussianNB]"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "att", "type": "str"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 249, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "clf", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "unique", "type": "Any"}, {"lineNumber": 279, "col_offset": 63, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 296, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "unique", "type": "Any"}, {"lineNumber": 304, "col_offset": 36, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "unique", "type": "Any"}, {"lineNumber": 311, "col_offset": 46, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "iris", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "iris", "type": "Any"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "prior", "type": "Optional[List[float]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "clf_full", "type": "Any"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "clf_partial", "type": "Any"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "clf", "type": "Any"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 421, "col_offset": 50, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "clf", "type": "Any"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "clf", "type": "Any"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "clf", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "X2", "type": "Any"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 455, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 44, "nodeName": "unique", "type": "Any"}, {"lineNumber": 467, "col_offset": 54, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 36, "nodeName": "unique", "type": "Any"}, {"lineNumber": 482, "col_offset": 46, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 529, "col_offset": 35, "nodeName": "positive_prior", "type": "Any"}, {"lineNumber": 560, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 37, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 646, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 671, "col_offset": 21, "nodeName": "X2", "type": "Any"}, {"lineNumber": 671, "col_offset": 25, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 679, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 30, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 703, "col_offset": 15, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 703, "col_offset": 39, "nodeName": "X3", "type": "numpy.ndarray"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 710, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 710, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 714, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 718, "col_offset": 36, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 719, "col_offset": 27, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 719, "col_offset": 60, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 720, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 720, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 774, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 774, "col_offset": 41, "nodeName": "error_msg", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 786, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 792, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 804, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 843, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 858, "col_offset": 22, "nodeName": "ALPHA_MIN", "type": "float"}, {"lineNumber": 861, "col_offset": 30, "nodeName": "m_nb", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 879, "col_offset": 36, "nodeName": "binary_3v8", "type": "Any"}, {"lineNumber": 883, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 893, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 903, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "rng", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.GaussianNB"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 249, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 256, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 259, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "store", "type": "_io.BytesIO"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "cls", "type": "Union[Type[sklearn.naive_bayes.MultinomialNB], Type[sklearn.naive_bayes.BernoulliNB]]"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "cls", "type": "Union[Type[sklearn.naive_bayes.MultinomialNB], Type[sklearn.naive_bayes.BernoulliNB]]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "exp", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "class_log_prior_", "type": "Any"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "exp", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.MultinomialNB"}, {"lineNumber": 467, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 27, "nodeName": "class_count_", "type": "Any"}, {"lineNumber": 596, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 710, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 719, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.CategoricalNB"}, {"lineNumber": 719, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 719, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 720, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 226, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 227, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "category_count_", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 596, "col_offset": 27, "nodeName": "clf", "type": "sklearn.naive_bayes.BernoulliNB"}, {"lineNumber": 596, "col_offset": 53, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 646, "col_offset": 41, "nodeName": "weights", "type": "Any"}, {"lineNumber": 719, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "clf1", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "clf3", "type": "Any"}, {"lineNumber": 245, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "clf", "type": "Union[sklearn.naive_bayes.MultinomialNB, sklearn.naive_bayes.BernoulliNB]"}, {"lineNumber": 339, "col_offset": 52, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 349, "col_offset": 54, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "X", "type": "List[List[int]]"}, {"lineNumber": 646, "col_offset": 49, "nodeName": "i", "type": "int"}]