[{"lineNumber": 177, "col_offset": 0, "nodeName": "test_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_changed_only", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "test_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "test_deeply_nested", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "test_gridsearch", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 0, "nodeName": "test_gridsearch_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 0, "nodeName": "test_n_max_elements_to_show", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 0, "nodeName": "test_bruteforce_ellipsis", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 0, "nodeName": "test_builtin_prettyprinter", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "TransformerMixin", "type": "Type[sklearn.base.TransformerMixin]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "imputer", "type": "SimpleImputer"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "imputer", "type": "SimpleImputer"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "pipeline", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "rfe", "type": "RFE"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "param_grid", "type": "List[Union[Dict[str, Union[List[int], List[float], List[str]]], Dict[str, Union[List[int], List[str]]]]]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "pipeline", "type": "Pipeline"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "N_FEATURES_OPTIONS", "type": "List[int]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "C_OPTIONS", "type": "List[int]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "param_grid", "type": "List[Union[Dict[str, Union[List[int], List[Union[PCA, NMF]]]], Dict[str, Union[List[int], List[sklearn.feature_selection._univariate_selection.SelectKBest]]]]]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "gspipline", "type": "GridSearchCV"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "repr_", "type": "str"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "repr_", "type": "str"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "vocabulary", "type": "Dict[int, int]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "vectorizer", "type": "CountVectorizer"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "vocabulary", "type": "Dict[int, int]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "vectorizer", "type": "CountVectorizer"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "param_grid", "type": "Dict[str, List[int]]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "param_grid", "type": "Dict[str, List[int]]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "full_repr", "type": "str"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "n_nonblank", "type": "int"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "dual", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "dual", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tol", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "C", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "intercept_scaling", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "intercept_scaling", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "solver", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "multi_class", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "multi_class", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "l1_ratio", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "l1_ratio", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "with_mean", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "with_mean", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "with_std", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "with_std", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "StandardScaler"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "step", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "iid", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "iid", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "refit", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "refit", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "cv", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "pre_dispatch", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "pre_dispatch", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "int64", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "decode_error", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "decode_error", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "strip_accents", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "strip_accents", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "token_pattern", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "token_pattern", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "stop_words", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "stop_words", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "max_df", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "max_df", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "min_df", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "min_df", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ngram_range", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "ngram_range", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "binary", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "binary", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "steps", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "steps", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "memory", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "degree", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "degree", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "coef0", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "coef0", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tol", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "C", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "shrinking", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "shrinking", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "probability", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "probability", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "cache_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "cache_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "decision_function_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "decision_function_shape", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "n_components", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "n_components", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "whiten", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "whiten", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "svd_solver", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "svd_solver", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "tol", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "iterated_power", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "iterated_power", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "n_components", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "n_components", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "init", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "solver", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "beta_loss", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "beta_loss", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "tol", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "l1_ratio", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "l1_ratio", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "nan", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "missing_values", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "missing_values", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "expected", "type": "str"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "expected", "type": "str"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "expected", "type": "str"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "SimpleImputer", "type": "Type[SimpleImputer]"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "expected", "type": "str"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "SimpleImputer", "type": "Type[SimpleImputer]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "expected", "type": "str"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "make_pipeline", "type": "Callable[..., sklearn.pipeline.Pipeline]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "expected", "type": "str"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "expected", "type": "str"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "GridSearchCV", "type": "Type[GridSearchCV]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "param_grid", "type": "List[Union[Dict[str, Union[List[int], List[float], List[str]]], Dict[str, Union[List[int], List[str]]]]]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "expected", "type": "str"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "_EstimatorPrettyPrinter", "type": "Type[sklearn.utils._pprint._EstimatorPrettyPrinter]"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "Pipeline", "type": "Type[Pipeline]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "GridSearchCV", "type": "Type[GridSearchCV]"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "pipeline", "type": "Pipeline"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "pformat", "type": "Callable[[object], str]"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "gspipline", "type": "GridSearchCV"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "repr_", "type": "str"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "repr_", "type": "str"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 375, "col_offset": 9, "nodeName": "_EstimatorPrettyPrinter", "type": "Type[sklearn.utils._pprint._EstimatorPrettyPrinter]"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "CountVectorizer", "type": "Type[CountVectorizer]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "expected", "type": "str"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "CountVectorizer", "type": "Type[CountVectorizer]"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "expected", "type": "str"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "GridSearchCV", "type": "Type[GridSearchCV]"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "param_grid", "type": "Dict[str, List[int]]"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "expected", "type": "str"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "GridSearchCV", "type": "Type[GridSearchCV]"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "param_grid", "type": "Dict[str, List[int]]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "expected", "type": "str"}, {"lineNumber": 465, "col_offset": 9, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 494, "col_offset": 49, "nodeName": "full_repr", "type": "str"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "full_repr", "type": "str"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "expected", "type": "str"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "pprint", "type": "Callable[[object], None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "StandardScaler"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "StandardScaler"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "StandardScaler"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "RFE"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "RFE"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "RFE"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "RFE"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "CountVectorizer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Pipeline"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Pipeline"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "SVC"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "PCA"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "NMF"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "SimpleImputer"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "SimpleImputer"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "SimpleImputer"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "SimpleImputer"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "SimpleImputer"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "LogisticRegressionCV", "type": "Type[sklearn.linear_model._logistic.LogisticRegressionCV]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "StandardScaler", "type": "Type[StandardScaler]"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "SVC", "type": "Type[SVC]"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "N_FEATURES_OPTIONS", "type": "List[int]"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "C_OPTIONS", "type": "List[int]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "N_FEATURES_OPTIONS", "type": "List[int]"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "C_OPTIONS", "type": "List[int]"}, {"lineNumber": 324, "col_offset": 66, "nodeName": "param_grid", "type": "List[Union[Dict[str, Union[List[int], List[Union[PCA, NMF]]]], Dict[str, Union[List[int], List[sklearn.feature_selection._univariate_selection.SelectKBest]]]]]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 382, "col_offset": 44, "nodeName": "vocabulary", "type": "Dict[int, int]"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "pformat", "type": "Callable[[object], str]"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "vectorizer", "type": "CountVectorizer"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "vocabulary", "type": "Dict[int, int]"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "pformat", "type": "Callable[[object], str]"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "vectorizer", "type": "CountVectorizer"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "SVC", "type": "Type[SVC]"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "pformat", "type": "Callable[[object], str]"}, {"lineNumber": 438, "col_offset": 22, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "SVC", "type": "Type[SVC]"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "pformat", "type": "Callable[[object], str]"}, {"lineNumber": 458, "col_offset": 22, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 493, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 532, "col_offset": 23, "nodeName": "__repr__", "type": "Callable[..., str]"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "imputer", "type": "SimpleImputer"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "imputer", "type": "SimpleImputer"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "pipeline", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "rfe", "type": "RFE"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "gs", "type": "GridSearchCV"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 401, "col_offset": 32, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "pp", "type": "sklearn.utils._pprint._EstimatorPrettyPrinter"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 493, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 494, "col_offset": 34, "nodeName": "n_nonblank", "type": "int"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 532, "col_offset": 23, "nodeName": "lr", "type": "LogisticRegression"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "PrettyPrinter", "type": "Type[pprint.PrettyPrinter]"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "PCA", "type": "Type[PCA]"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "SVC", "type": "Type[SVC]"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "PCA", "type": "Type[PCA]"}, {"lineNumber": 314, "col_offset": 50, "nodeName": "NMF", "type": "Type[NMF]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "SelectKBest", "type": "Type[sklearn.feature_selection._univariate_selection.SelectKBest]"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "chi2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "n_max_elements_to_show", "type": "int"}, {"lineNumber": 493, "col_offset": 29, "nodeName": "full_repr", "type": "str"}, {"lineNumber": 507, "col_offset": 46, "nodeName": "n_nonblank", "type": "int"}, {"lineNumber": 520, "col_offset": 46, "nodeName": "n_nonblank", "type": "int"}, {"lineNumber": 532, "col_offset": 46, "nodeName": "n_nonblank", "type": "int"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "RFE", "type": "Type[RFE]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}]