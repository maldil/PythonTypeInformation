[{"lineNumber": 59, "col_offset": 0, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "rng", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "br_estimator", "type": "sklearn.linear_model._bayes.BayesianRidge"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "score_full_data", "type": "Any"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "y_missing", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "missing_samples", "type": "Any"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "missing_features", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "nan", "type": "Any"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "score_simple_imputer", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "strategy", "type": "str"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "estimators", "type": "List[Union[sklearn.linear_model._bayes.BayesianRidge, sklearn.tree._classes.DecisionTreeRegressor, sklearn.ensemble._forest.ExtraTreesRegressor, sklearn.neighbors._regression.KNeighborsRegressor]]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "score_iterative_imputer", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "impute_estimator", "type": "Union[sklearn.linear_model._bayes.BayesianRidge, sklearn.tree._classes.DecisionTreeRegressor, sklearn.ensemble._forest.ExtraTreesRegressor, sklearn.neighbors._regression.KNeighborsRegressor]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "estimators", "type": "List[Union[sklearn.linear_model._bayes.BayesianRidge, sklearn.tree._classes.DecisionTreeRegressor, sklearn.ensemble._forest.ExtraTreesRegressor, sklearn.neighbors._regression.KNeighborsRegressor]]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "means", "type": "Any"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "errors", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "fetch_california_housing", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "BayesianRidge", "type": "Type[sklearn.linear_model._bayes.BayesianRidge]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "X_missing", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "estimator", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "estimator", "type": "sklearn.pipeline.Pipeline"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "fig", "type": "Any"}, {"lineNumber": 125, "col_offset": 5, "nodeName": "ax", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "std", "type": "Any"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "barh", "type": "Any"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "set_yticklabels", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "tight_layout", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "show", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "br_estimator", "type": "sklearn.linear_model._bayes.BayesianRidge"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "y_full", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "X_full", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "make_pipeline", "type": "Callable[..., sklearn.pipeline.Pipeline]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "br_estimator", "type": "sklearn.linear_model._bayes.BayesianRidge"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "score_simple_imputer", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "BayesianRidge", "type": "Type[sklearn.linear_model._bayes.BayesianRidge]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "DecisionTreeRegressor", "type": "Type[sklearn.tree._classes.DecisionTreeRegressor]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "ExtraTreesRegressor", "type": "Type[sklearn.ensemble._forest.ExtraTreesRegressor]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "KNeighborsRegressor", "type": "Type[sklearn.neighbors._regression.KNeighborsRegressor]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "pd", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "make_pipeline", "type": "Callable[..., sklearn.pipeline.Pipeline]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "br_estimator", "type": "sklearn.linear_model._bayes.BayesianRidge"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "score_iterative_imputer", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 120, "col_offset": 5, "nodeName": "score_full_data", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "score_simple_imputer", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "score_iterative_imputer", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "plt", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "mean", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "plot", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "errors", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "ax", "type": "Any"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "ax", "type": "Any"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "ax", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "ax", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "ax", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "missing_samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "missing_features", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "SimpleImputer", "type": "Type[sklearn.impute._base.SimpleImputer]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "strategy", "type": "str"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "IterativeImputer", "type": "Type[sklearn.impute._iterative.IterativeImputer]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "N_SPLITS", "type": "int"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "means", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "label", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "label", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "strategy", "type": "str"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "impute_estimator", "type": "Union[sklearn.linear_model._bayes.BayesianRidge, sklearn.tree._classes.DecisionTreeRegressor, sklearn.ensemble._forest.ExtraTreesRegressor, sklearn.neighbors._regression.KNeighborsRegressor]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "means", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "impute_estimator", "type": "Union[sklearn.linear_model._bayes.BayesianRidge, sklearn.tree._classes.DecisionTreeRegressor, sklearn.ensemble._forest.ExtraTreesRegressor, sklearn.neighbors._regression.KNeighborsRegressor]"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "index", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "means", "type": "Any"}]