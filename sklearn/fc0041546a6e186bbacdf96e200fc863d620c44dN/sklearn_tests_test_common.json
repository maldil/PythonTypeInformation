[{"lineNumber": 43, "col_offset": 0, "nodeName": "test_all_estimator_no_base_class", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_estimator_cls_parameterize_with_checks", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_mark_xfail_checks_with_unconsructable_estimator", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "_sample_func", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "_tested_estimators", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_estimators", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_check_estimator_generate_only", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_configure", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "_tested_linear_classifiers", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_import_all_consistency", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "test_root_import_all_completeness", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "test_all_tests_are_importable", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_class_support_deprecated", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "param_checks", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "estimator_cls_checks", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "all_instance_checks", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "cwd", "type": "str"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "setup_filename", "type": "str"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "classifiers", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "pkgs", "type": "Iterator[pkgutil.ModuleInfo]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "modname", "type": "str"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "msg", "type": "str"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "parametrize_with_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "check", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "_mark_xfail_checks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "MyEstimator", "type": "Type[Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "MyEstimator", "type": "Type[Any]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "check", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "check_parameters_default_constructible", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "isgenerator", "type": "Callable[[object], bool]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "isgenerator", "type": "Callable[[object], bool]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "estimator_cls_gen_checks", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "all_instance_gen_checks", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "old_argv", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "all_estimators", "type": "Callable[..., List[Any]]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "classifiers", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "check_class_weight_balanced_linear_classifier", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "submods", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "package", "type": "module"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 240, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 244, "col_offset": 51, "nodeName": "missing_tests", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "check_parameters_default_constructible", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "_set_check_estimator_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "BiclusterMixin", "type": "Type[sklearn.base.BiclusterMixin]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "ignore_warnings", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_set_checking_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "estimator_cls_checks", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "GridSearchCV", "type": "Type[sklearn.model_selection._search.GridSearchCV]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "setup_filename", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "setup_path", "type": "str"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "cwd", "type": "str"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "pkgs", "type": "Iterator[pkgutil.ModuleInfo]"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "modname", "type": "str"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "IS_PYPY", "type": "bool"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "package", "type": "module"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 217, "col_offset": 52, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "modname", "type": "str"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "check_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "parametrize_with_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "param_checks", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "_construct_instance", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "Estimator", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "all_instance_checks", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "required_parameters", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "_", "type": "Union[importlib.abc.MetaPathFinder, importlib.abc.PathEntryFinder]"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "modname", "type": "str"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "_", "type": "bool"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "package", "type": "module"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 61, "nodeName": "modname", "type": "str"}, {"lineNumber": 212, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 217, "col_offset": 52, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "modname", "type": "str"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 219, "col_offset": 56, "nodeName": "modname", "type": "str"}, {"lineNumber": 219, "col_offset": 67, "nodeName": "EXCEPTIONS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "walk_packages", "type": "Callable[..., Iterator[pkgutil.ModuleInfo]]"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "__path__", "type": "Iterable[str]"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "items", "type": "Callable"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "ispkg", "type": "bool"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "msg", "type": "str"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "msg", "type": "str"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "LogisticRegression", "type": "Type[sklearn.linear_model._logistic.LogisticRegression]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "ConvergenceWarning", "type": "Type[sklearn.exceptions.ConvergenceWarning]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "exec", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "LinearClassifierMixin", "type": "Type[sklearn.linear_model._base.LinearClassifierMixin]"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "modname", "type": "str"}, {"lineNumber": 207, "col_offset": 62, "nodeName": "modname", "type": "str"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "modname", "type": "str"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "pkgutil", "type": "module"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "lookup", "type": "Dict[str, bool]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "read", "type": "Callable"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 238, "col_offset": 57, "nodeName": "name", "type": "str"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "HAS_TESTS_EXCEPTIONS", "type": "Pattern[str]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "clazz", "type": "Any"}]