[{"lineNumber": 33, "col_offset": 0, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "test_label_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_label_binarizer_unseen_labels", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_label_binarizer_set_label_encoding", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_label_binarizer_errors", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "test_label_encoder_negative_ints", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "test_label_encoder_str_bad_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "test_label_encoder_errors", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "test_sparse_output_multilabel_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 0, "nodeName": "test_multilabel_binarizer", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "test_multilabel_binarizer_empty_sample", "type": "Callable[[], Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "test_multilabel_binarizer_unknown_class", "type": "Callable[[], Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "test_multilabel_binarizer_given_classes", "type": "Callable[[], Any]"}, {"lineNumber": 401, "col_offset": 0, "nodeName": "test_multilabel_binarizer_multiple_calls", "type": "Callable[[], Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "test_multilabel_binarizer_same_length_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 436, "col_offset": 0, "nodeName": "test_multilabel_binarizer_non_integer_labels", "type": "Callable[[], Any]"}, {"lineNumber": 464, "col_offset": 0, "nodeName": "test_multilabel_binarizer_non_unique", "type": "Callable[[], Any]"}, {"lineNumber": 471, "col_offset": 0, "nodeName": "test_multilabel_binarizer_inverse_validation", "type": "Callable[[], Any]"}, {"lineNumber": 490, "col_offset": 0, "nodeName": "test_label_binarize_with_class_order", "type": "Callable[[], Any]"}, {"lineNumber": 508, "col_offset": 0, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 550, "col_offset": 0, "nodeName": "test_label_binarize_binary", "type": "Callable[[], Any]"}, {"lineNumber": 569, "col_offset": 0, "nodeName": "test_label_binarize_multiclass", "type": "Callable[[], Any]"}, {"lineNumber": 583, "col_offset": 0, "nodeName": "test_label_binarize_multilabel", "type": "Callable[[], Any]"}, {"lineNumber": 602, "col_offset": 0, "nodeName": "test_invalid_input_label_binarize", "type": "Callable[[], Any]"}, {"lineNumber": 611, "col_offset": 0, "nodeName": "test_inverse_binarize_multiclass", "type": "Callable[[], Any]"}, {"lineNumber": 638, "col_offset": 0, "nodeName": "test_encode_check_unknown", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "iris", "type": "Union[sklearn.utils.Bunch, Tuple[Any, Any]]"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "load_iris", "type": "Callable[..., Union[sklearn.utils.Bunch, Tuple[Any, Any]]]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "to_invert", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "one_class", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "multi_label", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "y_seq_of_seqs", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "inverse_transformed", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "y", "type": "List[Union[List[int], List[nothing]]]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "w", "type": "str"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "indicator_mat2", "type": "numpy.ndarray"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "tuple_classes", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "inputs", "type": "List[Union[Tuple[List[Union[Tuple[str, str], Tuple[str]]], List[str]], Tuple[List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]], Any]]]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "inputs", "type": "List[Union[Tuple[List[Union[Tuple[str, str], Tuple[str]]], List[str]], Tuple[List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]], Any]]]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "y_sparse", "type": "List[Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "got", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "uniques", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "uniques", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "uniques", "type": "numpy.ndarray"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "datasets", "type": "module"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "got", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "classes_", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "inp", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "inp", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "one_class", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "classes", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "values", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "ret", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "LabelEncoder", "type": "Type[sklearn.preprocessing._label.LabelEncoder]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "inverse_transformed", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "got", "type": "Any"}, {"lineNumber": 343, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 348, "col_offset": 45, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 356, "col_offset": 47, "nodeName": "w", "type": "str"}, {"lineNumber": 357, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 358, "col_offset": 31, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "w", "type": "str"}, {"lineNumber": 363, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 374, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 378, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 379, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 383, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 391, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 412, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 413, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 416, "col_offset": 47, "nodeName": "indicator_mat2", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 426, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 428, "col_offset": 61, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 432, "col_offset": 52, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 433, "col_offset": 61, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "_to_object_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "classes", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 459, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 467, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 468, "col_offset": 47, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 474, "col_offset": 22, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 491, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 493, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 496, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 500, "col_offset": 10, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "y_type", "type": "str"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 557, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 557, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 566, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 566, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 566, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 28, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 576, "col_offset": 51, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 576, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 588, "col_offset": 15, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "y_sparse", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 10, "nodeName": "_inverse_binarize_multiclass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 616, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 629, "col_offset": 14, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 630, "col_offset": 23, "nodeName": "uniques", "type": "Any"}, {"lineNumber": 630, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "uniques", "type": "Any"}, {"lineNumber": 631, "col_offset": 13, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 631, "col_offset": 23, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 631, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 632, "col_offset": 23, "nodeName": "uniques", "type": "Any"}, {"lineNumber": 632, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 633, "col_offset": 23, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 634, "col_offset": 7, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 634, "col_offset": 33, "nodeName": "uniques", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 635, "col_offset": 23, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 641, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 20, "nodeName": "uniques", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "to_invert", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "multi_label", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "y_seq_of_seqs", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "unknown", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "got", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "got", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 14, "nodeName": "inputs", "type": "List[Callable[[], Any]]"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 27, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "got", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 42, "nodeName": "got", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 41, "nodeName": "y", "type": "List[Union[List[int], List[nothing]]]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 397, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 46, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 45, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 441, "col_offset": 48, "nodeName": "tuple_classes", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 449, "col_offset": 51, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "classes", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 451, "col_offset": 65, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 454, "col_offset": 14, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 455, "col_offset": 56, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 456, "col_offset": 41, "nodeName": "classes", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 457, "col_offset": 65, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "inp", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 476, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 486, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 510, "col_offset": 51, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 518, "col_offset": 38, "nodeName": "classes", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 521, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 522, "col_offset": 38, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 525, "col_offset": 17, "nodeName": "type_of_target", "type": "Callable[[Any], str]"}, {"lineNumber": 525, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "y_type", "type": "str"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 543, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 544, "col_offset": 38, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "inverse_transform", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "eye", "type": "Any"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 579, "col_offset": 26, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 593, "col_offset": 14, "nodeName": "y_ind", "type": "numpy.ndarray"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "check_binarized_results", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 594, "col_offset": 35, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 594, "col_offset": 44, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 594, "col_offset": 55, "nodeName": "neg_label", "type": "int"}, {"lineNumber": 595, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 597, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 597, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 598, "col_offset": 26, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 603, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 603, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 605, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 605, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 615, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 633, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 641, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 644, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "uniques", "type": "numpy.ndarray"}, {"lineNumber": 652, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 652, "col_offset": 46, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 653, "col_offset": 50, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 654, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "_encode", "type": "Callable[..., Any]"}, {"lineNumber": 656, "col_offset": 16, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "uniques", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "got", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "le", "type": "sklearn.preprocessing._label.LabelEncoder"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 36, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "got", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "got", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "MultiLabelBinarizer", "type": "Type[sklearn.preprocessing._label.MultiLabelBinarizer]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "got", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "got", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 42, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "inverse", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "got", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "got", "type": "Any"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 357, "col_offset": 34, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 363, "col_offset": 34, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "y", "type": "List[List[int]]"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 51, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 397, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 449, "col_offset": 45, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 49, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 50, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 49, "nodeName": "indicator_mat", "type": "numpy.ndarray"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 476, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 486, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 518, "col_offset": 57, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 519, "col_offset": 45, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 520, "col_offset": 49, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 521, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 522, "col_offset": 24, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "_inverse_binarize_multiclass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 527, "col_offset": 52, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 530, "col_offset": 23, "nodeName": "_inverse_binarize_thresholding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 54, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 35, "nodeName": "inversed", "type": "Any"}, {"lineNumber": 537, "col_offset": 46, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 540, "col_offset": 38, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 540, "col_offset": 59, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 541, "col_offset": 42, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 543, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 543, "col_offset": 35, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 544, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "binarized", "type": "Any"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "lb", "type": "sklearn.preprocessing._label.LabelBinarizer"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 546, "col_offset": 52, "nodeName": "toarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "inverse_output", "type": "Any"}, {"lineNumber": 547, "col_offset": 43, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 547, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 579, "col_offset": 59, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 590, "col_offset": 38, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 590, "col_offset": 50, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 590, "col_offset": 62, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 591, "col_offset": 38, "nodeName": "dok_matrix", "type": "Any"}, {"lineNumber": 591, "col_offset": 50, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 597, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 598, "col_offset": 59, "nodeName": "pos_label", "type": "int"}, {"lineNumber": 603, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 605, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 607, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 615, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 654, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "LabelBinarizer", "type": "Type[sklearn.preprocessing._label.LabelBinarizer]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 52, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "got", "type": "Any"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "got", "type": "Any"}, {"lineNumber": 298, "col_offset": 52, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "got", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 303, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 306, "col_offset": 42, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "inverse_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "got", "type": "Any"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 357, "col_offset": 34, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 363, "col_offset": 34, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "inp", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "inp", "type": "Union[listiterator[Tuple[int, int]], listiterator[Tuple[int]]]"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 432, "col_offset": 31, "nodeName": "inp", "type": "List[List[int]]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 510, "col_offset": 13, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "label_binarize", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "classes", "type": "Any"}, {"lineNumber": 527, "col_offset": 71, "nodeName": "classes", "type": "Any"}, {"lineNumber": 531, "col_offset": 66, "nodeName": "y_type", "type": "str"}, {"lineNumber": 532, "col_offset": 62, "nodeName": "classes", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 276, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "indices", "type": "Any"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "got", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "indices", "type": "Any"}, {"lineNumber": 303, "col_offset": 44, "nodeName": "indptr", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "got", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "inp", "type": "Union[List[Union[Tuple[str, str], Tuple[str]]], List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int]]]]]"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 512, "col_offset": 53, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 513, "col_offset": 41, "nodeName": "pos_label", "type": "Any"}, {"lineNumber": 514, "col_offset": 45, "nodeName": "sparse_output", "type": "bool"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "inp", "type": "Callable[[], Any]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "got", "type": "Any"}, {"lineNumber": 303, "col_offset": 44, "nodeName": "got", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "mlb", "type": "sklearn.preprocessing._label.MultiLabelBinarizer"}, {"lineNumber": 533, "col_offset": 66, "nodeName": "neg_label", "type": "Any"}, {"lineNumber": 534, "col_offset": 65, "nodeName": "pos_label", "type": "Any"}]