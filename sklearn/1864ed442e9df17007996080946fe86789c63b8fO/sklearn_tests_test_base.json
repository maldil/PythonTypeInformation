[{"lineNumber": 112, "col_offset": 0, "nodeName": "test_clone", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "test_clone_2", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_clone_buggy", "type": "Callable[[], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_clone_empty_array", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "test_clone_nan", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "test_clone_sparse_matrices", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_clone_estimator_types", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "test_clone_class_rather_than_instance", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_repr", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "test_str", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "test_get_params", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_is_classifier", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_set_params", "type": "Callable[[], Any]"}, {"lineNumber": 261, "col_offset": 0, "nodeName": "test_set_params_passes_all_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 279, "col_offset": 0, "nodeName": "test_set_params_updates_valid_params", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "test_score_sample_weight", "type": "Callable[[], Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "test_clone_pandas_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 347, "col_offset": 0, "nodeName": "test_pickle_version_warning_is_not_raised_with_matching_version", "type": "Callable[[], Any]"}, {"lineNumber": 373, "col_offset": 0, "nodeName": "test_pickle_version_warning_is_issued_upon_different_version", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 0, "nodeName": "test_pickle_version_warning_is_issued_when_no_version_info_in_pickle", "type": "Callable[[], Any]"}, {"lineNumber": 403, "col_offset": 0, "nodeName": "test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator", "type": "Callable[[], Any]"}, {"lineNumber": 432, "col_offset": 0, "nodeName": "test_pickling_when_getstate_is_overwritten_by_mixin", "type": "Callable[[], Any]"}, {"lineNumber": 443, "col_offset": 0, "nodeName": "test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn", "type": "Callable[[], Any]"}, {"lineNumber": 474, "col_offset": 0, "nodeName": "test_pickling_works_when_getstate_is_overwritten_in_the_child_class", "type": "Callable[[], Any]"}, {"lineNumber": 485, "col_offset": 0, "nodeName": "test_tag_inheritance", "type": "Callable[[], Any]"}, {"lineNumber": 503, "col_offset": 0, "nodeName": "test_warns_on_get_params_non_attribute", "type": "Callable[[], Any]"}, {"lineNumber": 518, "col_offset": 0, "nodeName": "test_repr_mimebundle_", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 0, "nodeName": "test_repr_html_wraps", "type": "Callable[[], Any]"}, {"lineNumber": 544, "col_offset": 0, "nodeName": "test_is_pairwise", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_more_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "_more_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "NaNTag", "type": "Type[NaNTag]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "_more_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "NaNTag", "type": "Type[NaNTag]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "NoNaNTag", "type": "Type[NoNaNTag]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "_more_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "DiamondOverwriteTag", "type": "Type[DiamondOverwriteTag]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 0, "nodeName": "pickle_error_message", "type": "str"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "__setstate__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "DontPickleAttributeMixin", "type": "Type[DontPickleAttributeMixin]"}, {"lineNumber": 426, "col_offset": 58, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 33, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "own_attribute", "type": "str"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "buggy", "type": "Buggy"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "a", "type": "int"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "no_estimator", "type": "NoEstimator"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "varg_est", "type": "VargEstimator"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "est", "type": "ModifyInitParams"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "sparse_matrix_classes", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "sparse_matrix_classes", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "my_estimator", "type": "MyEstimator"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "test", "type": "T"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "some_est", "type": "T"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "my_estimator", "type": "MyEstimator"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "test", "type": "T"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "svc", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "clf", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "expected_kwargs", "type": "Dict[str, int]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "gscv", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "estimators", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "sets", "type": "List[Any]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "TransformerMixin", "type": "Type[sklearn.base.TransformerMixin]"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "cloned_e", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "tree_pickle", "type": "str"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "tree_restored", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "score_of_original", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "score_of_restored", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "tree_pickle_other", "type": "str"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "message", "type": "str"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "tree_pickle_noversion", "type": "str"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "message", "type": "str"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "iris", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "tree_pickle_noversion", "type": "str"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "_attribute_not_pickled", "type": "str"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "serialized", "type": "str"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "_restored", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "estimator", "type": "SingleInheritanceEstimator"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "_attribute_not_pickled", "type": "str"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "serialized", "type": "str"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "nan_tag_est", "type": "NaNTag"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "no_nan_tag_est", "type": "NoNaNTag"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "redefine_tags_est", "type": "OverrideTag"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "diamond_tag_est", "type": "DiamondOverwriteTag"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "inherit_diamond_tag_est", "type": "InheritDiamondOverwriteTag"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "est", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "pca", "type": "sklearn.decomposition._kernel_pca.KernelPCA"}, {"lineNumber": 552, "col_offset": 26, "nodeName": "KernelPCA", "type": "Type[sklearn.decomposition._kernel_pca.KernelPCA]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "_get_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "false_pairwise", "type": "Any"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "FalsePairwise", "type": "Type[Any]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "true_pairwise", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "est", "type": "sklearn.base.BaseEstimator"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "l1", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "l1", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "empty", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "empty", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "c", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "a", "type": "int"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "NoEstimator"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "SelectFpr", "type": "Type[sklearn.feature_selection._univariate_selection.SelectFpr]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "f_classif", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "SelectFpr", "type": "Type[sklearn.feature_selection._univariate_selection.SelectFpr]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "f_classif", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "SelectFpr", "type": "Type[sklearn.feature_selection._univariate_selection.SelectFpr]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "f_classif", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "Buggy", "type": "Type[Buggy]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "buggy", "type": "Buggy"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "buggy", "type": "Buggy"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "NoEstimator", "type": "Type[NoEstimator]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "no_estimator", "type": "NoEstimator"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "VargEstimator", "type": "Type[VargEstimator]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "varg_est", "type": "VargEstimator"}, {"lineNumber": 156, "col_offset": 10, "nodeName": "ModifyInitParams", "type": "Type[ModifyInitParams]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "est", "type": "ModifyInitParams"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "empty", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "empty", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "empty", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "empty", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "sparse_matrix", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "clf_cloned", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "empty", "type": "Type[MyEstimator]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "empty", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "my_estimator", "type": "MyEstimator"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "T", "type": "Type[T]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "T", "type": "Type[T]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "my_estimator", "type": "MyEstimator"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "T", "type": "Type[T]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "d", "type": "Optional[Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "set_params", "type": "Callable"}, {"lineNumber": 240, "col_offset": 10, "nodeName": "SVC", "type": "Type[sklearn.svm._classes.SVC]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "is_classifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "svc", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "is_classifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "is_classifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "is_classifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "C", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "est", "type": "nothing"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "estimators", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "sets", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 338, "col_offset": 9, "nodeName": "MockDataFrame", "type": "Type[sklearn.utils._mocking.MockDataFrame]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "DummyEstimator", "type": "Type[Any]"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "e", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "scalar_param", "type": "int"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "scalar_param", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "target", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "tree", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "tree_pickle", "type": "str"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 352, "col_offset": 53, "nodeName": "tree_pickle", "type": "str"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 355, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "target", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "score_of_original", "type": "Any"}, {"lineNumber": 357, "col_offset": 32, "nodeName": "score_of_restored", "type": "Any"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "tree", "type": "Any"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 380, "col_offset": 38, "nodeName": "message", "type": "str"}, {"lineNumber": 380, "col_offset": 47, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 380, "col_offset": 61, "nodeName": "tree_pickle_other", "type": "str"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "target", "type": "Any"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 393, "col_offset": 41, "nodeName": "tree", "type": "Any"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "tree_pickle_noversion", "type": "str"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "assert_warns_message", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 399, "col_offset": 38, "nodeName": "message", "type": "str"}, {"lineNumber": 399, "col_offset": 47, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "tree_pickle_noversion", "type": "str"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 405, "col_offset": 42, "nodeName": "target", "type": "Any"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 406, "col_offset": 41, "nodeName": "tree", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "module_backup", "type": "str"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "__module__", "type": "str"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "__module__", "type": "str"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "__module__", "type": "str"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "module_backup", "type": "str"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "_attribute_not_pickled", "type": "None"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "MultiInheritanceEstimator", "type": "Type[MultiInheritanceEstimator]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 436, "col_offset": 17, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 437, "col_offset": 38, "nodeName": "serialized", "type": "str"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "_attribute_not_pickled", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "_attribute_not_pickled", "type": "str"}, {"lineNumber": 447, "col_offset": 43, "nodeName": "text", "type": "str"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "old_mod", "type": "str"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "__module__", "type": "str"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "__module__", "type": "str"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "serialized", "type": "Union[Dict[str, Any], Dict[str, Optional[Union[Any, int, bool]]], Dict[Union[Any, str], Any], Dict[Union[Any, str], Optional[Union[Any, int, bool]]]]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "old_mod", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "_attribute_not_pickled", "type": "None"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "SingleInheritanceEstimator", "type": "Type[SingleInheritanceEstimator]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "estimator", "type": "SingleInheritanceEstimator"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "estimator", "type": "SingleInheritanceEstimator"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 480, "col_offset": 38, "nodeName": "serialized", "type": "str"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "attribute_pickled", "type": "Any"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "_attribute_not_pickled", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "NaNTag", "type": "Type[NaNTag]"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "NoNaNTag", "type": "Type[NoNaNTag]"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "OverrideTag", "type": "Type[OverrideTag]"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "DiamondOverwriteTag", "type": "Type[DiamondOverwriteTag]"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "InheritDiamondOverwriteTag", "type": "Type[InheritDiamondOverwriteTag]"}, {"lineNumber": 511, "col_offset": 10, "nodeName": "MyEstimator", "type": "Type[Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "_repr_mimebundle_", "type": "Any"}, {"lineNumber": 522, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 523, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 546, "col_offset": 10, "nodeName": "KernelPCA", "type": "Type[sklearn.decomposition._kernel_pca.KernelPCA]"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "_pairwise", "type": "bool"}, {"lineNumber": 555, "col_offset": 10, "nodeName": "IncorrectTagPCA", "type": "Type[Any]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "_pairwise", "type": "bool"}, {"lineNumber": 571, "col_offset": 21, "nodeName": "FalsePairwise", "type": "Type[Any]"}, {"lineNumber": 572, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "_pairwise", "type": "bool"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "TruePairwise", "type": "Type[Any]"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "BaseEstimator", "type": "Type[sklearn.base.BaseEstimator]"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MyEstimator"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "MyEstimator"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "K"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "K"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "T"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "T"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ModifyInitParams"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Buggy"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "get_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "empty", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "empty", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "nan", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "cls", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "clone", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "MyEstimator", "type": "Type[MyEstimator]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "K", "type": "Type[K]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "K", "type": "Type[K]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "test", "type": "T"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "K", "type": "Type[K]"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "K", "type": "Type[K]"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "get_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "get_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "test", "type": "T"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "a", "type": "Union[K, Any]"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "test", "type": "T"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "svc", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "gscv", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "DecisionTreeRegressor", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "fit", "type": "nothing"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "target", "type": "nothing"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "randint", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "scalar_param", "type": "int"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "scalar_param", "type": "int"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "e", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "cloned_e", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "iris", "type": "Any"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "iris", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "pickle", "type": "module"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "pickle", "type": "module"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "tree", "type": "Any"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "iris", "type": "Any"}, {"lineNumber": 355, "col_offset": 46, "nodeName": "iris", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "tree_restored", "type": "Any"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "iris", "type": "Any"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "iris", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "iris", "type": "Any"}, {"lineNumber": 375, "col_offset": 43, "nodeName": "iris", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "pickle", "type": "module"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "pickle_error_message", "type": "str"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 380, "col_offset": 47, "nodeName": "pickle", "type": "module"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "self", "type": "TreeNoVersion"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "iris", "type": "Any"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "iris", "type": "Any"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "pickle", "type": "module"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "pickle_error_message", "type": "str"}, {"lineNumber": 397, "col_offset": 58, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 399, "col_offset": 47, "nodeName": "pickle", "type": "module"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "iris", "type": "Any"}, {"lineNumber": 405, "col_offset": 42, "nodeName": "iris", "type": "Any"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "pickle", "type": "module"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "TreeNoVersion", "type": "Type[TreeNoVersion]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "TreeNoVersion", "type": "Type[TreeNoVersion]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assert_no_warnings", "type": "Any"}, {"lineNumber": 410, "col_offset": 27, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "tree_pickle_noversion", "type": "str"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "TreeNoVersion", "type": "Type[TreeNoVersion]"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "MultiInheritanceEstimator"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "MultiInheritanceEstimator"}, {"lineNumber": 436, "col_offset": 17, "nodeName": "pickle", "type": "module"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "pickle", "type": "module"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "MultiInheritanceEstimator", "type": "Type[MultiInheritanceEstimator]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "__getstate__", "type": "Callable[[], Any]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "serialized", "type": "Union[Dict[str, Any], Dict[str, Optional[Union[Any, int, bool]]], Dict[Union[Any, str], Any], Dict[Union[Any, str], Optional[Union[Any, int, bool]]]]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "serialized", "type": "Union[Dict[str, Any], Dict[str, Optional[Union[Any, int, bool]]], Dict[Union[Any, str], Any], Dict[Union[Any, str], Optional[Union[Any, int, bool]]]]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "__setstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 31, "nodeName": "serialized", "type": "Union[Dict[str, Any], Dict[str, Optional[Union[Any, int, bool]]], Dict[Union[Any, str], Any], Dict[Union[Any, str], Optional[Union[Any, int, bool]]]]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "attribute_pickled", "type": "int"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "SingleInheritanceEstimator"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "SingleInheritanceEstimator"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "pickle", "type": "module"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "pickle", "type": "module"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "estimator_restored", "type": "Any"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "_get_tags", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "_get_tags", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "_get_tags", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 509, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 512, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "get_params", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "tree", "type": "Any"}, {"lineNumber": 525, "col_offset": 9, "nodeName": "config_context", "type": "Any"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "_repr_mimebundle_", "type": "Any"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 535, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 535, "col_offset": 23, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 536, "col_offset": 17, "nodeName": "_repr_html_", "type": "Any"}, {"lineNumber": 538, "col_offset": 9, "nodeName": "config_context", "type": "Any"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "_repr_html_", "type": "Any"}, {"lineNumber": 540, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 547, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "_is_pairwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 548, "col_offset": 28, "nodeName": "pca", "type": "sklearn.decomposition._kernel_pca.KernelPCA"}, {"lineNumber": 558, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "tags", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 582, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "_is_pairwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 583, "col_offset": 28, "nodeName": "true_pairwise", "type": "Any"}, {"lineNumber": 587, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "selector", "type": "sklearn.feature_selection._univariate_selection.SelectFpr"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "new_selector", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "clf2", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "sp", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "eye", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "sparse_matrix", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "empty", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "some_est", "type": "T"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "test", "type": "T"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "test", "type": "T"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "test", "type": "T"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "expected_kwargs", "type": "Dict[str, int]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "TestDecisionTree", "type": "Type[Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "est", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "SVC", "type": "Type[sklearn.svm._classes.SVC]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "gscv", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "est", "type": "nothing"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "rng", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "score", "type": "nothing"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "data", "type": "nothing"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "target", "type": "nothing"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "score", "type": "nothing"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "data", "type": "nothing"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "target", "type": "nothing"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "TreeBadVersion", "type": "Type[TreeBadVersion]"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "TreeNoVersion", "type": "Type[TreeNoVersion]"}, {"lineNumber": 397, "col_offset": 58, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "TreeNoVersion", "type": "Type[TreeNoVersion]"}, {"lineNumber": 410, "col_offset": 27, "nodeName": "pickle", "type": "module"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "estimator", "type": "MultiInheritanceEstimator"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 460, "col_offset": 13, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "nan_tag_est", "type": "NaNTag"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "_get_tags", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "_get_tags", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "diamond_tag_est", "type": "DiamondOverwriteTag"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "inherit_diamond_tag_est", "type": "InheritDiamondOverwriteTag"}, {"lineNumber": 512, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "est", "type": "Any"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 535, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 536, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 547, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 558, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 558, "col_offset": 43, "nodeName": "msg", "type": "str"}, {"lineNumber": 559, "col_offset": 19, "nodeName": "_is_pairwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "pca", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "_get_tags", "type": "Any"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "tags", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "_is_pairwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 573, "col_offset": 32, "nodeName": "false_pairwise", "type": "Any"}, {"lineNumber": 582, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 582, "col_offset": 43, "nodeName": "msg", "type": "str"}, {"lineNumber": 587, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "_is_pairwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "est", "type": "sklearn.base.BaseEstimator"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "sp", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "name", "type": "str"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "clf_cloned", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "empty", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "svc", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "SVC", "type": "Type[sklearn.svm._classes.SVC]"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 52, "nodeName": "target", "type": "nothing"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "est", "type": "nothing"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "est", "type": "nothing"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "df", "type": "sklearn.utils._mocking.MockDataFrame"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "self", "type": "DontPickleAttributeMixin"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "DontPickleAttributeMixin"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "self", "type": "SingleInheritanceEstimator"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "no_nan_tag_est", "type": "NoNaNTag"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "redefine_tags_est", "type": "OverrideTag"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "clf", "type": "MyEstimator"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "clf_cloned", "type": "Any"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "svc", "type": "sklearn.svm._classes.SVC"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "TestDecisionTree", "type": "Type[Any]"}, {"lineNumber": 300, "col_offset": 52, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "cloned_e", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "self", "type": "TreeBadVersion"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}]