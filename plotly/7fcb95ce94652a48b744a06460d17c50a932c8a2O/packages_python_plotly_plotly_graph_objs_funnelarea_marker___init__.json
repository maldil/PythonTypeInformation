[{"lineNumber": 5, "col_offset": 11, "nodeName": "_BaseTraceHierarchyType", "type": "Any"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "_skip_invalid", "type": "Union[Any, bool]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "_skip_invalid", "type": "bool"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "ColorValidator", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "ColorsrcValidator", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "WidthValidator", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "WidthsrcValidator", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "color", "type": "Any"}, {"lineNumber": 219, "col_offset": 56, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "colorsrc", "type": "Any"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "width", "type": "Any"}, {"lineNumber": 223, "col_offset": 56, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "widthsrc", "type": "Any"}, {"lineNumber": 225, "col_offset": 65, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "_process_kwargs", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "v_line", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "v_line", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "v_line", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "v_line", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "color", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "colorsrc", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "width", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "widthsrc", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "Line"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "Line", "type": "Type[Line]"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "self", "type": "Line"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "self", "type": "Line"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "to_plotly_json", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "arg", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "arg", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "_copy", "type": "module"}]