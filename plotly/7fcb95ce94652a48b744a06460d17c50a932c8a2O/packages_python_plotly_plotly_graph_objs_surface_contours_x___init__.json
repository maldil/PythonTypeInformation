[{"lineNumber": 5, "col_offset": 14, "nodeName": "_BaseTraceHierarchyType", "type": "Any"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "_skip_invalid", "type": "Union[Any, bool]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_skip_invalid", "type": "bool"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "XValidator", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "YValidator", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_validators", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "ZValidator", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "z", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "_v", "type": "Optional[Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_process_kwargs", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "v_project", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "v_project", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "v_project", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Project"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "Project", "type": "Type[Project]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "self", "type": "Project"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "Project"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "to_plotly_json", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "arg", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "arg", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "arg", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "_copy", "type": "module"}]