[{"lineNumber": 4, "col_offset": 26, "nodeName": "IntegerValidator", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "CompoundValidator", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "ColorValidator", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "ColorValidator", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "EnumeratedValidator", "type": "Any"}, {"lineNumber": 4, "col_offset": 26, "nodeName": "basevalidators", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "basevalidators", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "basevalidators", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "basevalidators", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "basevalidators", "type": "Any"}, {"lineNumber": 4, "col_offset": 26, "nodeName": "_plotly_utils", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "_plotly_utils", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "_plotly_utils", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "_plotly_utils", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "_plotly_utils", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 9, "col_offset": 24, "nodeName": "plotly_name", "type": "Any"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "parent_name", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "plotly_name", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "parent_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "plotly_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "parent_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "plotly_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "parent_name", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "plotly_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "parent_name", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "NamelengthValidator", "type": "Type[NamelengthValidator]"}, {"lineNumber": 8, "col_offset": 35, "nodeName": "self", "type": "NamelengthValidator"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "FontValidator", "type": "Type[FontValidator]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "self", "type": "FontValidator"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "BordercolorValidator", "type": "Type[BordercolorValidator]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "self", "type": "BordercolorValidator"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "BgcolorValidator", "type": "Type[BgcolorValidator]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "self", "type": "BgcolorValidator"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "AlignValidator", "type": "Type[AlignValidator]"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "self", "type": "AlignValidator"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}]