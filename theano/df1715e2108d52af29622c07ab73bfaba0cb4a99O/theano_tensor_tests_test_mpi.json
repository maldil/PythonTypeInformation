[{"lineNumber": 19, "col_offset": 0, "nodeName": "test_recv", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_send", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_can_make_function", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_mpi_roundtrip", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_mpi_send_wait_cmp", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "test_mpi_tag_ordering", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_mpi_schedule", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "mpi_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "mpi_linker", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "mpi_mode", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "sort_schedule_fn", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "OpWiseCLinker", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "Mode", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "recvnode", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "theano_root", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "waitnode", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "addnode", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "owner", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "waitnode", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "addnode", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "owner", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "optypes", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "mpi_cmps", "type": "Tuple[Callable[[Any, Any], Any], Callable[[Any, Any], Any]]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "theano", "type": "module"}, {"lineNumber": 15, "col_offset": 43, "nodeName": "mpi_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "theano", "type": "module"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "mpi_linker", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "recv", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "broadcastable", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "send", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "dest", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "recv", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "function", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "mpi_enabled", "type": "bool"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 60, "col_offset": 5, "nodeName": "stdout", "type": "bytes"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "stderr", "type": "bytes"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "communicate", "type": "Callable"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "stdout", "type": "bytes"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "stderr", "type": "bytes"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "send", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "z", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "recv", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "recv", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "recv", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "matrix", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "send", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "z", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "MPISend", "type": "Type[theano.tensor.io.MPISend]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "Elemwise", "type": "Any"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "MPISendWait", "type": "Type[theano.tensor.io.MPISendWait]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tensor", "type": "module"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "theano", "type": "module"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "d", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "compat", "type": "module"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "compat", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "tensor", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "mpi_send_wait_cmp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "addnode", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "mpi_send_wait_cmp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "waitnode", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "addnode", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "theano", "type": "module"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "mpi_mode", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "make_all", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tensor", "type": "module"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "theano", "type": "module"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "z", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "mpi_mode", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "make_all", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "tensor", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "recvnode", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "recvnode", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "theano", "type": "module"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "sendnode", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "__file__", "type": "str"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "theano_root", "type": "str"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "theano", "type": "module"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "theano", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "theano", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "linker", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "theano", "type": "module"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "owner", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "linker", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "theano", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "theano", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "maker", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "tag", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "maker", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "optype", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "optypes", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "f", "type": "Any"}]