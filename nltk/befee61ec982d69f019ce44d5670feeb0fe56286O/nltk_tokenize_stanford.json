[{"lineNumber": 121, "col_offset": 0, "nodeName": "setup_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "_stanford_url", "type": "str"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "TokenizerI", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "_parse_tokenized_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tokenize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "_execute", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "_JAR", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_encoding", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "java_options", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "java_options", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "options", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "cmd", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "_encoding", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_options_cmd", "type": "str"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "_options_cmd", "type": "str"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "_options_cmd", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "default_options", "type": "str"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "LookupError", "type": "Type[LookupError]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "find_jar", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "_JAR", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "path_to_jar", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "options", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_parse_tokenized_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "_java_options", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "config_java", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 69, "nodeName": "input_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "unlink", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "config_java", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "StanfordTokenizer", "type": "Type[StanfordTokenizer]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "_stanford_url", "type": "str"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "options", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "_execute", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "cmd", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 63, "nodeName": "s", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "extend", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "java_options", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "input_", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "input_", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "java", "type": "Callable[..., Union[subprocess.Popen[str], Tuple[str, str]]]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "decode", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "input_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "default_options", "type": "str"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "val", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "_options_cmd", "type": "str"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "encode", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "input_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "input_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "input_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "_stanford_jar", "type": "Any"}, {"lineNumber": 109, "col_offset": 58, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "items", "type": "Union[Any, Callable]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "input_", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "self", "type": "StanfordTokenizer"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "options", "type": "Union[Any, Dict[nothing, nothing]]"}]