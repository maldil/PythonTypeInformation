[{"lineNumber": 472, "col_offset": 0, "nodeName": "demo", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "_counter", "type": "nltk.internals.Counter"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "LogicParser", "type": "Type[nltk.sem.logic.LogicParser]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "get_all_symbols", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "handle", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "get_BooleanExpression_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "make_BooleanExpression", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "attempt_ApplicationExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "make_VariableExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "fromstring", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "applyto", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "simplify", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "compile_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "compile_neg", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "initialize_labels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "AtomicExpression", "type": "Type[AtomicExpression]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "unify", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "AtomicExpression", "type": "Type[AtomicExpression]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "unify", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "simplify", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "unify", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "compile_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "compile_neg", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "initialize_labels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "simplify", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "__setitem__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "__contains__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "__add__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 468, "col_offset": 38, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "Counter", "type": "Type[nltk.internals.Counter]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "IMP", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "PUNCT", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "TOKENS", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_linear_logic_parser", "type": "LinearLogicParser"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "fromstring", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "PUNCT", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "operator_precedence", "type": "Dict[Optional[str], int]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "right_associated_operations", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "TOKENS", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "expression", "type": "Union[ApplicationExpression, Any]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "LinearLogicParser", "type": "Type[LinearLogicParser]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "dependencies", "type": "Union[List[nothing], Any]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "dependencies", "type": "Union[List[nothing], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "dependencies", "type": "List[nothing]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "dependencies", "type": "List[nothing]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "dependencies", "type": "Union[List[nothing], Any]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "fresh_index", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "new_v", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "argument_indices", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "function", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "argument", "type": "Any"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "argument", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "bindings", "type": "None"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "existing", "type": "None"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "intermediate", "type": "Any"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "intermediate", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "demo", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "IMP", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "APP", "type": "str"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "IMP", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "IMP", "type": "str"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "tok", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "TOKENS", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "tok", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "IMP", "type": "str"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "factory", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "first", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "second", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "has_priority", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "APP", "type": "str"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "context", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "isupper", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "parse", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "s", "type": "str"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "self", "type": "Expression"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "other", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "other_indices", "type": "None"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "applyto", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "dependencies", "type": "List[nothing]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "initialize_label", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "accum", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "VariableExpression", "type": "Type[VariableExpression]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "UnificationException", "type": "Type[UnificationException]"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "other", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "__class__", "type": "Type[ImpExpression]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "a_new", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "compile_neg", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "index_counter", "type": "Any"}, {"lineNumber": 244, "col_offset": 64, "nodeName": "glueFormulaFactory", "type": "Any"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "c", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "c_new", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "compile_pos", "type": "Any"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "index_counter", "type": "Any"}, {"lineNumber": 245, "col_offset": 64, "nodeName": "glueFormulaFactory", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "a_new", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "compile_pos", "type": "Any"}, {"lineNumber": 256, "col_offset": 49, "nodeName": "index_counter", "type": "Any"}, {"lineNumber": 256, "col_offset": 64, "nodeName": "glueFormulaFactory", "type": "Any"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "c", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "c_new", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "compile_neg", "type": "Any"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "index_counter", "type": "Any"}, {"lineNumber": 257, "col_offset": 64, "nodeName": "glueFormulaFactory", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "fresh_index", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "glueFormulaFactory", "type": "Any"}, {"lineNumber": 260, "col_offset": 56, "nodeName": "a", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "initialize_labels", "type": "Any"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "fstruct", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "initialize_labels", "type": "Any"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "fstruct", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "BindingDict", "type": "Type[BindingDict]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "UnificationException", "type": "Type[UnificationException]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 362, "col_offset": 75, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "bindings", "type": "None"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 395, "col_offset": 26, "nodeName": "variable", "type": "nothing"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "VariableExpression", "type": "Type[VariableExpression]"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "binding", "type": "nothing"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "variable", "type": "nothing"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "binding", "type": "nothing"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "variable", "type": "nothing"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "binding", "type": "nothing"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "VariableExpression", "type": "Type[VariableExpression]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "combined", "type": "BindingDict"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "v", "type": "nothing"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "combined", "type": "BindingDict"}, {"lineNumber": 449, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "self", "type": "UnificationException"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 476, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 477, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 480, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 481, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 482, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "LogicParser", "type": "Type[nltk.sem.logic.LogicParser]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "handle_variable", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "tok", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "context", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "tok", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "argument", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "expression", "type": "ApplicationExpression"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "VariableExpression", "type": "Type[VariableExpression]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "_linear_logic_parser", "type": "LinearLogicParser"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "__name__", "type": "str"}, {"lineNumber": 89, "col_offset": 53, "nodeName": "self", "type": "Expression"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "fstruct", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "lower", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "__class__", "type": "Type[AtomicExpression]"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 66, "nodeName": "name", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "dependencies", "type": "Union[List[nothing], Any]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "other", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "self", "type": "VariableExpression"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 214, "col_offset": 73, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "c", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "a_new", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "c_new", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "index_counter", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "fresh_index", "type": "Any"}, {"lineNumber": 260, "col_offset": 59, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "__class__", "type": "Type[ImpExpression]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "IMP", "type": "str"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "function", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "argument", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "function", "type": "Any"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "argument", "type": "Any"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "unify", "type": "Any"}, {"lineNumber": 313, "col_offset": 55, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 313, "col_offset": 70, "nodeName": "bindings", "type": "BindingDict"}, {"lineNumber": 327, "col_offset": 61, "nodeName": "argument_indices", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "bindings", "type": "Union[BindingDict, Any]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "__class__", "type": "Type[ApplicationExpression]"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "argument", "type": "Any"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "argument", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 362, "col_offset": 75, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "existing", "type": "None"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "binding", "type": "Any"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "existing", "type": "None"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "VariableBindingException", "type": "Type[VariableBindingException]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 415, "col_offset": 30, "nodeName": "variable", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "intermediate", "type": "Any"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "BindingDict", "type": "Type[BindingDict]"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "other", "type": "Any"}, {"lineNumber": 445, "col_offset": 19, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 448, "col_offset": 33, "nodeName": "BindingDict", "type": "Type[BindingDict]"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "other", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "handle_open", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "tok", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "APP", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "assertNextToken", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "expression", "type": "Any"}, {"lineNumber": 64, "col_offset": 63, "nodeName": "argument", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "cls", "type": "Type[Expression]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "__class__", "type": "Type[Expression]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 144, "col_offset": 66, "nodeName": "other", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "unify", "type": "Any"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 231, "col_offset": 58, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 260, "col_offset": 64, "nodeName": "fresh_index", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "a_new", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "c_new", "type": "Any"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "new_v", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 288, "col_offset": 47, "nodeName": "IMP", "type": "str"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "function", "type": "Any"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "argument", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "LinearLogicApplicationException", "type": "Type[LinearLogicApplicationException]"}, {"lineNumber": 322, "col_offset": 64, "nodeName": "argument_indices", "type": "Any"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "LinearLogicApplicationException", "type": "Type[LinearLogicApplicationException]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "LinearLogicApplicationException", "type": "Type[LinearLogicApplicationException]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 362, "col_offset": 59, "nodeName": "argument", "type": "Any"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "variable", "type": "nothing"}, {"lineNumber": 406, "col_offset": 64, "nodeName": "variable", "type": "Any"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 420, "col_offset": 23, "nodeName": "intermediate", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "combined", "type": "BindingDict"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "combined", "type": "BindingDict"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "d", "type": "Any"}, {"lineNumber": 453, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 465, "col_offset": 71, "nodeName": "a", "type": "Any"}, {"lineNumber": 465, "col_offset": 74, "nodeName": "b", "type": "Any"}, {"lineNumber": 465, "col_offset": 77, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "Expression"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "self", "type": "AtomicExpression"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "BindingDict", "type": "Type[BindingDict]"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "BindingDict", "type": "Type[BindingDict]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "other", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 288, "col_offset": 47, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 288, "col_offset": 59, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 288, "col_offset": 64, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 362, "col_offset": 59, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 366, "col_offset": 60, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 366, "col_offset": 65, "nodeName": "consequent", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "v", "type": "Any"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "intermediate", "type": "Any"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "v", "type": "nothing"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 434, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "self", "type": "LinearLogicParser"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 288, "col_offset": 64, "nodeName": "self", "type": "ImpExpression"}, {"lineNumber": 316, "col_offset": 47, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 316, "col_offset": 62, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 316, "col_offset": 77, "nodeName": "e", "type": "UnificationException"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "antecedent", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "argument_simp", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 366, "col_offset": 65, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 453, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 453, "col_offset": 66, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "other", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "self", "type": "VariableExpression"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "other", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "function_simp", "type": "Any"}, {"lineNumber": 453, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 453, "col_offset": 66, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 453, "col_offset": 46, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 453, "col_offset": 46, "nodeName": "self", "type": "BindingDict"}, {"lineNumber": 453, "col_offset": 53, "nodeName": "v", "type": "Any"}]