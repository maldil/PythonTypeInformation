[{"lineNumber": 70, "col_offset": 0, "nodeName": "boolean_ops", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "equality_preds", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "binding_ops", "type": "Callable[[], Any]"}, {"lineNumber": 586, "col_offset": 0, "nodeName": "read_logic", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 0, "nodeName": "unique_variable", "type": "Callable[..., Any]"}, {"lineNumber": 677, "col_offset": 0, "nodeName": "skolem_function", "type": "Callable[..., Any]"}, {"lineNumber": 836, "col_offset": 0, "nodeName": "read_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 903, "col_offset": 0, "nodeName": "typecheck", "type": "Callable[..., Any]"}, {"lineNumber": 1577, "col_offset": 0, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 1956, "col_offset": 0, "nodeName": "is_indvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1968, "col_offset": 0, "nodeName": "is_funcvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1980, "col_offset": 0, "nodeName": "is_eventvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1992, "col_offset": 0, "nodeName": "demo", "type": "Callable[[], Any]"}, {"lineNumber": 2025, "col_offset": 0, "nodeName": "demo_errors", "type": "Callable[[], Any]"}, {"lineNumber": 2042, "col_offset": 0, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2049, "col_offset": 0, "nodeName": "printtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "APP", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "_counter", "type": "nltk.internals.Counter"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "parse", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "process", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "process_quoted_token", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "get_all_symbols", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "inRange", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "isvariable", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "process_next_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "handle", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "attempt_adjuncts", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "handle_negation", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "make_NegatedExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "handle_variable", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "get_next_token_variable", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "handle_lambda", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "handle_quant", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "get_QuantifiedExpression_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "make_QuanifiedExpression", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "handle_open", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "attempt_EqualityExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "make_EqualityExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "attempt_BooleanExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "get_BooleanExpression_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "make_BooleanExpression", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "attempt_ApplicationExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "make_ApplicationExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "make_VariableExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "make_LambdaExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "has_priority", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "assertNextToken", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "assertToken", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "__lt__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "substitute_bindings", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 689, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "fromstring", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 701, "col_offset": 18, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "matches", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "resolve", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "str", "type": "Callable[[Any], Any]"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "matches", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "resolve", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "BasicType", "type": "Type[BasicType]"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "str", "type": "Callable[[Any], Any]"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "BasicType", "type": "Type[BasicType]"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "str", "type": "Callable[[Any], Any]"}, {"lineNumber": 789, "col_offset": 16, "nodeName": "BasicType", "type": "Type[BasicType]"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "str", "type": "Callable[[Any], Any]"}, {"lineNumber": 797, "col_offset": 14, "nodeName": "BasicType", "type": "Type[BasicType]"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "first", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "second", "type": "Callable[[Any], Any]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "matches", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "resolve", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "str", "type": "Callable[[Any], Any]"}, {"lineNumber": 830, "col_offset": 0, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 831, "col_offset": 0, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 832, "col_offset": 0, "nodeName": "EVENT_TYPE", "type": "EventType"}, {"lineNumber": 833, "col_offset": 0, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 867, "col_offset": 20, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 872, "col_offset": 41, "nodeName": "TypeException", "type": "Type[TypeException]"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 887, "col_offset": 30, "nodeName": "TypeException", "type": "Type[TypeException]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 895, "col_offset": 27, "nodeName": "TypeException", "type": "Type[TypeException]"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 919, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "substitute_bindings", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 941, "col_offset": 17, "nodeName": "SubstituteBindingsI", "type": "Type[SubstituteBindingsI]"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "applyto", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "__neg__", "type": "Callable[[Any], Any]"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "negate", "type": "Callable[[Any], Any]"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "__and__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "__or__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "__gt__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "__lt__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "equiv", "type": "Callable[..., Any]"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "substitute_bindings", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "typecheck", "type": "Callable[..., Any]"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 1097, "col_offset": 4, "nodeName": "normalize", "type": "Callable[..., Any]"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "visit_structured", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1156, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "free", "type": "Callable[[Any], Any]"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "simplify", "type": "Callable[[Any], Any]"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "make_VariableExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1208, "col_offset": 28, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1247, "col_offset": 4, "nodeName": "simplify", "type": "Callable[[Any], Any]"}, {"lineNumber": 1255, "col_offset": 4, "nodeName": "type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1262, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1287, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1341, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "uncurry", "type": "Callable[[Any], Any]"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "pred", "type": "Callable[[Any], Any]"}, {"lineNumber": 1395, "col_offset": 4, "nodeName": "args", "type": "Callable[[Any], Any]"}, {"lineNumber": 1402, "col_offset": 4, "nodeName": "is_atom", "type": "Callable[[Any], Any]"}, {"lineNumber": 1411, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1414, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1421, "col_offset": 4, "nodeName": "simplify", "type": "Callable[[Any], Any]"}, {"lineNumber": 1424, "col_offset": 4, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1452, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1460, "col_offset": 4, "nodeName": "predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1472, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1475, "col_offset": 4, "nodeName": "__lt__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1486, "col_offset": 35, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1502, "col_offset": 4, "nodeName": "_get_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "free", "type": "Callable[[Any], Any]"}, {"lineNumber": 1511, "col_offset": 4, "nodeName": "constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 1516, "col_offset": 33, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1522, "col_offset": 4, "nodeName": "free", "type": "Callable[[Any], Any]"}, {"lineNumber": 1526, "col_offset": 4, "nodeName": "constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 1531, "col_offset": 30, "nodeName": "IndividualVariableExpression", "type": "Type[IndividualVariableExpression]"}, {"lineNumber": 1538, "col_offset": 25, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1568, "col_offset": 4, "nodeName": "free", "type": "Callable[[Any], Any]"}, {"lineNumber": 1572, "col_offset": 4, "nodeName": "constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 1593, "col_offset": 31, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1597, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 1637, "col_offset": 4, "nodeName": "alpha_convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1647, "col_offset": 4, "nodeName": "free", "type": "Callable[[Any], Any]"}, {"lineNumber": 1651, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "visit_structured", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1667, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1680, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1686, "col_offset": 23, "nodeName": "VariableBinderExpression", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1687, "col_offset": 4, "nodeName": "type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1691, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1702, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1716, "col_offset": 27, "nodeName": "VariableBinderExpression", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1717, "col_offset": 4, "nodeName": "type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1732, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1747, "col_offset": 23, "nodeName": "QuantifiedExpression", "type": "Type[QuantifiedExpression]"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "getQuantifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 1752, "col_offset": 20, "nodeName": "QuantifiedExpression", "type": "Type[QuantifiedExpression]"}, {"lineNumber": 1753, "col_offset": 4, "nodeName": "getQuantifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 1757, "col_offset": 24, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1758, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1762, "col_offset": 4, "nodeName": "type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1766, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1777, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1785, "col_offset": 4, "nodeName": "negate", "type": "Callable[[Any], Any]"}, {"lineNumber": 1789, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1792, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1801, "col_offset": 23, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1802, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1812, "col_offset": 4, "nodeName": "findtype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1824, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1828, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1835, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1840, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1845, "col_offset": 4, "nodeName": "_str_subex", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1849, "col_offset": 24, "nodeName": "BinaryExpression", "type": "Type[BinaryExpression]"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1863, "col_offset": 20, "nodeName": "BooleanExpression", "type": "Type[BooleanExpression]"}, {"lineNumber": 1866, "col_offset": 4, "nodeName": "getOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1869, "col_offset": 4, "nodeName": "_str_subex", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1876, "col_offset": 19, "nodeName": "BooleanExpression", "type": "Type[BooleanExpression]"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "getOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "_str_subex", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1889, "col_offset": 20, "nodeName": "BooleanExpression", "type": "Type[BooleanExpression]"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "getOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1896, "col_offset": 20, "nodeName": "BooleanExpression", "type": "Type[BooleanExpression]"}, {"lineNumber": 1899, "col_offset": 4, "nodeName": "getOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1903, "col_offset": 25, "nodeName": "BinaryExpression", "type": "Type[BinaryExpression]"}, {"lineNumber": 1906, "col_offset": 4, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1918, "col_offset": 4, "nodeName": "getOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1925, "col_offset": 33, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 1926, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1931, "col_offset": 31, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 1932, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1947, "col_offset": 34, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 1948, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "Counter", "type": "Type[nltk.internals.Counter]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "LAMBDA", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "LAMBDA_LIST", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "EXISTS", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "EXISTS_LIST", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "ALL", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "ALL_LIST", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "DOT", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "COMMA", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "NOT", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "NOT_LIST", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "AND", "type": "str"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "AND_LIST", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "OR", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "OR_LIST", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "IMP", "type": "str"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "IMP_LIST", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "IFF", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "IFF_LIST", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "EQ", "type": "str"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "EQ_LIST", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "NEQ", "type": "str"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "NEQ_LIST", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "BINOPS", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "QUANTS", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "PUNCT", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "TOKENS", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "SYMBOLS", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "v", "type": "Variable"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "v", "type": "Variable"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "skolem", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 683, "col_offset": 7, "nodeName": "univ_scope", "type": "Any"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "skolem", "type": "Any"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 718, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 761, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 830, "col_offset": 13, "nodeName": "TruthValueType", "type": "Type[TruthValueType]"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "EntityType", "type": "Type[EntityType]"}, {"lineNumber": 832, "col_offset": 13, "nodeName": "EventType", "type": "Type[EventType]"}, {"lineNumber": 833, "col_offset": 11, "nodeName": "AnyType", "type": "Type[AnyType]"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 911, "col_offset": 8, "nodeName": "expression", "type": "Any"}, {"lineNumber": 911, "col_offset": 22, "nodeName": "expressions", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "expression", "type": "Any"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "_logic_parser", "type": "LogicParser"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "_type_checking_logic_parser", "type": "LogicParser"}, {"lineNumber": 1344, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1344, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1480, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1480, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1505, "col_offset": 4, "nodeName": "type", "type": "property"}, {"lineNumber": 1520, "col_offset": 4, "nodeName": "type", "type": "AnyType"}, {"lineNumber": 1520, "col_offset": 11, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1535, "col_offset": 4, "nodeName": "type", "type": "EventType"}, {"lineNumber": 1535, "col_offset": 11, "nodeName": "EVENT_TYPE", "type": "EventType"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "type", "type": "EntityType"}, {"lineNumber": 1542, "col_offset": 11, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1683, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1795, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1795, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1838, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1838, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 1993, "col_offset": 4, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 1993, "col_offset": 12, "nodeName": "fromstring", "type": "Callable[..., Any]"}, {"lineNumber": 2018, "col_offset": 4, "nodeName": "e1", "type": "Any"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "e2", "type": "Any"}, {"lineNumber": 2053, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "IFF_LIST", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "EXISTS_LIST", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "ALL_LIST", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "DOT", "type": "str"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "COMMA", "type": "str"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "NOT_LIST", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_buffer", "type": "List[nothing]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "type_check", "type": "bool"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "type_check", "type": "bool"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "quote_chars", "type": "List[nothing]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "right_associated_operations", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "type_check", "type": "bool"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "tokenTrie", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "token", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "token_start_idx", "type": "int"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "token", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "quote_chars", "type": "List[nothing]"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "SYMBOLS", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "cur_idx", "type": "None"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "factory", "type": "Optional[Union[Type[ExistsExpression], Type[AllExpression]]]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "accum", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "expression", "type": "Union[NegatedExpression, EqualityExpression, Any]"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "expression", "type": "Any"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "expression", "type": "Any"}, {"lineNumber": 599, "col_offset": 7, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 601, "col_offset": 7, "nodeName": "logic_parser", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "logic_parser", "type": "LogicParser"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "linenum", "type": "int"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "line", "type": "Any"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 623, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 659, "col_offset": 7, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "v", "type": "Variable"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "first", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 706, "col_offset": 22, "nodeName": "second", "type": "Any"}, {"lineNumber": 718, "col_offset": 15, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 761, "col_offset": 15, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 803, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "other", "type": "Any"}, {"lineNumber": 837, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 837, "col_offset": 22, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 837, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 838, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "paren_count", "type": "int"}, {"lineNumber": 874, "col_offset": 11, "nodeName": "expression", "type": "None"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "signature", "type": "Any"}, {"lineNumber": 914, "col_offset": 22, "nodeName": "expressions", "type": "Any"}, {"lineNumber": 944, "col_offset": 20, "nodeName": "LogicParser", "type": "Type[LogicParser]"}, {"lineNumber": 945, "col_offset": 34, "nodeName": "LogicParser", "type": "Type[LogicParser]"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "type_check", "type": "bool"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 956, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 956, "col_offset": 17, "nodeName": "additional", "type": "Tuple[Any, ...]"}, {"lineNumber": 958, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "bicond", "type": "IffExpression"}, {"lineNumber": 1020, "col_offset": 8, "nodeName": "expr", "type": "Expression"}, {"lineNumber": 1020, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1045, "col_offset": 8, "nodeName": "sig", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1046, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1069, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "result", "type": "Expression"}, {"lineNumber": 1110, "col_offset": 17, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 1244, "col_offset": 24, "nodeName": "function", "type": "Any"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1245, "col_offset": 24, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1262, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1297, "col_offset": 8, "nodeName": "found", "type": "List[Any]"}, {"lineNumber": 1299, "col_offset": 8, "nodeName": "unique", "type": "List[Any]"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 1300, "col_offset": 17, "nodeName": "found", "type": "List[Any]"}, {"lineNumber": 1344, "col_offset": 15, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1356, "col_offset": 8, "nodeName": "function_str", "type": "Any"}, {"lineNumber": 1357, "col_offset": 8, "nodeName": "parenthesize_function", "type": "bool"}, {"lineNumber": 1367, "col_offset": 11, "nodeName": "parenthesize_function", "type": "bool"}, {"lineNumber": 1378, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 1378, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1419, "col_offset": 8, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1419, "col_offset": 24, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1422, "col_offset": 15, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1435, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1442, "col_offset": 8, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1442, "col_offset": 21, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1443, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1449, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1480, "col_offset": 15, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1490, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1503, "col_offset": 15, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1505, "col_offset": 11, "nodeName": "property", "type": "Type[property]"}, {"lineNumber": 1505, "col_offset": 20, "nodeName": "_get_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1505, "col_offset": 31, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1544, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1559, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1565, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1582, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1582, "col_offset": 22, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1582, "col_offset": 32, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1582, "col_offset": 68, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1583, "col_offset": 7, "nodeName": "is_indvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1583, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 1604, "col_offset": 8, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1604, "col_offset": 24, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1605, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1605, "col_offset": 20, "nodeName": "term", "type": "Any"}, {"lineNumber": 1683, "col_offset": 15, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1691, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1703, "col_offset": 8, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 1704, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1704, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 1719, "col_offset": 15, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1721, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1733, "col_offset": 8, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 1734, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1734, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 1749, "col_offset": 15, "nodeName": "EXISTS", "type": "str"}, {"lineNumber": 1754, "col_offset": 15, "nodeName": "ALL", "type": "str"}, {"lineNumber": 1760, "col_offset": 8, "nodeName": "term", "type": "Expression"}, {"lineNumber": 1760, "col_offset": 20, "nodeName": "term", "type": "Expression"}, {"lineNumber": 1764, "col_offset": 15, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1766, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1787, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 1795, "col_offset": 15, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1805, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 1805, "col_offset": 21, "nodeName": "first", "type": "Any"}, {"lineNumber": 1806, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 1806, "col_offset": 22, "nodeName": "second", "type": "Any"}, {"lineNumber": 1810, "col_offset": 15, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1815, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 1816, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 1838, "col_offset": 15, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1841, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 1842, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 1850, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1867, "col_offset": 15, "nodeName": "AND", "type": "str"}, {"lineNumber": 1870, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 1873, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 1880, "col_offset": 15, "nodeName": "OR", "type": "str"}, {"lineNumber": 1883, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 1886, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 1893, "col_offset": 15, "nodeName": "IMP", "type": "str"}, {"lineNumber": 1900, "col_offset": 15, "nodeName": "IFF", "type": "str"}, {"lineNumber": 1906, "col_offset": 35, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1919, "col_offset": 15, "nodeName": "EQ", "type": "str"}, {"lineNumber": 1927, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 1927, "col_offset": 21, "nodeName": "index", "type": "Any"}, {"lineNumber": 1964, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1964, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1964, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1964, "col_offset": 57, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1976, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1976, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1976, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1976, "col_offset": 57, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1988, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1988, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1988, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1988, "col_offset": 57, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1993, "col_offset": 12, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 2018, "col_offset": 9, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2019, "col_offset": 10, "nodeName": "e1", "type": "Any"}, {"lineNumber": 2020, "col_offset": 9, "nodeName": "alpha_convert", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "e2", "type": "Any"}, {"lineNumber": 2027, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2028, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2029, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2030, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2031, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2032, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2035, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2038, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "demoException", "type": "Callable[[Any], Any]"}, {"lineNumber": 2045, "col_offset": 11, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 2054, "col_offset": 4, "nodeName": "demo", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "IMP_LIST", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 66, "nodeName": "PUNCT", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "TOKENS", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "NOT", "type": "str"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "AND", "type": "str"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "OR", "type": "str"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "IMP", "type": "str"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "IFF", "type": "str"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "EQ", "type": "str"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "NEQ", "type": "str"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "EXISTS", "type": "str"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "ALL", "type": "str"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "LAMBDA", "type": "str"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "type_check", "type": "bool"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "APP", "type": "str"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_buffer", "type": "List[Union[str, Any]]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "process", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "data", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "Trie", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "cur_data_idx", "type": "int"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "quoted_token", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "tokenTrie", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "c", "type": "str"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "symbol", "type": "str"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "token_start_idx", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "data", "type": "str"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "start", "type": "nothing"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "end", "type": "nothing"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "escape", "type": "nothing"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "incl_quotes", "type": "nothing"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "tok", "type": "Union[str, Any]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "tok", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "TOKENS", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "tok", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "handle", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "tok", "type": "Any"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "context", "type": "None"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "accum", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "attempt_adjuncts", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "accum", "type": "Any"}, {"lineNumber": 294, "col_offset": 44, "nodeName": "context", "type": "None"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "isvariable", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "cur_idx", "type": "None"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "cur_idx", "type": "int"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "expression", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "expression", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "expression", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "make_NegatedExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "NegatedExpression", "type": "Type[NegatedExpression]"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "expression", "type": "EqualityExpression"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "make_VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "tok", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 45, "nodeName": "tok", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "accum", "type": "LambdaExpression"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "get_QuantifiedExpression_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 56, "nodeName": "tok", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 45, "nodeName": "tok", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "accum", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "tok", "type": "Any"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "EXISTS_LIST", "type": "List[str]"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "ExistsExpression", "type": "Type[ExistsExpression]"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "factory", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "variable", "type": "Variable"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "term", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assertNextToken", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "EqualityExpression", "type": "Type[EqualityExpression]"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "first", "type": "Any"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "second", "type": "Any"}, {"lineNumber": 474, "col_offset": 14, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "factory", "type": "Optional[Union[Type[AndExpression], Type[OrExpression], Type[ImpExpression], Type[IffExpression]]]"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "AND_LIST", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "AndExpression", "type": "Type[AndExpression]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "factory", "type": "Any"}, {"lineNumber": 501, "col_offset": 23, "nodeName": "first", "type": "Any"}, {"lineNumber": 501, "col_offset": 30, "nodeName": "second", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "has_priority", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "APP", "type": "str"}, {"lineNumber": 508, "col_offset": 34, "nodeName": "context", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 539, "col_offset": 37, "nodeName": "function", "type": "Any"}, {"lineNumber": 539, "col_offset": 47, "nodeName": "argument", "type": "Any"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "LambdaExpression", "type": "Type[LambdaExpression]"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "variable", "type": "Variable"}, {"lineNumber": 545, "col_offset": 42, "nodeName": "term", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 571, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 571, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "decode", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "LogicParser", "type": "Type[LogicParser]"}, {"lineNumber": 605, "col_offset": 35, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 622, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 622, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 622, "col_offset": 61, "nodeName": "name", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "Variable"}, {"lineNumber": 633, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 634, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 637, "col_offset": 28, "nodeName": "self", "type": "Variable"}, {"lineNumber": 637, "col_offset": 34, "nodeName": "self", "type": "Variable"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "self", "type": "Variable"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "is_indvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 672, "col_offset": 10, "nodeName": "ignore", "type": "None"}, {"lineNumber": 672, "col_offset": 33, "nodeName": "v", "type": "Variable"}, {"lineNumber": 672, "col_offset": 38, "nodeName": "ignore", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 682, "col_offset": 32, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 684, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "univ_scope", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "skolem", "type": "Any"}, {"lineNumber": 691, "col_offset": 22, "nodeName": "self", "type": "Type"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "read_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 703, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 703, "col_offset": 26, "nodeName": "first", "type": "Any"}, {"lineNumber": 703, "col_offset": 33, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 703, "col_offset": 61, "nodeName": "first", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "second", "type": "Any"}, {"lineNumber": 704, "col_offset": 34, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 704, "col_offset": 62, "nodeName": "second", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 721, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 721, "col_offset": 29, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "other", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 748, "col_offset": 11, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 767, "col_offset": 11, "nodeName": "matches", "type": "Callable[[Any], Any]"}, {"lineNumber": 767, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 768, "col_offset": 19, "nodeName": "self", "type": "BasicType"}, {"lineNumber": 838, "col_offset": 18, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 840, "col_offset": 7, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "char", "type": "Any"}, {"lineNumber": 843, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 843, "col_offset": 33, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 852, "col_offset": 15, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 856, "col_offset": 15, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 869, "col_offset": 44, "nodeName": "msg", "type": "str"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 880, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 884, "col_offset": 65, "nodeName": "msg", "type": "str"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 912, "col_offset": 20, "nodeName": "typecheck", "type": "Any"}, {"lineNumber": 912, "col_offset": 41, "nodeName": "signature", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "typecheck", "type": "Any"}, {"lineNumber": 915, "col_offset": 29, "nodeName": "signature", "type": "Any"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 938, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "applyto", "type": "Callable[[Any], Any]"}, {"lineNumber": 955, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "accum", "type": "Any"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 961, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 961, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 961, "col_offset": 74, "nodeName": "other", "type": "Any"}, {"lineNumber": 962, "col_offset": 15, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 962, "col_offset": 37, "nodeName": "self", "type": "Expression"}, {"lineNumber": 962, "col_offset": 43, "nodeName": "other", "type": "Any"}, {"lineNumber": 965, "col_offset": 15, "nodeName": "NegatedExpression", "type": "Type[NegatedExpression]"}, {"lineNumber": 965, "col_offset": 33, "nodeName": "self", "type": "Expression"}, {"lineNumber": 970, "col_offset": 16, "nodeName": "self", "type": "Expression"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "AndExpression", "type": "Type[AndExpression]"}, {"lineNumber": 975, "col_offset": 29, "nodeName": "self", "type": "Expression"}, {"lineNumber": 975, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 980, "col_offset": 15, "nodeName": "OrExpression", "type": "Type[OrExpression]"}, {"lineNumber": 980, "col_offset": 28, "nodeName": "self", "type": "Expression"}, {"lineNumber": 980, "col_offset": 34, "nodeName": "other", "type": "Any"}, {"lineNumber": 985, "col_offset": 15, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 985, "col_offset": 29, "nodeName": "self", "type": "Expression"}, {"lineNumber": 985, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 990, "col_offset": 15, "nodeName": "IffExpression", "type": "Type[IffExpression]"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "self", "type": "Expression"}, {"lineNumber": 990, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 993, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1007, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1007, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 1007, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1007, "col_offset": 74, "nodeName": "other", "type": "Any"}, {"lineNumber": 1009, "col_offset": 11, "nodeName": "prover", "type": "Any"}, {"lineNumber": 1012, "col_offset": 12, "nodeName": "prover", "type": "Any"}, {"lineNumber": 1013, "col_offset": 17, "nodeName": "IffExpression", "type": "Type[IffExpression]"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "prove", "type": "Any"}, {"lineNumber": 1014, "col_offset": 28, "nodeName": "bicond", "type": "IffExpression"}, {"lineNumber": 1017, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 1021, "col_offset": 19, "nodeName": "variables", "type": "Callable[[], Any]"}, {"lineNumber": 1045, "col_offset": 14, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1045, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1047, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 1047, "col_offset": 23, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "_set_type", "type": "Callable[..., Any]"}, {"lineNumber": 1067, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1077, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1087, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1087, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1087, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1087, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1088, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1088, "col_offset": 26, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1088, "col_offset": 38, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1089, "col_offset": 40, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1092, "col_offset": 15, "nodeName": "visit_structured", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1094, "col_offset": 12, "nodeName": "__class__", "type": "Type[Expression]"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1136, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1151, "col_offset": 26, "nodeName": "function", "type": "Callable[[Any], Any]"}, {"lineNumber": 1157, "col_offset": 15, "nodeName": "str", "type": "Any"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1202, "col_offset": 15, "nodeName": "visit_structured", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1202, "col_offset": 61, "nodeName": "__class__", "type": "Type[Expression]"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 1205, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1242, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1242, "col_offset": 26, "nodeName": "function", "type": "Any"}, {"lineNumber": 1242, "col_offset": 36, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1242, "col_offset": 77, "nodeName": "function", "type": "Any"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1243, "col_offset": 26, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1243, "col_offset": 36, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1243, "col_offset": 77, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 1249, "col_offset": 19, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 1250, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1250, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 1250, "col_offset": 32, "nodeName": "LambdaExpression", "type": "Type[LambdaExpression]"}, {"lineNumber": 1257, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1257, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 1257, "col_offset": 42, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "second", "type": "Any"}, {"lineNumber": 1260, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1264, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1264, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1264, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1266, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1267, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1269, "col_offset": 32, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1269, "col_offset": 42, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "TypeResolutionException", "type": "Type[TypeResolutionException]"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1289, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1289, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1289, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1290, "col_offset": 11, "nodeName": "is_atom", "type": "Callable[[], Any]"}, {"lineNumber": 1294, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1294, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 1295, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1312, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1316, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1316, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 1316, "col_offset": 37, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1317, "col_offset": 12, "nodeName": "function_constants", "type": "Set[nothing]"}, {"lineNumber": 1319, "col_offset": 12, "nodeName": "function_constants", "type": "Any"}, {"lineNumber": 1320, "col_offset": 15, "nodeName": "function_constants", "type": "Union[Any, Set[nothing]]"}, {"lineNumber": 1324, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1324, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 1324, "col_offset": 37, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 1325, "col_offset": 12, "nodeName": "function_preds", "type": "Set[Any]"}, {"lineNumber": 1327, "col_offset": 12, "nodeName": "function_preds", "type": "Any"}, {"lineNumber": 1328, "col_offset": 15, "nodeName": "function_preds", "type": "Union[Any, Set[Any]]"}, {"lineNumber": 1332, "col_offset": 15, "nodeName": "combinator", "type": "Any"}, {"lineNumber": 1348, "col_offset": 11, "nodeName": "is_atom", "type": "Callable[[], Any]"}, {"lineNumber": 1350, "col_offset": 12, "nodeName": "arg_str", "type": "str"}, {"lineNumber": 1353, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1353, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 1354, "col_offset": 12, "nodeName": "arg_str", "type": "Any"}, {"lineNumber": 1356, "col_offset": 30, "nodeName": "function", "type": "Any"}, {"lineNumber": 1358, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1358, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 1358, "col_offset": 32, "nodeName": "LambdaExpression", "type": "Type[LambdaExpression]"}, {"lineNumber": 1368, "col_offset": 12, "nodeName": "function_str", "type": "Any"}, {"lineNumber": 1370, "col_offset": 54, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 1378, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1379, "col_offset": 16, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1380, "col_offset": 14, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1380, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 1380, "col_offset": 35, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 1383, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1383, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 1384, "col_offset": 26, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1407, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1407, "col_offset": 26, "nodeName": "pred", "type": "Any"}, {"lineNumber": 1407, "col_offset": 37, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1418, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1418, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1418, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1418, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1419, "col_offset": 8, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1426, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1426, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1426, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1426, "col_offset": 73, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1427, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1427, "col_offset": 26, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1427, "col_offset": 38, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1428, "col_offset": 40, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1430, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1430, "col_offset": 28, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1433, "col_offset": 19, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1437, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1437, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1437, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1439, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1440, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1443, "col_offset": 21, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1444, "col_offset": 12, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 1448, "col_offset": 45, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1449, "col_offset": 21, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1450, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 1450, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1454, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1454, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1454, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1454, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1455, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1455, "col_offset": 28, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1456, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 1458, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1462, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1477, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1478, "col_offset": 15, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1483, "col_offset": 22, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1492, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1492, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1492, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1494, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1495, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 1500, "col_offset": 45, "nodeName": "self", "type": "IndividualVariableExpression"}, {"lineNumber": 1509, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1513, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1524, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1528, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1546, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1546, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1546, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1548, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1549, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1551, "col_offset": 11, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1551, "col_offset": 25, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1553, "col_offset": 12, "nodeName": "resolution", "type": "EntityType"}, {"lineNumber": 1553, "col_offset": 25, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1555, "col_offset": 12, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1555, "col_offset": 25, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1559, "col_offset": 21, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1560, "col_offset": 12, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1564, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 1564, "col_offset": 45, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1566, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 1566, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1570, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1574, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1583, "col_offset": 17, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1584, "col_offset": 15, "nodeName": "IndividualVariableExpression", "type": "Type[IndividualVariableExpression]"}, {"lineNumber": 1584, "col_offset": 44, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1585, "col_offset": 9, "nodeName": "is_funcvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1585, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1602, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1602, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1602, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1603, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1603, "col_offset": 26, "nodeName": "term", "type": "Any"}, {"lineNumber": 1603, "col_offset": 32, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1603, "col_offset": 73, "nodeName": "term", "type": "Any"}, {"lineNumber": 1604, "col_offset": 8, "nodeName": "self", "type": "AllExpression"}, {"lineNumber": 1605, "col_offset": 8, "nodeName": "self", "type": "AllExpression"}, {"lineNumber": 1609, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1609, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1609, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1609, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1610, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1610, "col_offset": 26, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1610, "col_offset": 38, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1611, "col_offset": 40, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1614, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1614, "col_offset": 28, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1615, "col_offset": 15, "nodeName": "replace_bound", "type": "Any"}, {"lineNumber": 1642, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1642, "col_offset": 26, "nodeName": "newvar", "type": "Any"}, {"lineNumber": 1642, "col_offset": 34, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1642, "col_offset": 70, "nodeName": "newvar", "type": "Any"}, {"lineNumber": 1643, "col_offset": 15, "nodeName": "__class__", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1644, "col_offset": 12, "nodeName": "newvar", "type": "Any"}, {"lineNumber": 1653, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1653, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1653, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1653, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1654, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1654, "col_offset": 23, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1655, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1661, "col_offset": 15, "nodeName": "combinator", "type": "Any"}, {"lineNumber": 1665, "col_offset": 15, "nodeName": "combinator", "type": "Any"}, {"lineNumber": 1665, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1689, "col_offset": 15, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 1689, "col_offset": 62, "nodeName": "type", "type": "Any"}, {"lineNumber": 1693, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1693, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1693, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1695, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1696, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1698, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 1698, "col_offset": 47, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1704, "col_offset": 15, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1705, "col_offset": 14, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1705, "col_offset": 32, "nodeName": "__class__", "type": "Type[LambdaExpression]"}, {"lineNumber": 1707, "col_offset": 12, "nodeName": "term", "type": "Any"}, {"lineNumber": 1707, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1723, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1723, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1723, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1725, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1726, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1730, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1730, "col_offset": 28, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1730, "col_offset": 40, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1733, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1734, "col_offset": 15, "nodeName": "self", "type": "QuantifiedExpression"}, {"lineNumber": 1735, "col_offset": 14, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1735, "col_offset": 32, "nodeName": "__class__", "type": "Type[QuantifiedExpression]"}, {"lineNumber": 1737, "col_offset": 12, "nodeName": "term", "type": "Any"}, {"lineNumber": 1737, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1749, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1754, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1759, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1759, "col_offset": 26, "nodeName": "term", "type": "Expression"}, {"lineNumber": 1759, "col_offset": 32, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1759, "col_offset": 73, "nodeName": "term", "type": "EqualityExpression"}, {"lineNumber": 1760, "col_offset": 8, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1768, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1768, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1768, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1770, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1771, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1775, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1775, "col_offset": 28, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1775, "col_offset": 40, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1778, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1778, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1778, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1778, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1779, "col_offset": 15, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1779, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1783, "col_offset": 15, "nodeName": "combinator", "type": "Any"}, {"lineNumber": 1787, "col_offset": 15, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "NOT", "type": "str"}, {"lineNumber": 1803, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1803, "col_offset": 26, "nodeName": "first", "type": "Any"}, {"lineNumber": 1803, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1803, "col_offset": 74, "nodeName": "first", "type": "Any"}, {"lineNumber": 1804, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1804, "col_offset": 26, "nodeName": "second", "type": "Any"}, {"lineNumber": 1804, "col_offset": 34, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 1804, "col_offset": 75, "nodeName": "second", "type": "Any"}, {"lineNumber": 1805, "col_offset": 8, "nodeName": "self", "type": "AndExpression"}, {"lineNumber": 1806, "col_offset": 8, "nodeName": "self", "type": "AndExpression"}, {"lineNumber": 1814, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1814, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1814, "col_offset": 36, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1814, "col_offset": 72, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1815, "col_offset": 12, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1815, "col_offset": 32, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1816, "col_offset": 12, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1816, "col_offset": 33, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1818, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 1826, "col_offset": 15, "nodeName": "combinator", "type": "Any"}, {"lineNumber": 1841, "col_offset": 16, "nodeName": "_str_subex", "type": "Callable[[Any], Any]"}, {"lineNumber": 1841, "col_offset": 32, "nodeName": "first", "type": "Any"}, {"lineNumber": 1842, "col_offset": 17, "nodeName": "_str_subex", "type": "Callable[[Any], Any]"}, {"lineNumber": 1842, "col_offset": 33, "nodeName": "second", "type": "Any"}, {"lineNumber": 1843, "col_offset": 73, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 1846, "col_offset": 22, "nodeName": "subex", "type": "Any"}, {"lineNumber": 1852, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1852, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1852, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1854, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1855, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1859, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1859, "col_offset": 29, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1859, "col_offset": 41, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1860, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1860, "col_offset": 30, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1860, "col_offset": 42, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1867, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1870, "col_offset": 19, "nodeName": "subex", "type": "Any"}, {"lineNumber": 1871, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1871, "col_offset": 22, "nodeName": "subex", "type": "Any"}, {"lineNumber": 1871, "col_offset": 29, "nodeName": "AndExpression", "type": "Type[AndExpression]"}, {"lineNumber": 1880, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1883, "col_offset": 19, "nodeName": "subex", "type": "Any"}, {"lineNumber": 1884, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1884, "col_offset": 22, "nodeName": "subex", "type": "Any"}, {"lineNumber": 1884, "col_offset": 29, "nodeName": "OrExpression", "type": "Type[OrExpression]"}, {"lineNumber": 1893, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1900, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1908, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1908, "col_offset": 26, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1908, "col_offset": 38, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1910, "col_offset": 11, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1911, "col_offset": 12, "nodeName": "signature", "type": "collections.defaultdict[nothing, List[Any]]"}, {"lineNumber": 1915, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1915, "col_offset": 29, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1915, "col_offset": 42, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1916, "col_offset": 8, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1916, "col_offset": 30, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1916, "col_offset": 43, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1919, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1927, "col_offset": 8, "nodeName": "self", "type": "ExpectedMoreTokensException"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 1928, "col_offset": 27, "nodeName": "self", "type": "ExpectedMoreTokensException"}, {"lineNumber": 1928, "col_offset": 33, "nodeName": "message", "type": "Union[str, Any]"}, {"lineNumber": 1933, "col_offset": 11, "nodeName": "unexpected", "type": "Any"}, {"lineNumber": 1933, "col_offset": 26, "nodeName": "expected", "type": "None"}, {"lineNumber": 1934, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 1938, "col_offset": 13, "nodeName": "unexpected", "type": "Any"}, {"lineNumber": 1944, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1944, "col_offset": 44, "nodeName": "self", "type": "UnexpectedTokenException"}, {"lineNumber": 1944, "col_offset": 50, "nodeName": "index", "type": "int"}, {"lineNumber": 1944, "col_offset": 57, "nodeName": "msg", "type": "Union[str, Any]"}, {"lineNumber": 1949, "col_offset": 15, "nodeName": "message", "type": "Any"}, {"lineNumber": 1950, "col_offset": 12, "nodeName": "message", "type": "str"}, {"lineNumber": 1951, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1952, "col_offset": 12, "nodeName": "self", "type": "ExpectedMoreTokensException"}, {"lineNumber": 1952, "col_offset": 18, "nodeName": "index", "type": "Any"}, {"lineNumber": 1965, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 1965, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1977, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 1977, "col_offset": 35, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1989, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 1989, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 1995, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 1996, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 1997, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 1998, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 1999, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2000, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2001, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2002, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2003, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2004, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2005, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2006, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2007, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2008, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2009, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 2013, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 2014, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 2015, "col_offset": 10, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 2020, "col_offset": 9, "nodeName": "e1", "type": "Any"}, {"lineNumber": 2020, "col_offset": 26, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 2022, "col_offset": 10, "nodeName": "e1", "type": "Any"}, {"lineNumber": 2022, "col_offset": 16, "nodeName": "e2", "type": "Any"}, {"lineNumber": 2044, "col_offset": 8, "nodeName": "fromstring", "type": "Callable[..., Any]"}, {"lineNumber": 2044, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "AND_LIST", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "OR_LIST", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "LAMBDA_LIST", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "match", "type": "Callable"}, {"lineNumber": 67, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "pair", "type": "Tuple[str, str]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "data", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "typecheck", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "signature", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "get_all_symbols", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "data", "type": "str"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "quoted_token", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "process_quoted_token", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 63, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 173, "col_offset": 73, "nodeName": "data", "type": "str"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "quoted_token", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "data", "type": "str"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "c", "type": "str"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "st", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "symbol", "type": "str"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "c", "type": "str"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "st", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "LEAF", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "st", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "data", "type": "str"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "data_idx", "type": "int"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "start", "type": "nothing"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "incl_quotes", "type": "nothing"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "incl_quotes", "type": "nothing"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "location", "type": "int"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "_buffer", "type": "List[Union[str, Any]]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "location", "type": "int"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "tok", "type": "Union[str, Any]"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 291, "col_offset": 36, "nodeName": "tok", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "handle_variable", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 300, "col_offset": 45, "nodeName": "context", "type": "str"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "NOT_LIST", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "attempt_EqualityExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "expression", "type": "Any"}, {"lineNumber": 318, "col_offset": 69, "nodeName": "context", "type": "str"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "attempt_ApplicationExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 60, "nodeName": "expression", "type": "Any"}, {"lineNumber": 319, "col_offset": 72, "nodeName": "context", "type": "str"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "attempt_BooleanExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 56, "nodeName": "expression", "type": "Any"}, {"lineNumber": 320, "col_offset": 68, "nodeName": "context", "type": "str"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 324, "col_offset": 43, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 72, "nodeName": "NOT", "type": "str"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 48, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "make_ApplicationExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "accum", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "assertNextToken", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "make_VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 51, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "get_next_token_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 48, "nodeName": "DOT", "type": "str"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "make_LambdaExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 59, "nodeName": "accum", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "get_next_token_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "DOT", "type": "str"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "make_QuanifiedExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 50, "nodeName": "factory", "type": "Any"}, {"lineNumber": 426, "col_offset": 71, "nodeName": "accum", "type": "Any"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 434, "col_offset": 13, "nodeName": "tok", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "ALL_LIST", "type": "List[str]"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "AllExpression", "type": "Type[AllExpression]"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "expression", "type": "EqualityExpression"}, {"lineNumber": 474, "col_offset": 14, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "get_BooleanExpression_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 476, "col_offset": 57, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "factory", "type": "Optional[Union[Type[AndExpression], Type[OrExpression], Type[ImpExpression], Type[IffExpression]]]"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "expression", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 491, "col_offset": 20, "nodeName": "OR_LIST", "type": "List[str]"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "OrExpression", "type": "Type[OrExpression]"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 535, "col_offset": 23, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 542, "col_offset": 34, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 542, "col_offset": 43, "nodeName": "name", "type": "nothing"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 564, "col_offset": 26, "nodeName": "expected", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 572, "col_offset": 15, "nodeName": "tok", "type": "Any"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "expected", "type": "Any"}, {"lineNumber": 575, "col_offset": 15, "nodeName": "tok", "type": "Any"}, {"lineNumber": 575, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 583, "col_offset": 54, "nodeName": "msg", "type": "Union[str, Any]"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 605, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 607, "col_offset": 35, "nodeName": "line", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 626, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 626, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 626, "col_offset": 60, "nodeName": "name", "type": "Any"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "self", "type": "Variable"}, {"lineNumber": 629, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 632, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 632, "col_offset": 33, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "self", "type": "Variable"}, {"lineNumber": 634, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "bindings", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "self", "type": "Variable"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "self", "type": "Variable"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 662, "col_offset": 13, "nodeName": "is_funcvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 662, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 671, "col_offset": 27, "nodeName": "prefix", "type": "str"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "skolem", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 694, "col_offset": 27, "nodeName": "self", "type": "AnyType"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 710, "col_offset": 30, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 711, "col_offset": 16, "nodeName": "first", "type": "Any"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "first", "type": "Any"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "second", "type": "Any"}, {"lineNumber": 712, "col_offset": 31, "nodeName": "second", "type": "Any"}, {"lineNumber": 716, "col_offset": 19, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 724, "col_offset": 19, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 724, "col_offset": 27, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 729, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 729, "col_offset": 31, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 743, "col_offset": 26, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 749, "col_offset": 19, "nodeName": "str", "type": "Callable[[], Any]"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 756, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 756, "col_offset": 33, "nodeName": "BasicType", "type": "Type[BasicType]"}, {"lineNumber": 759, "col_offset": 19, "nodeName": "self", "type": "BasicType"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "other", "type": "Any"}, {"lineNumber": 764, "col_offset": 24, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 764, "col_offset": 36, "nodeName": "self", "type": "BasicType"}, {"lineNumber": 764, "col_offset": 44, "nodeName": "other", "type": "Any"}, {"lineNumber": 767, "col_offset": 11, "nodeName": "self", "type": "BasicType"}, {"lineNumber": 810, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 810, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 810, "col_offset": 33, "nodeName": "AnyType", "type": "Type[AnyType]"}, {"lineNumber": 810, "col_offset": 45, "nodeName": "__eq__", "type": "Any"}, {"lineNumber": 810, "col_offset": 58, "nodeName": "self", "type": "AnyType"}, {"lineNumber": 813, "col_offset": 19, "nodeName": "self", "type": "AnyType"}, {"lineNumber": 813, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 841, "col_offset": 15, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 844, "col_offset": 15, "nodeName": "char", "type": "Any"}, {"lineNumber": 845, "col_offset": 16, "nodeName": "paren_count", "type": "int"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "read_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 853, "col_offset": 41, "nodeName": "read_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 855, "col_offset": 9, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 855, "col_offset": 34, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 858, "col_offset": 15, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "variable", "type": "AbstractVariableExpression"}, {"lineNumber": 912, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "expression", "type": "Any"}, {"lineNumber": 950, "col_offset": 19, "nodeName": "parse", "type": "Callable[..., Any]"}, {"lineNumber": 950, "col_offset": 57, "nodeName": "s", "type": "Any"}, {"lineNumber": 950, "col_offset": 60, "nodeName": "signature", "type": "Any"}, {"lineNumber": 952, "col_offset": 19, "nodeName": "parse", "type": "Callable[..., Any]"}, {"lineNumber": 952, "col_offset": 43, "nodeName": "s", "type": "str"}, {"lineNumber": 952, "col_offset": 46, "nodeName": "signature", "type": "None"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "self", "type": "Expression"}, {"lineNumber": 957, "col_offset": 20, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 957, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 973, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 973, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 973, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 974, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 978, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 978, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 979, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 983, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 983, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 983, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 984, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 988, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 988, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 988, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 989, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 996, "col_offset": 19, "nodeName": "self", "type": "Expression"}, {"lineNumber": 996, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1012, "col_offset": 21, "nodeName": "Prover9", "type": "Any"}, {"lineNumber": 1013, "col_offset": 31, "nodeName": "simplify", "type": "Callable[[], Any]"}, {"lineNumber": 1013, "col_offset": 48, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "prover", "type": "Any"}, {"lineNumber": 1017, "col_offset": 20, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 1017, "col_offset": 25, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1021, "col_offset": 19, "nodeName": "expr", "type": "Expression"}, {"lineNumber": 1048, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "varEx", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "sig", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1092, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1094, "col_offset": 12, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1101, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1101, "col_offset": 26, "nodeName": "e", "type": "Expression"}, {"lineNumber": 1101, "col_offset": 29, "nodeName": "IndividualVariableExpression", "type": "Type[IndividualVariableExpression]"}, {"lineNumber": 1111, "col_offset": 30, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1154, "col_offset": 28, "nodeName": "__name__", "type": "str"}, {"lineNumber": 1154, "col_offset": 53, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1157, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1166, "col_offset": 15, "nodeName": "free", "type": "Callable[[], Any]"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1202, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1202, "col_offset": 61, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 1249, "col_offset": 19, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 1253, "col_offset": 19, "nodeName": "__class__", "type": "Type[ApplicationExpression]"}, {"lineNumber": 1253, "col_offset": 34, "nodeName": "function", "type": "Any"}, {"lineNumber": 1253, "col_offset": 44, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1257, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 1267, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1267, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1271, "col_offset": 12, "nodeName": "_set_type", "type": "Any"}, {"lineNumber": 1272, "col_offset": 61, "nodeName": "signature", "type": "Union[collections.defaultdict[nothing, List[Any]], Any]"}, {"lineNumber": 1290, "col_offset": 11, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1291, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1291, "col_offset": 22, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1291, "col_offset": 29, "nodeName": "uncurry", "type": "Callable[[], Any]"}, {"lineNumber": 1294, "col_offset": 23, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1297, "col_offset": 17, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1297, "col_offset": 30, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1297, "col_offset": 44, "nodeName": "arg", "type": "Any"}, {"lineNumber": 1301, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 1301, "col_offset": 20, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1302, "col_offset": 19, "nodeName": "unique", "type": "List[Any]"}, {"lineNumber": 1309, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1309, "col_offset": 15, "nodeName": "unique", "type": "List[Any]"}, {"lineNumber": 1316, "col_offset": 22, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1317, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1319, "col_offset": 33, "nodeName": "constants", "type": "Any"}, {"lineNumber": 1320, "col_offset": 36, "nodeName": "constants", "type": "Any"}, {"lineNumber": 1324, "col_offset": 22, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1325, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1327, "col_offset": 29, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 1328, "col_offset": 32, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 1336, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1336, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 1336, "col_offset": 30, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 1337, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 1337, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1338, "col_offset": 33, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1342, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1342, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1348, "col_offset": 11, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1349, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1349, "col_offset": 22, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1349, "col_offset": 29, "nodeName": "uncurry", "type": "Callable[[], Any]"}, {"lineNumber": 1350, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1353, "col_offset": 23, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1354, "col_offset": 29, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1359, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1359, "col_offset": 26, "nodeName": "term", "type": "Any"}, {"lineNumber": 1359, "col_offset": 41, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 1364, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1364, "col_offset": 24, "nodeName": "function", "type": "Any"}, {"lineNumber": 1364, "col_offset": 34, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 1365, "col_offset": 12, "nodeName": "parenthesize_function", "type": "bool"}, {"lineNumber": 1368, "col_offset": 56, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 1370, "col_offset": 44, "nodeName": "arg_str", "type": "Union[Any, str]"}, {"lineNumber": 1370, "col_offset": 54, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1379, "col_offset": 16, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1382, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 1382, "col_offset": 27, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1383, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 1393, "col_offset": 15, "nodeName": "uncurry", "type": "Any"}, {"lineNumber": 1400, "col_offset": 15, "nodeName": "uncurry", "type": "Any"}, {"lineNumber": 1407, "col_offset": 26, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1430, "col_offset": 11, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1440, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1440, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1443, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1444, "col_offset": 25, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 1444, "col_offset": 44, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1445, "col_offset": 19, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1449, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1450, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1455, "col_offset": 11, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1456, "col_offset": 19, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1468, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1468, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 1468, "col_offset": 30, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1469, "col_offset": 16, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1469, "col_offset": 33, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1473, "col_offset": 19, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1473, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1476, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1476, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 1476, "col_offset": 33, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1478, "col_offset": 15, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 1483, "col_offset": 22, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1495, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1495, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1497, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 1497, "col_offset": 34, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1498, "col_offset": 18, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 1498, "col_offset": 39, "nodeName": "self", "type": "IndividualVariableExpression"}, {"lineNumber": 1498, "col_offset": 45, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1498, "col_offset": 57, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1509, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1524, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1549, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1549, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1556, "col_offset": 15, "nodeName": "type", "type": "EntityType"}, {"lineNumber": 1556, "col_offset": 28, "nodeName": "ENTITY_TYPE", "type": "EntityType"}, {"lineNumber": 1557, "col_offset": 16, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1559, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1560, "col_offset": 25, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 1560, "col_offset": 44, "nodeName": "resolution", "type": "Union[Any, EntityType]"}, {"lineNumber": 1561, "col_offset": 19, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1565, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1566, "col_offset": 12, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1574, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1585, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1586, "col_offset": 15, "nodeName": "FunctionVariableExpression", "type": "Type[FunctionVariableExpression]"}, {"lineNumber": 1586, "col_offset": 42, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1587, "col_offset": 9, "nodeName": "is_eventvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 1587, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1614, "col_offset": 11, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1624, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1628, "col_offset": 15, "nodeName": "alpha_convert", "type": "Any"}, {"lineNumber": 1629, "col_offset": 16, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1632, "col_offset": 19, "nodeName": "__class__", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1633, "col_offset": 16, "nodeName": "variable", "type": "Union[Any, Variable]"}, {"lineNumber": 1643, "col_offset": 15, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1644, "col_offset": 20, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1644, "col_offset": 38, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1649, "col_offset": 15, "nodeName": "free", "type": "Any"}, {"lineNumber": 1649, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1654, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1657, "col_offset": 19, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1657, "col_offset": 38, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1665, "col_offset": 26, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1665, "col_offset": 41, "nodeName": "function", "type": "Any"}, {"lineNumber": 1665, "col_offset": 50, "nodeName": "term", "type": "Any"}, {"lineNumber": 1670, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1670, "col_offset": 22, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1670, "col_offset": 28, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1670, "col_offset": 48, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1670, "col_offset": 59, "nodeName": "other", "type": "Any"}, {"lineNumber": 1670, "col_offset": 66, "nodeName": "__class__", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1671, "col_offset": 15, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1671, "col_offset": 32, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1675, "col_offset": 16, "nodeName": "varex", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1681, "col_offset": 19, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1681, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1689, "col_offset": 27, "nodeName": "findtype", "type": "Any"}, {"lineNumber": 1689, "col_offset": 46, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1689, "col_offset": 62, "nodeName": "term", "type": "Any"}, {"lineNumber": 1696, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1696, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1698, "col_offset": 28, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1699, "col_offset": 15, "nodeName": "resolve", "type": "Callable[[Any], Any]"}, {"lineNumber": 1699, "col_offset": 33, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1700, "col_offset": 18, "nodeName": "TypeResolutionException", "type": "Type[TypeResolutionException]"}, {"lineNumber": 1700, "col_offset": 42, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1700, "col_offset": 48, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1705, "col_offset": 14, "nodeName": "term", "type": "Any"}, {"lineNumber": 1705, "col_offset": 32, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1706, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1706, "col_offset": 29, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1707, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1712, "col_offset": 21, "nodeName": "term", "type": "Any"}, {"lineNumber": 1726, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1726, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1728, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 1728, "col_offset": 34, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1729, "col_offset": 18, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 1729, "col_offset": 39, "nodeName": "self", "type": "QuantifiedExpression"}, {"lineNumber": 1729, "col_offset": 45, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1729, "col_offset": 57, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1730, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1733, "col_offset": 21, "nodeName": "self", "type": "QuantifiedExpression"}, {"lineNumber": 1735, "col_offset": 14, "nodeName": "term", "type": "Any"}, {"lineNumber": 1735, "col_offset": 32, "nodeName": "self", "type": "QuantifiedExpression"}, {"lineNumber": 1736, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1736, "col_offset": 29, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1737, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1743, "col_offset": 21, "nodeName": "term", "type": "Any"}, {"lineNumber": 1771, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1771, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1773, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 1773, "col_offset": 34, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1774, "col_offset": 18, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 1774, "col_offset": 39, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1774, "col_offset": 45, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1774, "col_offset": 57, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1775, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 1779, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 1790, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1790, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 1790, "col_offset": 33, "nodeName": "NegatedExpression", "type": "Type[NegatedExpression]"}, {"lineNumber": 1790, "col_offset": 56, "nodeName": "term", "type": "Any"}, {"lineNumber": 1790, "col_offset": 69, "nodeName": "term", "type": "Any"}, {"lineNumber": 1793, "col_offset": 19, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1793, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1798, "col_offset": 35, "nodeName": "term", "type": "Any"}, {"lineNumber": 1815, "col_offset": 12, "nodeName": "first", "type": "Any"}, {"lineNumber": 1816, "col_offset": 12, "nodeName": "second", "type": "Any"}, {"lineNumber": 1817, "col_offset": 11, "nodeName": "f", "type": "Any"}, {"lineNumber": 1817, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 1817, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 1817, "col_offset": 26, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1819, "col_offset": 13, "nodeName": "f", "type": "Any"}, {"lineNumber": 1819, "col_offset": 18, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1820, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 1822, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 1831, "col_offset": 16, "nodeName": "first", "type": "Any"}, {"lineNumber": 1831, "col_offset": 30, "nodeName": "first", "type": "Any"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "second", "type": "Any"}, {"lineNumber": 1832, "col_offset": 31, "nodeName": "second", "type": "Any"}, {"lineNumber": 1836, "col_offset": 19, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1836, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 1841, "col_offset": 16, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1841, "col_offset": 32, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1842, "col_offset": 17, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1842, "col_offset": 33, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1843, "col_offset": 64, "nodeName": "second", "type": "Any"}, {"lineNumber": 1843, "col_offset": 73, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1855, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1855, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1857, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 1857, "col_offset": 34, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1858, "col_offset": 18, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 1858, "col_offset": 39, "nodeName": "self", "type": "BooleanExpression"}, {"lineNumber": 1858, "col_offset": 45, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1858, "col_offset": 57, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1859, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 1860, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 1872, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 1885, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 1911, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1911, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1913, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 1913, "col_offset": 34, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1914, "col_offset": 18, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 1914, "col_offset": 39, "nodeName": "self", "type": "EqualityExpression"}, {"lineNumber": 1914, "col_offset": 45, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1914, "col_offset": 57, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 1915, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 1916, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 1939, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 1940, "col_offset": 15, "nodeName": "message", "type": "str"}, {"lineNumber": 1943, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 1944, "col_offset": 8, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 1951, "col_offset": 8, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 1952, "col_offset": 51, "nodeName": "message", "type": "Union[str, Any]"}, {"lineNumber": 1965, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 1977, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 1989, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 2044, "col_offset": 8, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 2050, "col_offset": 33, "nodeName": "type", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "QUANTS", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "re", "type": "module"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "msg", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "token", "type": "str"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "token_start_idx", "type": "int"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "cur_data_idx", "type": "int"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "st", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "c", "type": "str"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "Trie", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "token_start_idx", "type": "int"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "token", "type": "str"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "symbol", "type": "str"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "symbol", "type": "str"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "token", "type": "Union[str, Any]"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "c", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "end", "type": "nothing"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "_buffer", "type": "List[nothing]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "_buffer", "type": "List[Union[str, Any]]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "handle_negation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 40, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "context", "type": "str"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "LAMBDA_LIST", "type": "List[str]"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 324, "col_offset": 43, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 324, "col_offset": 72, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 48, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "APP", "type": "str"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 55, "nodeName": "COMMA", "type": "str"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "make_ApplicationExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 363, "col_offset": 46, "nodeName": "index", "type": "Any"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "isvariable", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "get_next_token_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 48, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "isvariable", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "get_next_token_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 421, "col_offset": 31, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 426, "col_offset": 59, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "assertToken", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "tok", "type": "Any"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "QUANTS", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 454, "col_offset": 59, "nodeName": "has_priority", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 455, "col_offset": 21, "nodeName": "context", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "make_EqualityExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "NEQ_LIST", "type": "List[str]"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "expression", "type": "NegatedExpression"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "has_priority", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 477, "col_offset": 45, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 477, "col_offset": 50, "nodeName": "context", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "make_BooleanExpression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "factory", "type": "Optional[Union[Type[AndExpression], Type[OrExpression], Type[ImpExpression], Type[IffExpression]]]"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "expression", "type": "Any"}, {"lineNumber": 491, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "IMP_LIST", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 19, "nodeName": "ImpExpression", "type": "Type[ImpExpression]"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 52, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "make_ApplicationExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 527, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 531, "col_offset": 20, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "assertNextToken", "type": "Callable[[Any], Any]"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "CLOSE", "type": "str"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "operator_precedence", "type": "Dict[Optional[str], int]"}, {"lineNumber": 548, "col_offset": 53, "nodeName": "operator_precedence", "type": "Dict[Optional[str], int]"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "operation", "type": "str"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "right_associated_operations", "type": "List[str]"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "ExpectedMoreTokensException", "type": "Type[ExpectedMoreTokensException]"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "index", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 565, "col_offset": 47, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 565, "col_offset": 67, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 565, "col_offset": 72, "nodeName": "expected", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 568, "col_offset": 67, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 568, "col_offset": 72, "nodeName": "expected", "type": "Any"}, {"lineNumber": 573, "col_offset": 22, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 573, "col_offset": 47, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 573, "col_offset": 67, "nodeName": "tok", "type": "Any"}, {"lineNumber": 573, "col_offset": 72, "nodeName": "expected", "type": "Any"}, {"lineNumber": 576, "col_offset": 22, "nodeName": "UnexpectedTokenException", "type": "Type[UnexpectedTokenException]"}, {"lineNumber": 576, "col_offset": 47, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 576, "col_offset": 67, "nodeName": "tok", "type": "Any"}, {"lineNumber": 576, "col_offset": 72, "nodeName": "expected", "type": "Any"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 610, "col_offset": 30, "nodeName": "parse", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 610, "col_offset": 49, "nodeName": "line", "type": "Any"}, {"lineNumber": 612, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 626, "col_offset": 47, "nodeName": "self", "type": "Variable"}, {"lineNumber": 626, "col_offset": 60, "nodeName": "other", "type": "Any"}, {"lineNumber": 662, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 664, "col_offset": 13, "nodeName": "is_eventvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 664, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 671, "col_offset": 35, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 673, "col_offset": 31, "nodeName": "prefix", "type": "str"}, {"lineNumber": 682, "col_offset": 49, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 685, "col_offset": 28, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 711, "col_offset": 16, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 712, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "matches", "type": "Any"}, {"lineNumber": 722, "col_offset": 38, "nodeName": "first", "type": "Any"}, {"lineNumber": 722, "col_offset": 55, "nodeName": "matches", "type": "Any"}, {"lineNumber": 722, "col_offset": 75, "nodeName": "second", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 730, "col_offset": 35, "nodeName": "first", "type": "Any"}, {"lineNumber": 731, "col_offset": 16, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 731, "col_offset": 36, "nodeName": "second", "type": "Any"}, {"lineNumber": 732, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 736, "col_offset": 13, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 737, "col_offset": 19, "nodeName": "other", "type": "Any"}, {"lineNumber": 745, "col_offset": 32, "nodeName": "first", "type": "Any"}, {"lineNumber": 745, "col_offset": 44, "nodeName": "second", "type": "Any"}, {"lineNumber": 749, "col_offset": 19, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 756, "col_offset": 56, "nodeName": "self", "type": "BasicType"}, {"lineNumber": 756, "col_offset": 73, "nodeName": "other", "type": "Any"}, {"lineNumber": 810, "col_offset": 45, "nodeName": "other", "type": "Any"}, {"lineNumber": 846, "col_offset": 17, "nodeName": "char", "type": "Any"}, {"lineNumber": 847, "col_offset": 16, "nodeName": "paren_count", "type": "int"}, {"lineNumber": 853, "col_offset": 22, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 853, "col_offset": 51, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 857, "col_offset": 9, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 857, "col_offset": 34, "nodeName": "TRUTH_TYPE", "type": "TruthValueType"}, {"lineNumber": 860, "col_offset": 15, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "TypeException", "type": "Type[TypeException]"}, {"lineNumber": 869, "col_offset": 29, "nodeName": "self", "type": "InconsistentTypeHierarchyException"}, {"lineNumber": 877, "col_offset": 37, "nodeName": "variable", "type": "Any"}, {"lineNumber": 877, "col_offset": 47, "nodeName": "expression", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 884, "col_offset": 14, "nodeName": "InconsistentTypeHierarchyException", "type": "Type[InconsistentTypeHierarchyException]"}, {"lineNumber": 884, "col_offset": 50, "nodeName": "self", "type": "InconsistentTypeHierarchyException"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 889, "col_offset": 14, "nodeName": "TypeResolutionException", "type": "Type[TypeResolutionException]"}, {"lineNumber": 889, "col_offset": 39, "nodeName": "self", "type": "TypeResolutionException"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "expression", "type": "Any"}, {"lineNumber": 891, "col_offset": 27, "nodeName": "type", "type": "Any"}, {"lineNumber": 891, "col_offset": 44, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 897, "col_offset": 14, "nodeName": "IllegalTypeException", "type": "Type[IllegalTypeException]"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "self", "type": "IllegalTypeException"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 899, "col_offset": 46, "nodeName": "expression", "type": "BooleanExpression"}, {"lineNumber": 899, "col_offset": 58, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 899, "col_offset": 70, "nodeName": "allowed_type", "type": "TruthValueType"}, {"lineNumber": 950, "col_offset": 19, "nodeName": "_type_checking_logic_parser", "type": "LogicParser"}, {"lineNumber": 952, "col_offset": 19, "nodeName": "_logic_parser", "type": "LogicParser"}, {"lineNumber": 974, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 979, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 984, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 989, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 1013, "col_offset": 31, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1013, "col_offset": 48, "nodeName": "other", "type": "Any"}, {"lineNumber": 1048, "col_offset": 22, "nodeName": "signature", "type": "Any"}, {"lineNumber": 1049, "col_offset": 24, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 1050, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1050, "col_offset": 30, "nodeName": "val", "type": "Any"}, {"lineNumber": 1050, "col_offset": 35, "nodeName": "Type", "type": "Type[Type]"}, {"lineNumber": 1051, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 1051, "col_offset": 33, "nodeName": "val", "type": "Any"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "type", "type": "Union[EntityType, TruthValueType, AnyType, ComplexType]"}, {"lineNumber": 1054, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 1054, "col_offset": 32, "nodeName": "varEx", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1093, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1093, "col_offset": 32, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1093, "col_offset": 42, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1093, "col_offset": 54, "nodeName": "replace_bound", "type": "Any"}, {"lineNumber": 1093, "col_offset": 69, "nodeName": "alpha_convert", "type": "Any"}, {"lineNumber": 1102, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1103, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1103, "col_offset": 28, "nodeName": "e", "type": "Expression"}, {"lineNumber": 1103, "col_offset": 31, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1111, "col_offset": 37, "nodeName": "get_indiv_vars", "type": "Callable[[Any], Any]"}, {"lineNumber": 1111, "col_offset": 52, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1151, "col_offset": 50, "nodeName": "combinator", "type": "Type[Expression]"}, {"lineNumber": 1154, "col_offset": 28, "nodeName": "__class__", "type": "Type[Expression]"}, {"lineNumber": 1166, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1177, "col_offset": 22, "nodeName": "free", "type": "Any"}, {"lineNumber": 1177, "col_offset": 46, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 1177, "col_offset": 53, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1177, "col_offset": 67, "nodeName": "parts", "type": "Any"}, {"lineNumber": 1186, "col_offset": 22, "nodeName": "constants", "type": "Any"}, {"lineNumber": 1186, "col_offset": 51, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 1186, "col_offset": 58, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1186, "col_offset": 72, "nodeName": "parts", "type": "Any"}, {"lineNumber": 1195, "col_offset": 22, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 1195, "col_offset": 52, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 1195, "col_offset": 59, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1195, "col_offset": 73, "nodeName": "parts", "type": "Any"}, {"lineNumber": 1202, "col_offset": 47, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1249, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1253, "col_offset": 19, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1257, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1271, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 1272, "col_offset": 16, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 1272, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 1272, "col_offset": 48, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1275, "col_offset": 18, "nodeName": "TypeException", "type": "Type[TypeException]"}, {"lineNumber": 1291, "col_offset": 29, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1297, "col_offset": 17, "nodeName": "arg", "type": "Any"}, {"lineNumber": 1297, "col_offset": 64, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1310, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1310, "col_offset": 24, "nodeName": "unique", "type": "List[Any]"}, {"lineNumber": 1319, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 1320, "col_offset": 36, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1325, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1327, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 1328, "col_offset": 32, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1332, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 1332, "col_offset": 36, "nodeName": "function", "type": "Any"}, {"lineNumber": 1332, "col_offset": 52, "nodeName": "function", "type": "Any"}, {"lineNumber": 1332, "col_offset": 61, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1337, "col_offset": 16, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1337, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1338, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 1349, "col_offset": 29, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1354, "col_offset": 29, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1359, "col_offset": 26, "nodeName": "function", "type": "Any"}, {"lineNumber": 1361, "col_offset": 20, "nodeName": "parenthesize_function", "type": "bool"}, {"lineNumber": 1363, "col_offset": 16, "nodeName": "parenthesize_function", "type": "bool"}, {"lineNumber": 1368, "col_offset": 27, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 1368, "col_offset": 41, "nodeName": "function_str", "type": "Any"}, {"lineNumber": 1368, "col_offset": 56, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1370, "col_offset": 15, "nodeName": "function_str", "type": "Any"}, {"lineNumber": 1370, "col_offset": 30, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 1382, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1382, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 1393, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1400, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1443, "col_offset": 31, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1444, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 1446, "col_offset": 22, "nodeName": "InconsistentTypeHierarchyException", "type": "Type[InconsistentTypeHierarchyException]"}, {"lineNumber": 1446, "col_offset": 57, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1449, "col_offset": 31, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1469, "col_offset": 16, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1469, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 1497, "col_offset": 15, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1509, "col_offset": 20, "nodeName": "self", "type": "IndividualVariableExpression"}, {"lineNumber": 1524, "col_offset": 20, "nodeName": "self", "type": "FunctionVariableExpression"}, {"lineNumber": 1556, "col_offset": 15, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1557, "col_offset": 29, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 1557, "col_offset": 48, "nodeName": "type", "type": "EntityType"}, {"lineNumber": 1559, "col_offset": 31, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1560, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 1562, "col_offset": 22, "nodeName": "InconsistentTypeHierarchyException", "type": "Type[InconsistentTypeHierarchyException]"}, {"lineNumber": 1562, "col_offset": 57, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1564, "col_offset": 8, "nodeName": "signature", "type": "Union[collections.defaultdict[Any, Any], Any]"}, {"lineNumber": 1565, "col_offset": 31, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1574, "col_offset": 20, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1587, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1588, "col_offset": 15, "nodeName": "EventVariableExpression", "type": "Type[EventVariableExpression]"}, {"lineNumber": 1588, "col_offset": 39, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1590, "col_offset": 15, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 1590, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1616, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1616, "col_offset": 34, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1616, "col_offset": 46, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1617, "col_offset": 63, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1619, "col_offset": 23, "nodeName": "__class__", "type": "Type[VariableBinderExpression]"}, {"lineNumber": 1620, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1628, "col_offset": 33, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1629, "col_offset": 23, "nodeName": "alpha_convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 1632, "col_offset": 19, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1633, "col_offset": 16, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1634, "col_offset": 16, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1634, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1634, "col_offset": 44, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1634, "col_offset": 56, "nodeName": "replace_bound", "type": "Any"}, {"lineNumber": 1634, "col_offset": 71, "nodeName": "alpha_convert", "type": "Any"}, {"lineNumber": 1644, "col_offset": 20, "nodeName": "term", "type": "Any"}, {"lineNumber": 1644, "col_offset": 38, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1644, "col_offset": 53, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 1644, "col_offset": 72, "nodeName": "newvar", "type": "Any"}, {"lineNumber": 1649, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 1649, "col_offset": 39, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1657, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1661, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 1661, "col_offset": 36, "nodeName": "term", "type": "Any"}, {"lineNumber": 1665, "col_offset": 50, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1670, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 1670, "col_offset": 66, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1671, "col_offset": 15, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1671, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 1672, "col_offset": 23, "nodeName": "term", "type": "Any"}, {"lineNumber": 1672, "col_offset": 36, "nodeName": "term", "type": "Any"}, {"lineNumber": 1675, "col_offset": 24, "nodeName": "VariableExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 1675, "col_offset": 43, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1676, "col_offset": 23, "nodeName": "term", "type": "Any"}, {"lineNumber": 1689, "col_offset": 27, "nodeName": "term", "type": "Any"}, {"lineNumber": 1689, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1689, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1699, "col_offset": 15, "nodeName": "type", "type": "ComplexType"}, {"lineNumber": 1706, "col_offset": 12, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 1706, "col_offset": 29, "nodeName": "term", "type": "Any"}, {"lineNumber": 1728, "col_offset": 15, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1730, "col_offset": 8, "nodeName": "self", "type": "QuantifiedExpression"}, {"lineNumber": 1736, "col_offset": 12, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 1736, "col_offset": 29, "nodeName": "term", "type": "Any"}, {"lineNumber": 1773, "col_offset": 15, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1775, "col_offset": 8, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1779, "col_offset": 15, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1783, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 1783, "col_offset": 36, "nodeName": "term", "type": "Any"}, {"lineNumber": 1790, "col_offset": 56, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1790, "col_offset": 69, "nodeName": "other", "type": "Any"}, {"lineNumber": 1798, "col_offset": 35, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1815, "col_offset": 12, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1816, "col_offset": 12, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1826, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 1826, "col_offset": 36, "nodeName": "first", "type": "Any"}, {"lineNumber": 1826, "col_offset": 49, "nodeName": "function", "type": "Any"}, {"lineNumber": 1826, "col_offset": 58, "nodeName": "second", "type": "Any"}, {"lineNumber": 1830, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1830, "col_offset": 24, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1830, "col_offset": 30, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1830, "col_offset": 50, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1830, "col_offset": 61, "nodeName": "other", "type": "Any"}, {"lineNumber": 1830, "col_offset": 68, "nodeName": "__class__", "type": "Type[BinaryExpression]"}, {"lineNumber": 1831, "col_offset": 16, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1831, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1832, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 1857, "col_offset": 15, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1859, "col_offset": 8, "nodeName": "self", "type": "BooleanExpression"}, {"lineNumber": 1860, "col_offset": 8, "nodeName": "self", "type": "BooleanExpression"}, {"lineNumber": 1913, "col_offset": 15, "nodeName": "other_type", "type": "Any"}, {"lineNumber": 1915, "col_offset": 8, "nodeName": "self", "type": "EqualityExpression"}, {"lineNumber": 1916, "col_offset": 8, "nodeName": "self", "type": "EqualityExpression"}, {"lineNumber": 1935, "col_offset": 16, "nodeName": "unexpected", "type": "nothing"}, {"lineNumber": 1936, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1939, "col_offset": 46, "nodeName": "unexpected", "type": "Any"}, {"lineNumber": 1941, "col_offset": 16, "nodeName": "msg", "type": "Any"}, {"lineNumber": 1943, "col_offset": 43, "nodeName": "expected", "type": "None"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2013, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2014, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2015, "col_offset": 10, "nodeName": "lexpr", "type": "Callable[..., Any]"}, {"lineNumber": 2050, "col_offset": 23, "nodeName": "str", "type": "Any"}, {"lineNumber": 2050, "col_offset": 33, "nodeName": "ex", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "NEQ_LIST", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 153, "col_offset": 71, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "e", "type": "LogicalExpressionException"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "data", "type": "str"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "c", "type": "str"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "symbol", "type": "str"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "data", "type": "str"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "token", "type": "Union[Any, str]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "data", "type": "str"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "token_start_idx", "type": "int"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "token", "type": "str"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "token", "type": "Union[str, Any]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "token_start_idx", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "data", "type": "str"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "escape", "type": "nothing"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "incl_quotes", "type": "nothing"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "token", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "token", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "handle_lambda", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "context", "type": "str"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "QUANTS", "type": "List[str]"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "accum", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "FunctionVariableExpression", "type": "Type[FunctionVariableExpression]"}, {"lineNumber": 336, "col_offset": 73, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "accum", "type": "Any"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "tok", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 55, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 56, "nodeName": "APP", "type": "str"}, {"lineNumber": 363, "col_offset": 46, "nodeName": "e", "type": "ExpectedMoreTokensException"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 368, "col_offset": 51, "nodeName": "description", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "DOT", "type": "str"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 407, "col_offset": 18, "nodeName": "tok", "type": "Any"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 33, "nodeName": "DOT", "type": "str"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 421, "col_offset": 31, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 426, "col_offset": 59, "nodeName": "vars", "type": "List[Variable]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 454, "col_offset": 22, "nodeName": "EQ_LIST", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 39, "nodeName": "NEQ_LIST", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 59, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 459, "col_offset": 32, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 61, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "make_NegatedExpression", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 61, "nodeName": "expression", "type": "EqualityExpression"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 480, "col_offset": 41, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 70, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 495, "col_offset": 20, "nodeName": "IFF_LIST", "type": "List[str]"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "IffExpression", "type": "Type[IffExpression]"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 52, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 516, "col_offset": 26, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 517, "col_offset": 24, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 527, "col_offset": 32, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 527, "col_offset": 61, "nodeName": "APP", "type": "str"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 529, "col_offset": 59, "nodeName": "COMMA", "type": "str"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "make_ApplicationExpression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "accum", "type": "ApplicationExpression"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 548, "col_offset": 40, "nodeName": "operation", "type": "str"}, {"lineNumber": 548, "col_offset": 53, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "context", "type": "Any"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "operator_precedence", "type": "Dict[Optional[str], int]"}, {"lineNumber": 552, "col_offset": 55, "nodeName": "operator_precedence", "type": "Dict[Optional[str], int]"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "e", "type": "ExpectedMoreTokensException"}, {"lineNumber": 565, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 573, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 576, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 583, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 610, "col_offset": 30, "nodeName": "logic_parser", "type": "Union[LogicParser, Any]"}, {"lineNumber": 664, "col_offset": 25, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 671, "col_offset": 35, "nodeName": "_counter", "type": "nltk.internals.Counter"}, {"lineNumber": 673, "col_offset": 39, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 682, "col_offset": 49, "nodeName": "_counter", "type": "nltk.internals.Counter"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "first", "type": "Any"}, {"lineNumber": 722, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 722, "col_offset": 55, "nodeName": "second", "type": "Any"}, {"lineNumber": 722, "col_offset": 75, "nodeName": "other", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "first", "type": "Any"}, {"lineNumber": 730, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 731, "col_offset": 16, "nodeName": "second", "type": "Any"}, {"lineNumber": 731, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 733, "col_offset": 23, "nodeName": "ComplexType", "type": "Type[ComplexType]"}, {"lineNumber": 733, "col_offset": 35, "nodeName": "f", "type": "Any"}, {"lineNumber": 733, "col_offset": 38, "nodeName": "s", "type": "Any"}, {"lineNumber": 745, "col_offset": 32, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 745, "col_offset": 44, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "str", "type": "Any"}, {"lineNumber": 751, "col_offset": 53, "nodeName": "str", "type": "Any"}, {"lineNumber": 848, "col_offset": 23, "nodeName": "paren_count", "type": "int"}, {"lineNumber": 849, "col_offset": 17, "nodeName": "char", "type": "Any"}, {"lineNumber": 853, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 859, "col_offset": 9, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 859, "col_offset": 34, "nodeName": "ANY_TYPE", "type": "AnyType"}, {"lineNumber": 862, "col_offset": 14, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 891, "col_offset": 27, "nodeName": "expression", "type": "Any"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "__class__", "type": "Type[BooleanExpression]"}, {"lineNumber": 950, "col_offset": 19, "nodeName": "cls", "type": "Type[Expression]"}, {"lineNumber": 952, "col_offset": 19, "nodeName": "cls", "type": "Type[Expression]"}, {"lineNumber": 1048, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 1049, "col_offset": 43, "nodeName": "Variable", "type": "Type[Variable]"}, {"lineNumber": 1049, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 1051, "col_offset": 20, "nodeName": "varEx", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "varEx", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1053, "col_offset": 33, "nodeName": "read_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 1093, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 1102, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 1104, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1106, "col_offset": 23, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1107, "col_offset": 20, "nodeName": "get_indiv_vars", "type": "Callable[[Any], Any]"}, {"lineNumber": 1151, "col_offset": 62, "nodeName": "parts", "type": "Any"}, {"lineNumber": 1154, "col_offset": 28, "nodeName": "self", "type": "Expression"}, {"lineNumber": 1177, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 1177, "col_offset": 53, "nodeName": "operator", "type": "module"}, {"lineNumber": 1177, "col_offset": 74, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1186, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 1186, "col_offset": 58, "nodeName": "operator", "type": "module"}, {"lineNumber": 1186, "col_offset": 79, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1195, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 1195, "col_offset": 59, "nodeName": "operator", "type": "module"}, {"lineNumber": 1195, "col_offset": 80, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1202, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1251, "col_offset": 41, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1251, "col_offset": 60, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1271, "col_offset": 12, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1272, "col_offset": 28, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1297, "col_offset": 52, "nodeName": "function", "type": "Any"}, {"lineNumber": 1307, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1307, "col_offset": 34, "nodeName": "f", "type": "Any"}, {"lineNumber": 1319, "col_offset": 33, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1320, "col_offset": 36, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1325, "col_offset": 34, "nodeName": "function", "type": "Any"}, {"lineNumber": 1327, "col_offset": 29, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1328, "col_offset": 32, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1332, "col_offset": 36, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1332, "col_offset": 61, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1350, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 1350, "col_offset": 46, "nodeName": "arg", "type": "Any"}, {"lineNumber": 1350, "col_offset": 53, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 1360, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1360, "col_offset": 34, "nodeName": "function", "type": "Any"}, {"lineNumber": 1360, "col_offset": 58, "nodeName": "AbstractVariableExpression", "type": "Type[AbstractVariableExpression]"}, {"lineNumber": 1362, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1362, "col_offset": 32, "nodeName": "term", "type": "Any"}, {"lineNumber": 1362, "col_offset": 47, "nodeName": "BooleanExpression", "type": "Type[BooleanExpression]"}, {"lineNumber": 1368, "col_offset": 27, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1370, "col_offset": 30, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 1443, "col_offset": 31, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1444, "col_offset": 25, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1448, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1449, "col_offset": 31, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1500, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1557, "col_offset": 29, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 1557, "col_offset": 48, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1559, "col_offset": 31, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1560, "col_offset": 25, "nodeName": "varEx", "type": "Any"}, {"lineNumber": 1564, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1565, "col_offset": 31, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1619, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1620, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1621, "col_offset": 20, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1621, "col_offset": 38, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1621, "col_offset": 48, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1621, "col_offset": 66, "nodeName": "alpha_convert", "type": "Any"}, {"lineNumber": 1628, "col_offset": 33, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1628, "col_offset": 50, "nodeName": "free", "type": "Any"}, {"lineNumber": 1629, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1629, "col_offset": 42, "nodeName": "unique_variable", "type": "Callable[..., Any]"}, {"lineNumber": 1634, "col_offset": 16, "nodeName": "term", "type": "Any"}, {"lineNumber": 1644, "col_offset": 20, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1649, "col_offset": 15, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1649, "col_offset": 39, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1657, "col_offset": 19, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1661, "col_offset": 36, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1672, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1672, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 1675, "col_offset": 43, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1676, "col_offset": 23, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1676, "col_offset": 36, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1676, "col_offset": 55, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1676, "col_offset": 71, "nodeName": "varex", "type": "Union[IndividualVariableExpression, FunctionVariableExpression, EventVariableExpression, ConstantExpression]"}, {"lineNumber": 1689, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1699, "col_offset": 15, "nodeName": "self", "type": "LambdaExpression"}, {"lineNumber": 1783, "col_offset": 36, "nodeName": "self", "type": "NegatedExpression"}, {"lineNumber": 1826, "col_offset": 36, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1826, "col_offset": 58, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1830, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 1830, "col_offset": 68, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 1941, "col_offset": 30, "nodeName": "message", "type": "str"}, {"lineNumber": 2046, "col_offset": 26, "nodeName": "__name__", "type": "str"}, {"lineNumber": 2046, "col_offset": 48, "nodeName": "e", "type": "LogicalExpressionException"}, {"lineNumber": 2050, "col_offset": 23, "nodeName": "ex", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "BINOPS", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "EQ_LIST", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 153, "col_offset": 71, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "data", "type": "str"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "token", "type": "Union[str, Any]"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "token", "type": "Any"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "_currentIndex", "type": "int"}, {"lineNumber": 270, "col_offset": 56, "nodeName": "location", "type": "int"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "handle_quant", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 37, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "context", "type": "str"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 382, "col_offset": 52, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 33, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 412, "col_offset": 52, "nodeName": "inRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 454, "col_offset": 22, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 454, "col_offset": 39, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 459, "col_offset": 32, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 480, "col_offset": 41, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 495, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 511, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 511, "col_offset": 35, "nodeName": "expression", "type": "Any"}, {"lineNumber": 511, "col_offset": 47, "nodeName": "LambdaExpression", "type": "Type[LambdaExpression]"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 512, "col_offset": 39, "nodeName": "expression", "type": "Any"}, {"lineNumber": 512, "col_offset": 51, "nodeName": "ApplicationExpression", "type": "Type[ApplicationExpression]"}, {"lineNumber": 513, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 513, "col_offset": 39, "nodeName": "expression", "type": "Any"}, {"lineNumber": 513, "col_offset": 51, "nodeName": "FunctionVariableExpression", "type": "Type[FunctionVariableExpression]"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 514, "col_offset": 39, "nodeName": "expression", "type": "Any"}, {"lineNumber": 514, "col_offset": 51, "nodeName": "ConstantExpression", "type": "Type[ConstantExpression]"}, {"lineNumber": 517, "col_offset": 24, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 527, "col_offset": 32, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 529, "col_offset": 42, "nodeName": "token", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 59, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "process_next_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 532, "col_offset": 60, "nodeName": "APP", "type": "str"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 552, "col_offset": 41, "nodeName": "operation", "type": "str"}, {"lineNumber": 552, "col_offset": 55, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 552, "col_offset": 80, "nodeName": "context", "type": "Any"}, {"lineNumber": 560, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 583, "col_offset": 21, "nodeName": "__class__", "type": "Type[LogicParser]"}, {"lineNumber": 612, "col_offset": 62, "nodeName": "linenum", "type": "int"}, {"lineNumber": 612, "col_offset": 71, "nodeName": "line", "type": "Any"}, {"lineNumber": 673, "col_offset": 39, "nodeName": "_counter", "type": "nltk.internals.Counter"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 722, "col_offset": 55, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 731, "col_offset": 16, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "first", "type": "Any"}, {"lineNumber": 751, "col_offset": 53, "nodeName": "second", "type": "Any"}, {"lineNumber": 850, "col_offset": 19, "nodeName": "paren_count", "type": "int"}, {"lineNumber": 853, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "expression", "type": "BooleanExpression"}, {"lineNumber": 1054, "col_offset": 16, "nodeName": "sig", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 1106, "col_offset": 23, "nodeName": "e", "type": "Expression"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "term", "type": "Any"}, {"lineNumber": 1251, "col_offset": 41, "nodeName": "function", "type": "Any"}, {"lineNumber": 1272, "col_offset": 28, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1279, "col_offset": 20, "nodeName": "function", "type": "Any"}, {"lineNumber": 1280, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 1281, "col_offset": 20, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1282, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 1283, "col_offset": 20, "nodeName": "first", "type": "Any"}, {"lineNumber": 1307, "col_offset": 20, "nodeName": "unique", "type": "List[Any]"}, {"lineNumber": 1325, "col_offset": 34, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1360, "col_offset": 34, "nodeName": "term", "type": "Any"}, {"lineNumber": 1362, "col_offset": 32, "nodeName": "function", "type": "Any"}, {"lineNumber": 1448, "col_offset": 18, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1500, "col_offset": 18, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1564, "col_offset": 18, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1621, "col_offset": 20, "nodeName": "term", "type": "Any"}, {"lineNumber": 1628, "col_offset": 50, "nodeName": "expression", "type": "Any"}, {"lineNumber": 1629, "col_offset": 66, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1634, "col_offset": 16, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1676, "col_offset": 36, "nodeName": "term", "type": "Any"}, {"lineNumber": 1676, "col_offset": 55, "nodeName": "other", "type": "Any"}, {"lineNumber": 1843, "col_offset": 43, "nodeName": "getOp", "type": "Any"}, {"lineNumber": 2046, "col_offset": 26, "nodeName": "__class__", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "data_idx", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "LogicalExpressionException", "type": "Type[LogicalExpressionException]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 79, "nodeName": "end", "type": "nothing"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "handle_open", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "tok", "type": "nothing"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "context", "type": "str"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 382, "col_offset": 52, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 412, "col_offset": 52, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 518, "col_offset": 46, "nodeName": "expression", "type": "Any"}, {"lineNumber": 529, "col_offset": 42, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 583, "col_offset": 21, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 751, "col_offset": 53, "nodeName": "self", "type": "ComplexType"}, {"lineNumber": 863, "col_offset": 50, "nodeName": "type_string", "type": "Any"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 1107, "col_offset": 50, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 1107, "col_offset": 57, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1107, "col_offset": 71, "nodeName": "parts", "type": "Any"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 1279, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1280, "col_offset": 20, "nodeName": "function", "type": "Any"}, {"lineNumber": 1281, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1282, "col_offset": 20, "nodeName": "argument", "type": "Any"}, {"lineNumber": 1283, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 1360, "col_offset": 34, "nodeName": "function", "type": "Any"}, {"lineNumber": 1448, "col_offset": 18, "nodeName": "self", "type": "AbstractVariableExpression"}, {"lineNumber": 1500, "col_offset": 18, "nodeName": "self", "type": "IndividualVariableExpression"}, {"lineNumber": 1564, "col_offset": 18, "nodeName": "self", "type": "ConstantExpression"}, {"lineNumber": 1621, "col_offset": 20, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1629, "col_offset": 66, "nodeName": "self", "type": "VariableBinderExpression"}, {"lineNumber": 1676, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 1710, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 1710, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 1741, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 1741, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 1843, "col_offset": 15, "nodeName": "OPEN", "type": "str"}, {"lineNumber": 1843, "col_offset": 29, "nodeName": "first", "type": "Any"}, {"lineNumber": 1843, "col_offset": 43, "nodeName": "self", "type": "BinaryExpression"}, {"lineNumber": 2046, "col_offset": 26, "nodeName": "e", "type": "LogicalExpressionException"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "symbol", "type": "str"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "out", "type": "List[Union[str, Any]]"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 235, "col_offset": 72, "nodeName": "escape", "type": "nothing"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "self", "type": "LogicParser"}, {"lineNumber": 1107, "col_offset": 57, "nodeName": "operator", "type": "module"}, {"lineNumber": 1107, "col_offset": 78, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1280, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1282, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 1283, "col_offset": 20, "nodeName": "function", "type": "Any"}, {"lineNumber": 1843, "col_offset": 15, "nodeName": "Tokens", "type": "Type[Tokens]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "index", "type": "Any"}, {"lineNumber": 1283, "col_offset": 20, "nodeName": "self", "type": "ApplicationExpression"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "e", "type": "LogicalExpressionException"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "x", "type": "str"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "x", "type": "str"}]