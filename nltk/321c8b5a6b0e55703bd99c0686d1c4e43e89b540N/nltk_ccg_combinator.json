[{"lineNumber": 134, "col_offset": 0, "nodeName": "forwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "backwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "bothForward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "bothBackward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "crossedDirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "backwardBxConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "forwardSConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "backwardSxConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "innermostFunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "forwardTConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "backwardTConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "DirectedBinaryCombinator", "type": "Type[DirectedBinaryCombinator]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "DirectedBinaryCombinator", "type": "Type[DirectedBinaryCombinator]"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "UndirectedBinaryCombinator", "type": "Type[UndirectedBinaryCombinator]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "ForwardApplication", "type": "ForwardCombinator"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "BackwardApplication", "type": "BackwardCombinator"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "UndirectedBinaryCombinator", "type": "Type[UndirectedBinaryCombinator]"}, {"lineNumber": 207, "col_offset": 0, "nodeName": "ForwardComposition", "type": "ForwardCombinator"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "BackwardComposition", "type": "BackwardCombinator"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "BackwardBx", "type": "BackwardCombinator"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "UndirectedBinaryCombinator", "type": "Type[UndirectedBinaryCombinator]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "ForwardSubstitution", "type": "ForwardCombinator"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "BackwardSx", "type": "BackwardCombinator"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "UndirectedBinaryCombinator", "type": "Type[UndirectedBinaryCombinator]"}, {"lineNumber": 340, "col_offset": 0, "nodeName": "ForwardT", "type": "ForwardCombinator"}, {"lineNumber": 341, "col_offset": 0, "nodeName": "BackwardT", "type": "BackwardCombinator"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "ForwardCombinator", "type": "Type[ForwardCombinator]"}, {"lineNumber": 144, "col_offset": 72, "nodeName": "forwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "BackwardCombinator", "type": "Type[BackwardCombinator]"}, {"lineNumber": 145, "col_offset": 74, "nodeName": "backwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "ForwardCombinator", "type": "Type[ForwardCombinator]"}, {"lineNumber": 207, "col_offset": 64, "nodeName": "forwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "BackwardCombinator", "type": "Type[BackwardCombinator]"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "backwardOnly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "BackwardCombinator", "type": "Type[BackwardCombinator]"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "backwardBxConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "ForwardCombinator", "type": "Type[ForwardCombinator]"}, {"lineNumber": 268, "col_offset": 66, "nodeName": "forwardSConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "BackwardCombinator", "type": "Type[BackwardCombinator]"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "backwardSxConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "categ", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "arg", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "arg", "type": "Any"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "ForwardCombinator", "type": "Type[ForwardCombinator]"}, {"lineNumber": 340, "col_offset": 52, "nodeName": "forwardTConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "BackwardCombinator", "type": "Type[BackwardCombinator]"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "backwardTConstraint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_combinator", "type": "UndirectedFunctionApplication"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "combinator", "type": "UndirectedFunctionApplication"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_predicate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "predicate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_suffix", "type": "str"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "suffix", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_combinator", "type": "UndirectedFunctionApplication"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "combinator", "type": "UndirectedFunctionApplication"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_predicate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "predicate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_suffix", "type": "str"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "suffix", "type": "str"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "subs", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "UndirectedFunctionApplication", "type": "Type[UndirectedFunctionApplication]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "UndirectedFunctionApplication", "type": "Type[UndirectedFunctionApplication]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "UndirectedComposition", "type": "Type[UndirectedComposition]"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "UndirectedComposition", "type": "Type[UndirectedComposition]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "UndirectedComposition", "type": "Type[UndirectedComposition]"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "UndirectedSubstitution", "type": "Type[UndirectedSubstitution]"}, {"lineNumber": 269, "col_offset": 32, "nodeName": "UndirectedSubstitution", "type": "Type[UndirectedSubstitution]"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "categ", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "subs", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "subs", "type": "Any"}, {"lineNumber": 330, "col_offset": 10, "nodeName": "innermostFunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "right", "type": "Any"}, {"lineNumber": 335, "col_offset": 10, "nodeName": "innermostFunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "left", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "UndirectedTypeRaise", "type": "Type[UndirectedTypeRaise]"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "UndirectedTypeRaise", "type": "Type[UndirectedTypeRaise]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "combine", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "right", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "combine", "type": "Any"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "left", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "argument", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "subs", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "subs", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "crossedDirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "left", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "right", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "can_cross", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "can_combine", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "function", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "argument", "type": "Any"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "bothForward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "left", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "right", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "can_cross", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "bothForward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "left", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "right", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "innermostFunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "subs", "type": "Any"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "innermostFunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "subs", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "xcat", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "is_backward", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "is_forward", "type": "Any"}, {"lineNumber": 336, "col_offset": 38, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "can_combine", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "right", "type": "Any"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "right", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "cat", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "_suffix", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "can_combine", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "left", "type": "Any"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "right", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "cat", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "_suffix", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "subs", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "subs", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "can_cross", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "self", "type": "UndirectedSubstitution"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "can_cross", "type": "Any"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "res", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "categ", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "subs", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "_combinator", "type": "Any"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "argument", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "right", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "res", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "dir", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "dir", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "dir", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "dir", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "function", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "argument", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "can_compose", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 237, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "FunctionalCategory", "type": "Type[nltk.ccg.api.FunctionalCategory]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "dir", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "categ", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "arg_categ", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "is_primitive", "type": "Any"}, {"lineNumber": 306, "col_offset": 40, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 306, "col_offset": 62, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "FunctionalCategory", "type": "Type[nltk.ccg.api.FunctionalCategory]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "xcat", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "res", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 336, "col_offset": 38, "nodeName": "res", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "ForwardCombinator"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "self", "type": "BackwardCombinator"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "res", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "argument", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "dir", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "can_unify", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "argument", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "dir", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "argument", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "FunctionalCategory", "type": "Type[nltk.ccg.api.FunctionalCategory]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "right", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "function", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 237, "col_offset": 40, "nodeName": "argument", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "argument", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "dir", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "left", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "dir", "type": "Any"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "right", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 306, "col_offset": 40, "nodeName": "arg", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "FunctionalCategory", "type": "Type[nltk.ccg.api.FunctionalCategory]"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "xcat", "type": "Any"}, {"lineNumber": 317, "col_offset": 47, "nodeName": "function", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "arg", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 336, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "function", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "argument", "type": "Any"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "res", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "function", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "argument", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "subs", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "subs", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "dir", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "function", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "dir", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "dir", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "argument", "type": "Any"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "argument", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "res", "type": "Any"}, {"lineNumber": 306, "col_offset": 62, "nodeName": "res", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "dir", "type": "Any"}, {"lineNumber": 317, "col_offset": 71, "nodeName": "dir", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "argument", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "argument", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "argument", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "left", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "right", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 306, "col_offset": 62, "nodeName": "arg", "type": "Any"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "arg", "type": "Any"}, {"lineNumber": 317, "col_offset": 71, "nodeName": "arg", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "arg", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "function", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "argument", "type": "Any"}]