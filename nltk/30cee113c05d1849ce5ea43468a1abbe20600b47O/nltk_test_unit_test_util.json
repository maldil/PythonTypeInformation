[{"lineNumber": 14, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_everygrams_pad_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_everygrams", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_everygrams_pad_right", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "test_everygrams_pad_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_everygrams_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "test_data", "type": "List[str]"}]