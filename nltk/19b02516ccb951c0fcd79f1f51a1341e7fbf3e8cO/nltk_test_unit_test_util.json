[{"lineNumber": 10, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_everygrams_pad_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_everygrams", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_everygrams_pad_right", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_everygrams_pad_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_everygrams_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Optional[Union[Tuple[None, None], Tuple[None, None, str], Tuple[str, str, str], Tuple[str, str], Tuple[None, str], Tuple[str], Tuple[None, str, str]]]]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str], Tuple[str]]]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "expected_output", "type": "Set[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "test_data", "type": "List[str]"}]