[{"lineNumber": 14, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_tokenize", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "test_pos_tagger", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "test_ner_tagger", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "test_unexpected_tagtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "test_parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "test_dependency_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "corenlp_tokenizer", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "api_return_value", "type": "Dict[unicode, List[Dict[unicode, Union[int, List[Dict[unicode, Union[unicode, int]]]]]]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "input_string", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "expected_output", "type": "List[unicode]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "tokenized_output", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "api_return_value", "type": "Dict[unicode, List[Dict[unicode, Union[List[Dict[unicode, Union[unicode, int]]], int, unicode]]]]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "input_tokens", "type": "List[str]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "expected_output", "type": "List[Tuple[str, str]]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "tagged_output", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[int, List[Dict[str, Union[str, int]]]]]]]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "input_tokens", "type": "List[str]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "expected_output", "type": "List[Tuple[str, str]]"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "tagged_output", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[List[Dict[str, Union[str, int]]], int, str]]]]"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "input_string", "type": "List[str]"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "parsed_data", "type": "Any"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[List[Dict[str, Union[str, int]]], int]]]]"}, {"lineNumber": 1397, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 1399, "col_offset": 8, "nodeName": "input_string", "type": "List[str]"}, {"lineNumber": 1400, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 1408, "col_offset": 8, "nodeName": "parsed_data", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "CoreNLPParser", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "corenlp_tokenizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "expected_output", "type": "List[unicode]"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "tokenized_output", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "CoreNLPParser", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 541, "col_offset": 34, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 555, "col_offset": 24, "nodeName": "tag", "type": "Any"}, {"lineNumber": 555, "col_offset": 43, "nodeName": "input_tokens", "type": "List[str]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "expected_output", "type": "List[Tuple[str, str]]"}, {"lineNumber": 564, "col_offset": 42, "nodeName": "tagged_output", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "CoreNLPParser", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 699, "col_offset": 34, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 701, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 714, "col_offset": 24, "nodeName": "tag", "type": "Any"}, {"lineNumber": 714, "col_offset": 43, "nodeName": "input_tokens", "type": "List[str]"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 723, "col_offset": 25, "nodeName": "expected_output", "type": "List[Tuple[str, str]]"}, {"lineNumber": 723, "col_offset": 42, "nodeName": "tagged_output", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 732, "col_offset": 25, "nodeName": "CoreNLPParser", "type": "Any"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1039, "col_offset": 34, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1041, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 1042, "col_offset": 26, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1082, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1088, "col_offset": 25, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 1088, "col_offset": 42, "nodeName": "parsed_data", "type": "Any"}, {"lineNumber": 1091, "col_offset": 25, "nodeName": "CoreNLPDependencyParser", "type": "Any"}, {"lineNumber": 1397, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1397, "col_offset": 34, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1399, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 1400, "col_offset": 26, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1408, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1414, "col_offset": 25, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 199, "col_offset": 60, "nodeName": "api_return_value", "type": "Dict[unicode, List[Dict[unicode, Union[int, List[Dict[unicode, Union[unicode, int]]]]]]]"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "input_string", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestTokenizerAPI"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 541, "col_offset": 57, "nodeName": "api_return_value", "type": "Dict[unicode, List[Dict[unicode, Union[List[Dict[unicode, Union[unicode, int]]], int, unicode]]]]"}, {"lineNumber": 555, "col_offset": 24, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "TestTaggerAPI"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 699, "col_offset": 57, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[int, List[Dict[str, Union[str, int]]]]]]]"}, {"lineNumber": 714, "col_offset": 24, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "TestTaggerAPI"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 726, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 727, "col_offset": 29, "nodeName": "CoreNLPParser", "type": "Any"}, {"lineNumber": 732, "col_offset": 25, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 1039, "col_offset": 57, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[List[Dict[str, Union[str, int]]], int, str]]]]"}, {"lineNumber": 1082, "col_offset": 27, "nodeName": "parse", "type": "Any"}, {"lineNumber": 1082, "col_offset": 48, "nodeName": "input_string", "type": "List[str]"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "self", "type": "TestParserAPI"}, {"lineNumber": 1091, "col_offset": 25, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 1397, "col_offset": 57, "nodeName": "api_return_value", "type": "Dict[str, List[Dict[str, Union[List[Dict[str, Union[str, int]]], int]]]]"}, {"lineNumber": 1408, "col_offset": 27, "nodeName": "parse", "type": "Any"}, {"lineNumber": 1408, "col_offset": 48, "nodeName": "input_string", "type": "List[str]"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "api_call", "type": "Any"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "self", "type": "TestParserAPI"}, {"lineNumber": 1414, "col_offset": 42, "nodeName": "tree", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "corenlp_tokenizer", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "corenlp_tokenizer", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "corenlp_tagger", "type": "Any"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "self", "type": "TestTaggerAPI"}, {"lineNumber": 727, "col_offset": 29, "nodeName": "corenlp", "type": "Any"}, {"lineNumber": 1045, "col_offset": 16, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1082, "col_offset": 27, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1403, "col_offset": 16, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1404, "col_offset": 16, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1408, "col_offset": 27, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "corenlp_parser", "type": "Any"}, {"lineNumber": 1414, "col_offset": 42, "nodeName": "parsed_data", "type": "Any"}, {"lineNumber": 1048, "col_offset": 24, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1057, "col_offset": 24, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1051, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1052, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1053, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1054, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1060, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1061, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1060, "col_offset": 44, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1064, "col_offset": 40, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1065, "col_offset": 40, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1068, "col_offset": 48, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1069, "col_offset": 48, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 1070, "col_offset": 48, "nodeName": "Tree", "type": "Any"}]