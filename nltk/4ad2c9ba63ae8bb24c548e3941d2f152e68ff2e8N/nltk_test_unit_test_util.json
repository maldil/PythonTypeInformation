[{"lineNumber": 10, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_everygrams_without_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_everygrams_max_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_everygrams_min_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_everygrams_pad_right", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_everygrams_pad_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str]]]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "expected_output", "type": "List[Union[Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "expected_output", "type": "List[Union[Tuple[str], Tuple[str, str], Tuple[str, str, str], Tuple[str, str, None], Tuple[str, None], Tuple[str, None, None], Tuple[None], Tuple[None, None]]]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "everygrams", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "test_data", "type": "listiterator[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "expected_output", "type": "List[Union[Tuple[None], Tuple[None, None], Tuple[None, None, str], Tuple[None, str], Tuple[None, str, str], Tuple[str], Tuple[str, str], Tuple[str, str, str]]]"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestEverygrams"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "output", "type": "Any"}]