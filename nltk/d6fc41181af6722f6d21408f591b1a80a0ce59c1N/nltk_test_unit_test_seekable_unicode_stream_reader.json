[{"lineNumber": 12, "col_offset": 0, "nodeName": "check_reader", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_reader", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "test_reader_stream_is_closed", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "teardown_module", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "ENCODINGS", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "STRINGS", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "bytestr", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "strlen", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "stream", "type": "_io.BytesIO"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "strings", "type": "Dict[Any, Union[str, Any]]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "string", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "STRINGS", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "closed", "type": "Any"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "encode", "type": "Any"}, {"lineNumber": 13, "col_offset": 36, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "unicode_string", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "bytestr", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "SeekableUnicodeStreamReader", "type": "Any"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "stream", "type": "_io.BytesIO"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "pos", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "pos1", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "char", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "op", "type": "str"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "encoding", "type": "str"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "ENCODINGS", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "SeekableUnicodeStreamReader", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "closed", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "__del__", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "unicode_string", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "tell", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "pos2", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "op", "type": "str"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "op", "type": "str"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "new_pos", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "op", "type": "str"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "stream", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "reader", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "gc", "type": "module"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "reader", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "pos", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "pos", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "pos2", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "pos1", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "char", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "random", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "tell", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "seek", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "new_pos", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "pos", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "pos", "type": "None"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "size", "type": "None"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "pos", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "UnicodeEncodeError", "type": "Type[UnicodeEncodeError]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "reader", "type": "Any"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "read", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "pos", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "strings", "type": "Dict[Any, Union[str, Any]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "reader", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "reader", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "tell", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "read", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "size", "type": "Optional[int]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "readline", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "size", "type": "Optional[int]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "pos", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "strings", "type": "Dict[Any, Union[str, Any]]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "startswith", "type": "Union[Callable[..., bool], Any]"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "s", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "encoding", "type": "str"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "check_reader", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "string", "type": "str"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "encoding", "type": "str"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "reader", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "pos2", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "chars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "reader", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "reader", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "reader", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "string", "type": "str"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "random", "type": "module"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "random", "type": "module"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "strlen", "type": "int"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "strings", "type": "Dict[Any, Union[str, Any]]"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "strlen", "type": "int"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "pos", "type": "Any"}]