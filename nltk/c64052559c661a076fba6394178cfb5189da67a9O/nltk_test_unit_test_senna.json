[{"lineNumber": 20, "col_offset": 0, "nodeName": "senna_is_installed", "type": "bool"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_senna_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_senna_tagger", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_senna_chunk_tagger", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_senna_ner_tagger", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 62, "nodeName": "sep", "type": "str"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sent", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "result", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[str, str, str, str]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tagger", "type": "nltk.tag.senna.SennaTagger"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "chktagger", "type": "nltk.tag.senna.SennaChunkTagger"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "expected_1", "type": "List[Tuple[str, str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "result_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "nertagger", "type": "nltk.tag.senna.SennaNERTagger"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected_1", "type": "List[Tuple[str, str]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "expected_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "normpath", "type": "Callable"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "Senna", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "result", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "expected", "type": "List[Tuple[str, str, str, str]]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "SennaTagger", "type": "Type[nltk.tag.senna.SennaTagger]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "SennaChunkTagger", "type": "Type[nltk.tag.senna.SennaChunkTagger]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "expected_1", "type": "List[Tuple[str, str]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "result_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "expected_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "SennaNERTagger", "type": "Type[nltk.tag.senna.SennaNERTagger]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "SENNA_EXECUTABLE_PATH", "type": "str"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "expected_1", "type": "List[Tuple[str, str]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "expected_2", "type": "List[Tuple[str, str]]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "tagger", "type": "nltk.tag.senna.SennaTagger"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "chktagger", "type": "nltk.tag.senna.SennaChunkTagger"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "bio_to_chunks", "type": "Callable[[Any, Any], Generator[Tuple[str, str], Any, None]]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "nertagger", "type": "nltk.tag.senna.SennaNERTagger"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "nertagger", "type": "nltk.tag.senna.SennaNERTagger"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "sent", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "chktagger", "type": "nltk.tag.senna.SennaChunkTagger"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "pipeline", "type": "Any"}]