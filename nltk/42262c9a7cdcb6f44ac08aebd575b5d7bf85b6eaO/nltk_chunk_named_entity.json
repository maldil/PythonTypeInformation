[{"lineNumber": 173, "col_offset": 0, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "simplify_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "postag_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "load_ace_data", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "load_ace_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "cmp_chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 310, "col_offset": 0, "nodeName": "build_model", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "ClassifierBasedTagger", "type": "Type[nltk.tag.sequential.ClassifierBasedTagger]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "_classifier_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "_english_wordlist", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_feature_detector", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "ChunkParserI", "type": "Type[nltk.chunk.api.ChunkParserI]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_tagged_to_parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_parse_to_tagged", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "subfunc", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "words", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "tag_iter", "type": "Generator[Any, Any, None]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "newtree", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "child", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "newtree", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "roots", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "annfile", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "entities", "type": "List[Tuple[int, int, Any]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "entity", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "entity_types", "type": "Set[Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "correct", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "guessed", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "ellipsis", "type": "bool"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "train_paths", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "train_trees", "type": "Generator[Any, Any, None]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "train_data", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "cp", "type": "NEChunkParser"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "eval_paths", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "eval_trees", "type": "Generator[Any, Any, None]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "eval_data", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "chunkscore", "type": "nltk.chunk.util.ChunkScore"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "outfilename", "type": "str"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "cp", "type": "NEChunkParser"}, {"lineNumber": 347, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "wl", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pos", "type": "Union[str, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "features", "type": "Dict[str, Optional[Union[bool, str, int, Any]]]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "features", "type": "Dict[str, Optional[Union[bool, str, int, Any]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tagged", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "corpus", "type": "List[List[Tuple[Any, str]]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_tagger", "type": "NEChunkParserTagger"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "sent", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "tagged_tokens", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "sent", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "toks", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "sent", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "toks", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 174, "col_offset": 7, "nodeName": "match", "type": "Callable"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "word", "type": "Any"}, {"lineNumber": 174, "col_offset": 59, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "pos", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "textfile", "type": "Any"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "infile", "type": "file"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "xml", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "findall", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "typ", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "text", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "mention", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "infile", "type": "file"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "text", "type": "str"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "subfunc", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "text", "type": "str"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "text", "type": "str"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 260, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "toks", "type": "Any"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "_parse_to_tagged", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "correct", "type": "Any"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "_parse_to_tagged", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "guessed", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "correct", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "guessed", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "load_ace_data", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 32, "nodeName": "train_paths", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 321, "col_offset": 9, "nodeName": "NEChunkParser", "type": "Type[NEChunkParser]"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "train_data", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "load_ace_data", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "eval_paths", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 43, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "ChunkScore", "type": "Type[nltk.chunk.util.ChunkScore]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "correct", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "eval_data", "type": "List[Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "guess", "type": "Any"}, {"lineNumber": 336, "col_offset": 10, "nodeName": "chunkscore", "type": "nltk.chunk.util.ChunkScore"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 338, "col_offset": 54, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "outfile", "type": "file"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "wl", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "_en_wordlist", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "simplify_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "prevword", "type": "None"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "prevprevword", "type": "None"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "prevpos", "type": "None"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "prevprevpos", "type": "None"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "prevshape", "type": "None"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "prevtag", "type": "None"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "prevprevtag", "type": "None"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "nextword", "type": "None"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "nextnextword", "type": "None"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "nextpos", "type": "None"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "nextnextpos", "type": "None"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "pos", "type": "Union[str, Any]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "word", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "prevtag", "type": "Optional[Any]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "prevpos", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "nextpos", "type": "Optional[Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "prevword", "type": "Optional[Any]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "nextword", "type": "Optional[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_train", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], List[Tuple[Any, Any]]]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "_tagged_to_parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "tagged", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "NEChunkParser"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "NEChunkParserTagger", "type": "Type[NEChunkParserTagger]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "tok", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "tag", "type": "Any"}, {"lineNumber": 174, "col_offset": 7, "nodeName": "re", "type": "module"}, {"lineNumber": 174, "col_offset": 59, "nodeName": "re", "type": "module"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "match", "type": "Callable"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "word", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "s", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "child", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "subchild", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "child", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "dirs", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "walk", "type": "Callable"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "root", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "annfile", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "getroot", "type": "Callable[[], xml.etree.ElementTree.Element]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "xml", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "findall", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "s", "type": "int"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "e", "type": "int"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "textfile", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "typ", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "s", "type": "int"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "typ", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "entities", "type": "List[Tuple[int, int, Any]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 272, "col_offset": 14, "nodeName": "toks", "type": "Any"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "toks", "type": "Any"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "NEChunkParser", "type": "Type[NEChunkParser]"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "NEChunkParser", "type": "Type[NEChunkParser]"}, {"lineNumber": 299, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "ct", "type": "str"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "gt", "type": "str"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "ct", "type": "str"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "gt", "type": "str"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "ellipsis", "type": "bool"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "find", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "find", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "find", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "find", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "postag_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "t", "type": "Any"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "train_trees", "type": "Generator[Any, Any, None]"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "find", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "postag_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "t", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "eval_trees", "type": "Generator[Any, Any, None]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "score", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "correct", "type": "Any"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "guess", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 339, "col_offset": 44, "nodeName": "outfilename", "type": "str"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "outfilename", "type": "str"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "cp", "type": "NEChunkParser"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "outfile", "type": "file"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "ClassifierBasedTagger", "type": "Type[nltk.tag.sequential.ClassifierBasedTagger]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "train", "type": "List[List[Tuple[Any, str]]]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "_classifier_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "MaxentClassifier", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "_en_wordlist", "type": "Set[Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "wl", "type": "Set[Any]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "_en_wordlist", "type": "Set[Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "index", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "prevword", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "prevprevword", "type": "None"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "prevpos", "type": "Union[str, Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "prevprevpos", "type": "None"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "prevtag", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "prevshape", "type": "None"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "prevprevtag", "type": "None"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "prevword", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "prevprevword", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "prevpos", "type": "Union[str, Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "prevprevpos", "type": "Union[str, Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "prevtag", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "prevprevtag", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "prevshape", "type": "str"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "index", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "nextword", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "nextpos", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "nextnextword", "type": "None"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "nextnextpos", "type": "None"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "nextword", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "nextpos", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "nextnextword", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "nextnextpos", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "word", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "word", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "word", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 59, "nodeName": "nextpos", "type": "Optional[Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "pos", "type": "Union[str, Any]"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "prevtag", "type": "Optional[Any]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "prevshape", "type": "Optional[str]"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "prevtag", "type": "Optional[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "NEChunkParser"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "_tagger", "type": "NEChunkParserTagger"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "NEChunkParser"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "_parse_to_tagged", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "s", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "corpus", "type": "List[List[Tuple[Any, str]]]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "child", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "tok", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "re", "type": "module"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "re", "type": "module"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "match", "type": "Callable"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "word", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "word", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "pos", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "pos_tag", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "words", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "skip_bnews", "type": "bool"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "entity", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "infile", "type": "file"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "entities", "type": "List[Tuple[int, int, Any]]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "s", "type": "int"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "s", "type": "int"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "e", "type": "int"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "s", "type": "int"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "extend", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "toks", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "word_tokenize", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "s", "type": "int"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "typ", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "entities", "type": "List[Tuple[int, int, Any]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "toks", "type": "Any"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "ellipsis", "type": "bool"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "ellipsis", "type": "bool"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "cp", "type": "NEChunkParser"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "chunkscore", "type": "nltk.chunk.util.ChunkScore"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "cmp_chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "correct", "type": "Any"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "guess", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "pickle", "type": "module"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "index", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "simplify_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "lower", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "simplify_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "simplify_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "history", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "prevword", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "lower", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "lower", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "lower", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "lower", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "_english_wordlist", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "lower", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "self", "type": "NEChunkParser"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "self", "type": "NEChunkParser"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "tok", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "child", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "re", "type": "module"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "re", "type": "module"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "istitle", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "newtree", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "newtree", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "child", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "sent", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "split", "type": "Callable"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "textfile", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "infile", "type": "file"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "entity", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "entities", "type": "List[Tuple[int, int, Any]]"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "s", "type": "int"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "e", "type": "int"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "typ", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "s", "type": "int"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "e", "type": "int"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "typ", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "toks", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "word_tokenize", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "toks", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "text", "type": "str"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "s", "type": "int"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "s", "type": "int"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "e", "type": "int"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "s", "type": "int"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "extend", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "toks", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "word_tokenize", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "ct", "type": "str"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "gt", "type": "str"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "w", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "correct", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "words", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "history", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "self", "type": "NEChunkParserTagger"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "word", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "sent", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "tag", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "child", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "toks", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "toks", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "word", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "islower", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "label", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "subchild", "type": "Any"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "next", "type": "Callable"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "tag_iter", "type": "Generator[Any, Any, None]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "load_ace_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 69, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "ET", "type": "module"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "mention", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "start", "type": "Any"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "text", "type": "str"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "toks", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "word_tokenize", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "toks", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "typ", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "text", "type": "str"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "ct", "type": "str"}, {"lineNumber": 302, "col_offset": 53, "nodeName": "gt", "type": "str"}, {"lineNumber": 302, "col_offset": 57, "nodeName": "w", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "words", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "sent", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "tag", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "sent", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "toks", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "tok", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "word", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "child", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "newtree", "type": "Any"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "next", "type": "Callable"}, {"lineNumber": 205, "col_offset": 51, "nodeName": "tag_iter", "type": "Generator[Any, Any, None]"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "join", "type": "Callable"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "root", "type": "Any"}, {"lineNumber": 218, "col_offset": 65, "nodeName": "f", "type": "Any"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "sent", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "mention", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "s", "type": "int"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "text", "type": "str"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "tag", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "tok", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "tok", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "label", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "path", "type": "module"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "mention", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "text", "type": "str"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "s", "type": "int"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "index", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "index", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "index", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "sent", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "label", "type": "Any"}, {"lineNumber": 148, "col_offset": 79, "nodeName": "tag", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "sent", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "child", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "label", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "os", "type": "module"}, {"lineNumber": 269, "col_offset": 40, "nodeName": "s", "type": "int"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "e", "type": "int"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "text", "type": "str"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "sent", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "tag", "type": "Any"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "tok", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "child", "type": "Any"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "s", "type": "int"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "e", "type": "int"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "sent", "type": "Any"}]