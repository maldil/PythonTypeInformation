[{"lineNumber": 13, "col_offset": 0, "nodeName": "compute_type_raised_semantics", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "compute_function_semantics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "compute_composition_semantics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "compute_substitution_semantics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "semantics", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "parent", "type": "None"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "core", "type": "nltk.sem.logic.ApplicationExpression"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "new_argument", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "new_term", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "core", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "parent", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "core", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "Variable", "type": "Type[nltk.sem.logic.Variable]"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "ApplicationExpression", "type": "Type[nltk.sem.logic.ApplicationExpression]"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "core", "type": "Any"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "parent", "type": "Optional[Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "term", "type": "nltk.sem.logic.ApplicationExpression"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "core", "type": "nltk.sem.logic.ApplicationExpression"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "semantics", "type": "nltk.sem.logic.ApplicationExpression"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "core", "type": "nltk.sem.logic.ApplicationExpression"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "semantics", "type": "Union[nltk.sem.logic.ApplicationExpression, Any]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "simplify", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "argument", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "variable", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "argument", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "simplify", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "simplify", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "variable", "type": "Any"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "new_term", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "core", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "free", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "unique_variable", "type": "Callable[..., nltk.sem.logic.Variable]"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "FunctionVariableExpression", "type": "Type[nltk.sem.logic.FunctionVariableExpression]"}, {"lineNumber": 23, "col_offset": 60, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "parent", "type": "Optional[Any]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "argument", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "simplify", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "term", "type": "Any"}, {"lineNumber": 40, "col_offset": 80, "nodeName": "LambdaExpression", "type": "Type[nltk.sem.logic.LambdaExpression]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "function", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "core", "type": "Any"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "var", "type": "nltk.sem.logic.Variable"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "ApplicationExpression", "type": "Type[nltk.sem.logic.ApplicationExpression]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "argument", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "argument", "type": "Any"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "function", "type": "Any"}, {"lineNumber": 40, "col_offset": 105, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 109, "nodeName": "function", "type": "Any"}, {"lineNumber": 41, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "argument", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "ApplicationExpression", "type": "Type[nltk.sem.logic.ApplicationExpression]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "argument", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "ApplicationExpression", "type": "Type[nltk.sem.logic.ApplicationExpression]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "term", "type": "Any"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "new_argument", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "ApplicationExpression", "type": "Type[nltk.sem.logic.ApplicationExpression]"}, {"lineNumber": 37, "col_offset": 69, "nodeName": "function", "type": "Any"}, {"lineNumber": 37, "col_offset": 79, "nodeName": "term", "type": "Any"}, {"lineNumber": 43, "col_offset": 51, "nodeName": "VariableExpression", "type": "Callable[[Any], Union[nltk.sem.logic.ConstantExpression, nltk.sem.logic.FunctionVariableExpression, nltk.sem.logic.IndividualVariableExpression]]"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "variable", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "function", "type": "Any"}, {"lineNumber": 37, "col_offset": 79, "nodeName": "argument", "type": "Any"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "function", "type": "Any"}]