[{"lineNumber": 45, "col_offset": 0, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "TestCase", "type": "Type[tensorflow.python.keras.keras_parameterized.TestCase]"}, {"lineNumber": 683, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 703, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 703, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 891, "col_offset": 32, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 891, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1018, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1018, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1085, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "sess", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "sess", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 683, "col_offset": 26, "nodeName": "test", "type": "module"}, {"lineNumber": 703, "col_offset": 26, "nodeName": "test", "type": "module"}, {"lineNumber": 703, "col_offset": 41, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 891, "col_offset": 32, "nodeName": "test", "type": "module"}, {"lineNumber": 891, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1018, "col_offset": 37, "nodeName": "test", "type": "module"}, {"lineNumber": 1018, "col_offset": 52, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1085, "col_offset": 33, "nodeName": "test", "type": "module"}, {"lineNumber": 1132, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "Session", "type": "Any"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "run", "type": "Any"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "run", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "grad_function", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "indexed_slice", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "price_a", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "price_b", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "animal", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "price3", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "price1", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "price2", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "some_sparse_column", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "some_embedding_column", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float, float, float, float], Tuple[float, float, float, float, float], Tuple[float, float, float, float, float]]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "body_style", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "one_hot_body_style", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "country", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "embedded_country", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "body_style", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "one_hot_body_style", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "country", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "embedded_country", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "price_data", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "body_style_data", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "country_data", "type": "numpy.ndarray"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "price", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "animal", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[int, int], Tuple[float, float]]"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "partitioner", "type": "None"}, {"lineNumber": 773, "col_offset": 7, "nodeName": "partition_variables", "type": "Any"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 788, "col_offset": 7, "nodeName": "partition_variables", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 800, "col_offset": 7, "nodeName": "partition_variables", "type": "Any"}, {"lineNumber": 816, "col_offset": 7, "nodeName": "use_safe_embedding_lookup", "type": "Any"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[int, int], Tuple[float, float]]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "sparse_input_a", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "sparse_input_b", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "sparse_input_c", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "sparse_input_d", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float, float, float, float, float, float, float], Tuple[float, float, float, float, float, float, float, float]]"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "categorical_column_c", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "categorical_column_d", "type": "Any"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "features", "type": "Dict[str, tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 990, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 990, "col_offset": 13, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 993, "col_offset": 7, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "shared_embedding_vars", "type": "Any"}, {"lineNumber": 999, "col_offset": 28, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "ab", "type": "Any"}, {"lineNumber": 1073, "col_offset": 4, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 1098, "col_offset": 4, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 1103, "col_offset": 4, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "indicator_column_a", "type": "Any"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 1133, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "session", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "config", "type": "None"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "sess", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "sess", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "offset", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "implicit_grad", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "scale_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "grad_function", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "indices", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 50, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "columns", "type": "Generator[Any, Any, None]"}, {"lineNumber": 240, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[List[float]]]]"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 322, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "cols_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 336, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 348, "col_offset": 14, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 354, "col_offset": 6, "nodeName": "net1", "type": "Any"}, {"lineNumber": 355, "col_offset": 6, "nodeName": "net2", "type": "Any"}, {"lineNumber": 364, "col_offset": 13, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 378, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 406, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 410, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 420, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "categorical_column_with_hash_bucket", "type": "Any"}, {"lineNumber": 436, "col_offset": 28, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "some_sparse_column", "type": "Any"}, {"lineNumber": 440, "col_offset": 6, "nodeName": "features", "type": "Dict[str, List[List[str]]]"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 6, "nodeName": "expected_var_names", "type": "List[str]"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 464, "col_offset": 45, "nodeName": "shared_embedding_columns_v2", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 6, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 495, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "shared_embedding_columns_v2", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 501, "col_offset": 36, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "features1", "type": "Dict[str, Any]"}, {"lineNumber": 553, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float, float, float, float], Tuple[float, float, float, float, float], Tuple[float, float, float, float, float]]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 561, "col_offset": 45, "nodeName": "body_style", "type": "Any"}, {"lineNumber": 564, "col_offset": 14, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 566, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "country", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 592, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 610, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 618, "col_offset": 45, "nodeName": "body_style", "type": "Any"}, {"lineNumber": 621, "col_offset": 14, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 623, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "country", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 637, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 640, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 666, "col_offset": 24, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 676, "col_offset": 36, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 678, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 690, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 695, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "partition_variables", "type": "Any"}, {"lineNumber": 755, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 770, "col_offset": 25, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 774, "col_offset": 6, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 776, "col_offset": 6, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 783, "col_offset": 6, "nodeName": "l", "type": "Any"}, {"lineNumber": 784, "col_offset": 6, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 787, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 787, "col_offset": 37, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 799, "col_offset": 40, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 813, "col_offset": 24, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[int, int], Tuple[float, float]]"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 849, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 864, "col_offset": 25, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 866, "col_offset": 23, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 878, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 878, "col_offset": 37, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 887, "col_offset": 24, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[int, int], Tuple[float, float]]"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 902, "col_offset": 21, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 908, "col_offset": 21, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 952, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 954, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 956, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 958, "col_offset": 27, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 961, "col_offset": 24, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 961, "col_offset": 45, "nodeName": "shared_embedding_columns_v2", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "embedding_column_c", "type": "Any"}, {"lineNumber": 966, "col_offset": 24, "nodeName": "embedding_column_d", "type": "Any"}, {"lineNumber": 966, "col_offset": 45, "nodeName": "shared_embedding_columns_v2", "type": "Any"}, {"lineNumber": 973, "col_offset": 15, "nodeName": "sparse_input_a", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 974, "col_offset": 15, "nodeName": "sparse_input_b", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "sparse_input_c", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 976, "col_offset": 15, "nodeName": "sparse_input_d", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 983, "col_offset": 29, "nodeName": "features", "type": "Dict[str, tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 986, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 986, "col_offset": 37, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 992, "col_offset": 21, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 992, "col_offset": 40, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1004, "col_offset": 24, "nodeName": "embedding_values", "type": "Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float]]"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1006, "col_offset": 24, "nodeName": "expected_lookups", "type": "Tuple[Tuple[float, float, float, float, float, float, float, float], Tuple[float, float, float, float, float, float, float, float]]"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "_test_dense_features", "type": "Any"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "_test_dense_features", "type": "Any"}, {"lineNumber": 1028, "col_offset": 17, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1029, "col_offset": 8, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1030, "col_offset": 13, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1032, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1033, "col_offset": 42, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1051, "col_offset": 17, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1053, "col_offset": 13, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 1055, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1057, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1057, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1058, "col_offset": 21, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 1058, "col_offset": 42, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 1059, "col_offset": 19, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1060, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1061, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1062, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 1063, "col_offset": 57, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 1064, "col_offset": 57, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 1065, "col_offset": 57, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 1072, "col_offset": 9, "nodeName": "crossed_column", "type": "Any"}, {"lineNumber": 1075, "col_offset": 17, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1075, "col_offset": 34, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1076, "col_offset": 13, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 1078, "col_offset": 16, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 1078, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 1080, "col_offset": 19, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1081, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1091, "col_offset": 19, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 1098, "col_offset": 27, "nodeName": "sequence_categorical_column_with_identity", "type": "Any"}, {"lineNumber": 1100, "col_offset": 25, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 1103, "col_offset": 18, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1108, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "SparseTensorValue", "type": "Type[tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape]"}, {"lineNumber": 1120, "col_offset": 27, "nodeName": "sequence_categorical_column_with_identity", "type": "Any"}, {"lineNumber": 1122, "col_offset": 25, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 1122, "col_offset": 45, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 1124, "col_offset": 18, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1129, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1133, "col_offset": 2, "nodeName": "test", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "_embedding_column_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "variables", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "_var_offset", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "offset", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "embedding_values", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "_embedding_column_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "variables", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "variables", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "_embedding_column_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "scale_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "backprop", "type": "module"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "indexed_slice", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 299, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 310, "col_offset": 38, "nodeName": "features", "type": "Dict[str, List[List[List[float]]]]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 320, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 322, "col_offset": 47, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 332, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "cols_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "fc", "type": "module"}, {"lineNumber": 348, "col_offset": 14, "nodeName": "fc", "type": "module"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 354, "col_offset": 50, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 364, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "sess", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "sess", "type": "Any"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 436, "col_offset": 28, "nodeName": "fc", "type": "module"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 443, "col_offset": 18, "nodeName": "some_embedding_column", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "features", "type": "Dict[str, List[List[str]]]"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "features", "type": "Dict[str, List[List[str]]]"}, {"lineNumber": 447, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "assertItemsEqual", "type": "Any"}, {"lineNumber": 454, "col_offset": 10, "nodeName": "expected_var_names", "type": "List[str]"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 464, "col_offset": 45, "nodeName": "fc", "type": "module"}, {"lineNumber": 465, "col_offset": 9, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 465, "col_offset": 31, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 481, "col_offset": 38, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 482, "col_offset": 33, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 483, "col_offset": 33, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "assertItemsEqual", "type": "Any"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 495, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "fc", "type": "module"}, {"lineNumber": 499, "col_offset": 9, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 499, "col_offset": 31, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 516, "col_offset": 33, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 535, "col_offset": 33, "nodeName": "features1", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "assertItemsEqual", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "fc", "type": "module"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 564, "col_offset": 14, "nodeName": "fc", "type": "module"}, {"lineNumber": 566, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 567, "col_offset": 42, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 589, "col_offset": 10, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "fc", "type": "module"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 621, "col_offset": 14, "nodeName": "fc", "type": "module"}, {"lineNumber": 623, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 624, "col_offset": 42, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 628, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "sparse_placeholder", "type": "Any"}, {"lineNumber": 629, "col_offset": 51, "nodeName": "string", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 631, "col_offset": 41, "nodeName": "string", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 637, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 640, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 10, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "constant", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 669, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 670, "col_offset": 32, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 674, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 674, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 677, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 678, "col_offset": 9, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "fc", "type": "module"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 695, "col_offset": 39, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 697, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 698, "col_offset": 6, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 754, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 770, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 771, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 774, "col_offset": 20, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 775, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 777, "col_offset": 10, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 783, "col_offset": 10, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 784, "col_offset": 23, "nodeName": "l", "type": "Any"}, {"lineNumber": 787, "col_offset": 18, "nodeName": "ops", "type": "module"}, {"lineNumber": 787, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 789, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 798, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 798, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "ops", "type": "module"}, {"lineNumber": 799, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 806, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 810, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 811, "col_offset": 18, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 813, "col_offset": 42, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 814, "col_offset": 42, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 814, "col_offset": 56, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 817, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 846, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 846, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 847, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 848, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 848, "col_offset": 24, "nodeName": "partition_info", "type": "Any"}, {"lineNumber": 864, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 865, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 866, "col_offset": 23, "nodeName": "fc", "type": "module"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 869, "col_offset": 20, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 874, "col_offset": 15, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 878, "col_offset": 18, "nodeName": "ops", "type": "module"}, {"lineNumber": 878, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 880, "col_offset": 26, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 882, "col_offset": 45, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 884, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 885, "col_offset": 18, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 887, "col_offset": 42, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 888, "col_offset": 42, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 888, "col_offset": 56, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 902, "col_offset": 21, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 908, "col_offset": 21, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 930, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 930, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 931, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 931, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 931, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 932, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 932, "col_offset": 24, "nodeName": "partition_info", "type": "Any"}, {"lineNumber": 952, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 953, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 954, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 955, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 956, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 957, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 958, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 959, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 961, "col_offset": 45, "nodeName": "fc", "type": "module"}, {"lineNumber": 962, "col_offset": 9, "nodeName": "categorical_column_a", "type": "Any"}, {"lineNumber": 962, "col_offset": 31, "nodeName": "categorical_column_b", "type": "Any"}, {"lineNumber": 963, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 964, "col_offset": 20, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 966, "col_offset": 45, "nodeName": "fc", "type": "module"}, {"lineNumber": 967, "col_offset": 9, "nodeName": "categorical_column_c", "type": "Any"}, {"lineNumber": 967, "col_offset": 31, "nodeName": "categorical_column_d", "type": "Any"}, {"lineNumber": 968, "col_offset": 18, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 969, "col_offset": 20, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 970, "col_offset": 18, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 980, "col_offset": 21, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 986, "col_offset": 18, "nodeName": "ops", "type": "module"}, {"lineNumber": 986, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 991, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 991, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 991, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 992, "col_offset": 21, "nodeName": "ops", "type": "module"}, {"lineNumber": 992, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 994, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 998, "col_offset": 6, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1001, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1002, "col_offset": 18, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1005, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1006, "col_offset": 42, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1006, "col_offset": 56, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 1026, "col_offset": 12, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 1028, "col_offset": 17, "nodeName": "df", "type": "module"}, {"lineNumber": 1029, "col_offset": 24, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 1029, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 1030, "col_offset": 13, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1032, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 1032, "col_offset": 37, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1033, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1034, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1046, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 1047, "col_offset": 12, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 1051, "col_offset": 17, "nodeName": "df", "type": "module"}, {"lineNumber": 1052, "col_offset": 24, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 1052, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 1053, "col_offset": 13, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1057, "col_offset": 37, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1058, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1059, "col_offset": 19, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1062, "col_offset": 21, "nodeName": "categorical_column", "type": "Any"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1063, "col_offset": 26, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1065, "col_offset": 26, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "fc", "type": "module"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "fc", "type": "module"}, {"lineNumber": 1072, "col_offset": 9, "nodeName": "fc", "type": "module"}, {"lineNumber": 1072, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 1072, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 1073, "col_offset": 12, "nodeName": "indicator_column", "type": "Any"}, {"lineNumber": 1073, "col_offset": 32, "nodeName": "ab", "type": "Any"}, {"lineNumber": 1075, "col_offset": 17, "nodeName": "df", "type": "module"}, {"lineNumber": 1076, "col_offset": 13, "nodeName": "orig_layer", "type": "Any"}, {"lineNumber": 1078, "col_offset": 16, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 19, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1091, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 1098, "col_offset": 27, "nodeName": "sfc", "type": "module"}, {"lineNumber": 1099, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 1100, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 1103, "col_offset": 18, "nodeName": "df", "type": "module"}, {"lineNumber": 1103, "col_offset": 36, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 1104, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1108, "col_offset": 10, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 1120, "col_offset": 27, "nodeName": "sfc", "type": "module"}, {"lineNumber": 1121, "col_offset": 31, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 1122, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 1124, "col_offset": 18, "nodeName": "df", "type": "module"}, {"lineNumber": 1124, "col_offset": 36, "nodeName": "indicator_column_a", "type": "Any"}, {"lineNumber": 1125, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1129, "col_offset": 10, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "fc", "type": "module"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "partition_info", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "net", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "key", "type": "str"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 239, "col_offset": 51, "nodeName": "features", "type": "Dict[str, List[float]]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "columns", "type": "Generator[Any, Any, None]"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 245, "col_offset": 52, "nodeName": "net", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 266, "col_offset": 40, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 266, "col_offset": 54, "nodeName": "net", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 277, "col_offset": 62, "nodeName": "net", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "df", "type": "module"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "price1", "type": "Any"}, {"lineNumber": 287, "col_offset": 49, "nodeName": "price2", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "net", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 315, "col_offset": 62, "nodeName": "net", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 327, "col_offset": 70, "nodeName": "net", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "df", "type": "module"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "price1", "type": "Any"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "price2", "type": "Any"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 344, "col_offset": 56, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 344, "col_offset": 70, "nodeName": "net", "type": "Any"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "net1", "type": "Any"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "net2", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 371, "col_offset": 34, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 383, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 385, "col_offset": 43, "nodeName": "features", "type": "Dict[str, List[List[float]]]"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 398, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 400, "col_offset": 51, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "_initialized_session", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 447, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 483, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 516, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 516, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 518, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 524, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 535, "col_offset": 23, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "constant_op", "type": "module"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "constant_op", "type": "module"}, {"lineNumber": 586, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 589, "col_offset": 10, "nodeName": "df", "type": "module"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "price", "type": "Any"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "one_hot_body_style", "type": "Any"}, {"lineNumber": 589, "col_offset": 55, "nodeName": "embedded_country", "type": "Any"}, {"lineNumber": 591, "col_offset": 32, "nodeName": "net", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 598, "col_offset": 35, "nodeName": "net", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 628, "col_offset": 39, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 629, "col_offset": 51, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 631, "col_offset": 41, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 642, "col_offset": 10, "nodeName": "df", "type": "module"}, {"lineNumber": 642, "col_offset": 28, "nodeName": "price", "type": "Any"}, {"lineNumber": 642, "col_offset": 35, "nodeName": "one_hot_body_style", "type": "Any"}, {"lineNumber": 642, "col_offset": 55, "nodeName": "embedded_country", "type": "Any"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "net", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "run", "type": "Any"}, {"lineNumber": 652, "col_offset": 14, "nodeName": "net", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "constant_op", "type": "module"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 674, "col_offset": 17, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 674, "col_offset": 39, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "df", "type": "module"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "price", "type": "Any"}, {"lineNumber": 677, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "assertRaisesOpError", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 680, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "fc", "type": "module"}, {"lineNumber": 692, "col_offset": 14, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 697, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 697, "col_offset": 20, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 698, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 46, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 700, "col_offset": 60, "nodeName": "net", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 748, "col_offset": 25, "nodeName": "full_shape", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 749, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 751, "col_offset": 68, "nodeName": "shape", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 752, "col_offset": 26, "nodeName": "partition_info", "type": "Any"}, {"lineNumber": 754, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 774, "col_offset": 20, "nodeName": "partitioned_variables", "type": "module"}, {"lineNumber": 775, "col_offset": 9, "nodeName": "variable_scope", "type": "module"}, {"lineNumber": 775, "col_offset": 59, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "fc", "type": "module"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 779, "col_offset": 22, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 780, "col_offset": 36, "nodeName": "use_safe_embedding_lookup", "type": "Any"}, {"lineNumber": 783, "col_offset": 10, "nodeName": "df", "type": "module"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 784, "col_offset": 33, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 787, "col_offset": 37, "nodeName": "ops", "type": "module"}, {"lineNumber": 789, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 792, "col_offset": 10, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 794, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 796, "col_offset": 10, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 798, "col_offset": 31, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 799, "col_offset": 40, "nodeName": "ops", "type": "module"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 10, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 806, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 808, "col_offset": 10, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 810, "col_offset": 18, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 811, "col_offset": 18, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 813, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 813, "col_offset": 56, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 817, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "type", "type": "Any"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 822, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 846, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 846, "col_offset": 27, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 846, "col_offset": 44, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 848, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 873, "col_offset": 39, "nodeName": "embedding_column", "type": "Any"}, {"lineNumber": 878, "col_offset": 37, "nodeName": "ops", "type": "module"}, {"lineNumber": 880, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "ops", "type": "module"}, {"lineNumber": 882, "col_offset": 45, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 884, "col_offset": 18, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 885, "col_offset": 18, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 887, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 887, "col_offset": 56, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 888, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 930, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 930, "col_offset": 27, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 930, "col_offset": 44, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 931, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 931, "col_offset": 23, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 932, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 980, "col_offset": 21, "nodeName": "df", "type": "module"}, {"lineNumber": 986, "col_offset": 37, "nodeName": "ops", "type": "module"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 991, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 991, "col_offset": 31, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 992, "col_offset": 40, "nodeName": "ops", "type": "module"}, {"lineNumber": 994, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 996, "col_offset": 10, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 998, "col_offset": 6, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 998, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1001, "col_offset": 18, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 1002, "col_offset": 18, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 1005, "col_offset": 24, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1005, "col_offset": 38, "nodeName": "shared_embedding_vars", "type": "Any"}, {"lineNumber": 1006, "col_offset": 42, "nodeName": "self", "type": "SharedEmbeddingColumnTest"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1026, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1026, "col_offset": 32, "nodeName": "categorical_column_with_identity", "type": "Any"}, {"lineNumber": 1046, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1047, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1047, "col_offset": 32, "nodeName": "categorical_column_with_vocabulary_list", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1049, "col_offset": 32, "nodeName": "categorical_column_with_hash_bucket", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "df", "type": "module"}, {"lineNumber": 1060, "col_offset": 21, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1063, "col_offset": 26, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1063, "col_offset": 57, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1064, "col_offset": 57, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1065, "col_offset": 26, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1065, "col_offset": 57, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1073, "col_offset": 12, "nodeName": "fc", "type": "module"}, {"lineNumber": 1078, "col_offset": 16, "nodeName": "df", "type": "module"}, {"lineNumber": 1081, "col_offset": 21, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1104, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1108, "col_offset": 30, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 1125, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1129, "col_offset": 30, "nodeName": "sparse_input", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "partitioned_variables", "type": "module"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "fc", "type": "module"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "price", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 266, "col_offset": 40, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "price", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "dense_features", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 299, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "price", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 320, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "price1", "type": "Any"}, {"lineNumber": 322, "col_offset": 38, "nodeName": "price2", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 332, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "cols_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 343, "col_offset": 54, "nodeName": "cols_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 344, "col_offset": 56, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "df", "type": "module"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "price_a", "type": "Any"}, {"lineNumber": 354, "col_offset": 40, "nodeName": "price_b", "type": "Any"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "df", "type": "module"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "price_b", "type": "Any"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "price_a", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 393, "col_offset": 48, "nodeName": "int64", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "DenseFeatures", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "int64", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 410, "col_offset": 30, "nodeName": "price1", "type": "Any"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "price2", "type": "Any"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "OpError", "type": "Any"}, {"lineNumber": 414, "col_offset": 10, "nodeName": "run", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "int64", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "array_ops", "type": "module"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "int64", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "price1", "type": "Any"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "price2", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 483, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 486, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 489, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 516, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 519, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 524, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 538, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 538, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 586, "col_offset": 24, "nodeName": "dense_shape", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 598, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "sess", "type": "Any"}, {"lineNumber": 666, "col_offset": 24, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "df", "type": "module"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "price", "type": "Any"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 692, "col_offset": 14, "nodeName": "sparse_tensor", "type": "module"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "df", "type": "module"}, {"lineNumber": 695, "col_offset": 30, "nodeName": "animal", "type": "Any"}, {"lineNumber": 697, "col_offset": 20, "nodeName": "variables_lib", "type": "module"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "lookup_ops", "type": "module"}, {"lineNumber": 700, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 747, "col_offset": 26, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 747, "col_offset": 43, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 748, "col_offset": 25, "nodeName": "partition_info", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 749, "col_offset": 32, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 751, "col_offset": 29, "nodeName": "vocabulary_size", "type": "int"}, {"lineNumber": 751, "col_offset": 46, "nodeName": "embedding_dimension", "type": "int"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 796, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 808, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 818, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 822, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 822, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 880, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 880, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 880, "col_offset": 49, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 882, "col_offset": 45, "nodeName": "ops", "type": "module"}, {"lineNumber": 981, "col_offset": 25, "nodeName": "embedding_column_b", "type": "Any"}, {"lineNumber": 981, "col_offset": 45, "nodeName": "embedding_column_a", "type": "Any"}, {"lineNumber": 982, "col_offset": 25, "nodeName": "embedding_column_c", "type": "Any"}, {"lineNumber": 982, "col_offset": 45, "nodeName": "embedding_column_d", "type": "Any"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 989, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 989, "col_offset": 31, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 996, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 998, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 1026, "col_offset": 32, "nodeName": "fc", "type": "module"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 1047, "col_offset": 32, "nodeName": "fc", "type": "module"}, {"lineNumber": 1049, "col_offset": 32, "nodeName": "fc", "type": "module"}, {"lineNumber": 1060, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1062, "col_offset": 21, "nodeName": "_feature_columns", "type": "Any"}, {"lineNumber": 1081, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "fc", "type": "module"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 299, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "df", "type": "module"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "price", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 320, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 332, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 342, "col_offset": 50, "nodeName": "price1", "type": "Any"}, {"lineNumber": 343, "col_offset": 64, "nodeName": "price2", "type": "Any"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "df", "type": "module"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "animal", "type": "Any"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "df", "type": "module"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "price1", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "price2", "type": "Any"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 393, "col_offset": 48, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "df", "type": "module"}, {"lineNumber": 400, "col_offset": 26, "nodeName": "price1", "type": "Any"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "price2", "type": "Any"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "price3", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "self", "type": "DenseFeaturesTest"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "errors", "type": "module"}, {"lineNumber": 414, "col_offset": 10, "nodeName": "sess", "type": "Any"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "dtypes", "type": "module"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 486, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 489, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 519, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 538, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 538, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 654, "col_offset": 37, "nodeName": "price_data", "type": "numpy.ndarray"}, {"lineNumber": 655, "col_offset": 42, "nodeName": "body_style_data", "type": "tensorflow.python.framework.sparse_tensor.namedtuple_SparseTensorValue_indices_values_dense_shape"}, {"lineNumber": 656, "col_offset": 39, "nodeName": "country_data", "type": "numpy.ndarray"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "ops", "type": "module"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 792, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 792, "col_offset": 33, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 796, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 796, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 796, "col_offset": 33, "nodeName": "global_vars", "type": "Any"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 804, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 804, "col_offset": 33, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 808, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 808, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 808, "col_offset": 33, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 818, "col_offset": 37, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 822, "col_offset": 27, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 996, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 996, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 996, "col_offset": 33, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 998, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 998, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 998, "col_offset": 55, "nodeName": "trainable_vars", "type": "Any"}, {"lineNumber": 1037, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 1062, "col_offset": 21, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 212, "col_offset": 10, "nodeName": "categorical_column_with_hash_bucket", "type": "Any"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 489, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 519, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 538, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "ops", "type": "module"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 586, "col_offset": 24, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 654, "col_offset": 18, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 655, "col_offset": 18, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 656, "col_offset": 18, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 680, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 10, "nodeName": "fc", "type": "module"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "fc", "type": "module"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "fc", "type": "module"}, {"lineNumber": 414, "col_offset": 35, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "ops", "type": "module"}, {"lineNumber": 680, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 37, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 822, "col_offset": 27, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 818, "col_offset": 37, "nodeName": "ops", "type": "module"}, {"lineNumber": 822, "col_offset": 27, "nodeName": "ops", "type": "module"}]