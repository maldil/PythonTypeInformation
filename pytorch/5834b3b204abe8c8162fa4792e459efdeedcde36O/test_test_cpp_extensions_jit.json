[{"lineNumber": 30, "col_offset": 0, "nodeName": "remove_build_path", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "TEST_CUDA", "type": "Any"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "TEST_CUDNN", "type": "bool"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "TEST_ROCM", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "IS_WINDOWS", "type": "bool"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "tearDownClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_jit_compile_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_jit_cuda_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "_run_jit_cuda_archflags", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_jit_cudnn_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "test_inline_jit_compile_extension_with_functions_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_inline_jit_compile_extension_with_functions_as_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "test_inline_jit_compile_extension_multiple_sources_and_no_functions", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "test_inline_jit_compile_extension_throws_when_functions_is_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "test_lenient_flag_handling_in_jit_extensions", "type": "Callable[[Any], Any]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "test_reload_jit_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "test_cpp_frontend_module_has_same_output_as_python", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "test_cpp_frontend_module_python_inter_op", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "test_cpp_frontend_module_has_up_to_date_attributes", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "test_cpp_frontend_module_python_inter_op_with_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "test_returns_shared_library_path_when_is_python_module_is_true", "type": "Callable[[Any], Any]"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "test_set_default_type_also_changes_aten_default_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "test_compilation_error_formatting", "type": "Callable[[Any], Any]"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "test_warning", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "test_autograd_from_cpp", "type": "Callable[[Any], Any]"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "test_custom_compound_op_autograd", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 3, "nodeName": "TEST_CUDA", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "CUDNN_HEADER_EXISTS", "type": "bool"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "TEST_CUDNN", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "platform", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "default_build_root", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "common", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "compile", "type": "Callable[[Any], Any]"}, {"lineNumber": 867, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 19, "col_offset": 42, "nodeName": "CUDA_HOME", "type": "Optional[str]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "hip", "type": "Any"}, {"lineNumber": 21, "col_offset": 76, "nodeName": "ROCM_HOME", "type": "Optional[str]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "TEST_CUDA", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "CUDNN_HEADER_EXISTS", "type": "bool"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "sys", "type": "module"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "platform", "type": "str"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "get_default_build_root", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "default_build_root", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "old_working_dir", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "doubler", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "old_envvar", "type": "Optional[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "capability", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "archflags", "type": "Dict[str, Union[Tuple[List[str], None], Tuple[List[str], List[str]]]]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "IS_WINDOWS", "type": "bool"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "cpp_source1", "type": "str"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "cpp_source2", "type": "str"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 469, "col_offset": 71, "nodeName": "double", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "extension", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "cpp_linear", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "cpp_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "cpp_output", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "python_output", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "extension", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "old_dtype", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "net2", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "biased_input", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "output_before", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "output_after", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "nb", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "extension", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "extension", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "cpu_parameters", "type": "List[Any]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "source", "type": "str"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "initial_default", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "pattern", "type": "str"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "source", "type": "str"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "cpp_tensor_name", "type": "str"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "source", "type": "str"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "Function", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "test_backward_deadlock", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 832, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "source", "type": "str"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "run_tests", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "version", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "version", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "CUDA_HOME", "type": "Optional[str]"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "default_build_root", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "old_working_dir", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "remove_build_path", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "remove_build_path", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "tanh_add", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "exp_add", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "Doubler", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "elf_or_ptx", "type": "str"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "lib_ext", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "ext_filename", "type": "str"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "command", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "p", "type": "subprocess.Popen[str]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "output", "type": "unicode"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "err", "type": "unicode"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "actual_arches", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "expected_arches", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "flags", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "IS_WINDOWS", "type": "bool"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "get_device_capability", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "flags", "type": "str"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "expected", "type": "Union[Tuple[List[str], None], Tuple[List[str], List[str]]]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "extra_ldflags", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "extra_ldflags", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "cudnn_relu", "type": "Any"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 218, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "y_incorrect", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "tanh_add", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "sin_add", "type": "Any"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "cos_add", "type": "Any"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "cos_add", "type": "Any"}, {"lineNumber": 376, "col_offset": 66, "nodeName": "x", "type": "Any"}, {"lineNumber": 376, "col_offset": 69, "nodeName": "y", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "half_test", "type": "Any"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 458, "col_offset": 17, "nodeName": "compile", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "compile", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "compile", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "compile", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 469, "col_offset": 71, "nodeName": "torch", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "Net", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "to", "type": "Any"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "forward", "type": "Any"}, {"lineNumber": 487, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 488, "col_offset": 38, "nodeName": "input", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "cpp_output", "type": "Any"}, {"lineNumber": 489, "col_offset": 37, "nodeName": "python_output", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 497, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 497, "col_offset": 59, "nodeName": "grad", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "double", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 524, "col_offset": 63, "nodeName": "net", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "forward", "type": "Any"}, {"lineNumber": 528, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "get_default_dtype", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "float64", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "old_dtype", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 538, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 538, "col_offset": 62, "nodeName": "old_dtype", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "training", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "training", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 570, "col_offset": 24, "nodeName": "training", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 575, "col_offset": 24, "nodeName": "forward", "type": "Any"}, {"lineNumber": 575, "col_offset": 36, "nodeName": "biased_input", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "set_bias", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 580, "col_offset": 23, "nodeName": "forward", "type": "Any"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "biased_input", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "output_before", "type": "Any"}, {"lineNumber": 582, "col_offset": 43, "nodeName": "output_after", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 586, "col_offset": 13, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "np", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 589, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "named_buffers", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 594, "col_offset": 29, "nodeName": "nb", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "add_new_parameter", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "add_new_buffer", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "add_new_submodule", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 627, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 634, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "add_new_parameter", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "add_new_parameter", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "add_new_buffer", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "add_new_buffer", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "add_new_submodule", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "add_new_submodule", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "get_default_dtype", "type": "Any"}, {"lineNumber": 695, "col_offset": 48, "nodeName": "e", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 700, "col_offset": 36, "nodeName": "pattern", "type": "str"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "double", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 747, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 770, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 792, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 836, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "run_back_no_gil", "type": "Any"}, {"lineNumber": 838, "col_offset": 47, "nodeName": "loss", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 861, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "gradcheck", "type": "Callable[..., bool]"}, {"lineNumber": 864, "col_offset": 18, "nodeName": "add", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "common", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "utils", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "z", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "is_ptx", "type": "bool"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "IS_WINDOWS", "type": "bool"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "elf_or_ptx", "type": "str"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "ext_filename", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "command", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "err", "type": "str"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "communicate", "type": "Callable[..., Tuple[str, str]]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "actual_arches", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "expected_arches", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "_check_cuobjdump_output", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "old_envvar", "type": "Optional[str]"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "old_envvar", "type": "Optional[str]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "archflags", "type": "Dict[str, Union[Tuple[List[str], None], Tuple[List[str], List[str]]]]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "archflags", "type": "Dict[str, Union[Tuple[List[str], None], Tuple[List[str], List[str]]]]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "archflags", "type": "Dict[str, Union[Tuple[List[str], None], Tuple[List[str], List[str]]]]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "_run_jit_cuda_archflags", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "flags", "type": "str"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "expected", "type": "Union[Tuple[List[str], None], Tuple[List[str], List[str]]]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "extra_ldflags", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "relu", "type": "Any"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "cudnn_relu", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "y_incorrect", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 325, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 326, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 373, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 374, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "inline_jit_extension_custom_op_cuda", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "cpp_source", "type": "str"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "cuda_source", "type": "str"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 445, "col_offset": 48, "nodeName": "half", "type": "Any"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 476, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "extension", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "cpp_linear", "type": "Any"}, {"lineNumber": 482, "col_offset": 30, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "cpp_linear", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "cpp_linear", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 497, "col_offset": 59, "nodeName": "weight", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "bias", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "extension", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "get_default_dtype", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 520, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 524, "col_offset": 41, "nodeName": "M", "type": "Type[Any]"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "Tanh", "type": "Any"}, {"lineNumber": 524, "col_offset": 68, "nodeName": "Sigmoid", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 530, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 531, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 531, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 544, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 548, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 548, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 549, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 554, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 570, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 575, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 577, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 577, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "bias", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "get_bias", "type": "Any"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "bias", "type": "Any"}, {"lineNumber": 580, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 585, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 586, "col_offset": 13, "nodeName": "net", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 587, "col_offset": 29, "nodeName": "np", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 591, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "net", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 593, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "nb", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "extension", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 606, "col_offset": 29, "nodeName": "_parameters", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "eye", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "_parameters", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 610, "col_offset": 29, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 611, "col_offset": 34, "nodeName": "eye", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "_modules", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "_modules", "type": "Any"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "extension", "type": "Any"}, {"lineNumber": 627, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 629, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 637, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 641, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 642, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 663, "col_offset": 24, "nodeName": "source", "type": "str"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "func", "type": "Any"}, {"lineNumber": 668, "col_offset": 60, "nodeName": "eye", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 680, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 680, "col_offset": 49, "nodeName": "initial_default", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "set_default_dtype", "type": "Any"}, {"lineNumber": 681, "col_offset": 36, "nodeName": "float64", "type": "Any"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 682, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 682, "col_offset": 49, "nodeName": "float64", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "set_default_dtype", "type": "Any"}, {"lineNumber": 683, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 684, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 684, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "set_default_dtype", "type": "Any"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "float16", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 686, "col_offset": 49, "nodeName": "float16", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "set_default_dtype", "type": "Any"}, {"lineNumber": 688, "col_offset": 36, "nodeName": "initial_default", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 695, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "load_inline", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 700, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 700, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 747, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "foo", "type": "Any"}, {"lineNumber": 748, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 761, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "foo", "type": "Any"}, {"lineNumber": 772, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 778, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 783, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 792, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 793, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 824, "col_offset": 23, "nodeName": "gx", "type": "Any"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 833, "col_offset": 36, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "run_back", "type": "Any"}, {"lineNumber": 834, "col_offset": 44, "nodeName": "loss", "type": "Any"}, {"lineNumber": 836, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "test_backward_deadlock", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "source", "type": "str"}, {"lineNumber": 861, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 864, "col_offset": 18, "nodeName": "my", "type": "Any"}, {"lineNumber": 864, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 864, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "backends", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "__file__", "type": "str"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "exp", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "sigmoid_add", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "p", "type": "subprocess.Popen[str]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "output", "type": "str"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "err", "type": "str"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "output", "type": "unicode"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "xx", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "xx", "type": "Any"}, {"lineNumber": 133, "col_offset": 52, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "_check_cuobjdump_output", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "functional", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 220, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "cpp_source1", "type": "str"}, {"lineNumber": 278, "col_offset": 38, "nodeName": "cpp_source2", "type": "str"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "sin", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "sin", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 325, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 326, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "cos", "type": "Any"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "cos", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "utils", "type": "Any"}, {"lineNumber": 373, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 374, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "ops", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "cos", "type": "Any"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "cos", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "tanh_add", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 445, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 453, "col_offset": 28, "nodeName": "code", "type": "str"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "utils", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 482, "col_offset": 30, "nodeName": "cpp_linear", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 484, "col_offset": 39, "nodeName": "cpp_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 485, "col_offset": 37, "nodeName": "cpp_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 497, "col_offset": 25, "nodeName": "cpp_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 59, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "cpp_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "utils", "type": "Any"}, {"lineNumber": 510, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 511, "col_offset": 25, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 512, "col_offset": 27, "nodeName": "Net", "type": "Any"}, {"lineNumber": 515, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "nn", "type": "Any"}, {"lineNumber": 524, "col_offset": 68, "nodeName": "nn", "type": "Any"}, {"lineNumber": 531, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 541, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 543, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 544, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 548, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 548, "col_offset": 52, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "buffers", "type": "Any"}, {"lineNumber": 549, "col_offset": 49, "nodeName": "buffers", "type": "Any"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "modules", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 554, "col_offset": 30, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 563, "col_offset": 37, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 563, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "get_bias", "type": "Any"}, {"lineNumber": 577, "col_offset": 30, "nodeName": "bias", "type": "Any"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "buffers", "type": "Any"}, {"lineNumber": 595, "col_offset": 25, "nodeName": "nb", "type": "Any"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "utils", "type": "Any"}, {"lineNumber": 606, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 610, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 611, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "utils", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 629, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 629, "col_offset": 45, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "net", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 635, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "cpu_parameters", "type": "List[Any]"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 641, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 642, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "utils", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 668, "col_offset": 45, "nodeName": "eye", "type": "Any"}, {"lineNumber": 668, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "utils", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 681, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 682, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 683, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 684, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 686, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "cpp_extension", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 743, "col_offset": 70, "nodeName": "source", "type": "str"}, {"lineNumber": 747, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 749, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 749, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 751, "col_offset": 40, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 753, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 753, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 755, "col_offset": 40, "nodeName": "SystemError", "type": "Type[SystemError]"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 756, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 757, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 757, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 759, "col_offset": 40, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 759, "col_offset": 50, "nodeName": "cpp_tensor_name", "type": "str"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 760, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 761, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 761, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 761, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 765, "col_offset": 70, "nodeName": "source", "type": "str"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 773, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 773, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 776, "col_offset": 40, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 777, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 778, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 778, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 778, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 781, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 781, "col_offset": 40, "nodeName": "SystemError", "type": "Type[SystemError]"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 782, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 783, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 783, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 783, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 787, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 787, "col_offset": 40, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 787, "col_offset": 50, "nodeName": "cpp_tensor_name", "type": "str"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 788, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 789, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 789, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 792, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 793, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 796, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 796, "col_offset": 40, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 797, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 798, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 798, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 801, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 801, "col_offset": 40, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 802, "col_offset": 16, "nodeName": "foo", "type": "Any"}, {"lineNumber": 802, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 803, "col_offset": 33, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 820, "col_offset": 23, "nodeName": "clone", "type": "Any"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "utils", "type": "Any"}, {"lineNumber": 827, "col_offset": 84, "nodeName": "source", "type": "str"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "apply", "type": "Any"}, {"lineNumber": 832, "col_offset": 26, "nodeName": "inp", "type": "Any"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "test_backward_deadlock", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "apply", "type": "Any"}, {"lineNumber": 837, "col_offset": 26, "nodeName": "inp", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "utils", "type": "Any"}, {"lineNumber": 864, "col_offset": 18, "nodeName": "ops", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "doubler", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "forward", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "returncode", "type": "int"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "err", "type": "unicode"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "flags", "type": "Any"}, {"lineNumber": 129, "col_offset": 65, "nodeName": "returncode", "type": "int"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "err", "type": "unicode"}, {"lineNumber": 130, "col_offset": 63, "nodeName": "output", "type": "unicode"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "re", "type": "module"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "flags", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "actual_arches", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "expected_arches", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "err", "type": "unicode"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "output", "type": "unicode"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "utils", "type": "Any"}, {"lineNumber": 162, "col_offset": 40, "nodeName": "expected", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "shutil", "type": "module"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 220, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "utils", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "python_linear", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "cpp_output", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "python_output", "type": "Any"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 511, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 512, "col_offset": 27, "nodeName": "extension", "type": "Any"}, {"lineNumber": 515, "col_offset": 23, "nodeName": "forward", "type": "Any"}, {"lineNumber": 515, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 515, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 524, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 538, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 541, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 541, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 542, "col_offset": 34, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 542, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 543, "col_offset": 34, "nodeName": "buffers", "type": "Any"}, {"lineNumber": 543, "col_offset": 62, "nodeName": "buffers", "type": "Any"}, {"lineNumber": 544, "col_offset": 34, "nodeName": "modules", "type": "Any"}, {"lineNumber": 548, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 548, "col_offset": 52, "nodeName": "net2", "type": "Any"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 549, "col_offset": 49, "nodeName": "net2", "type": "Any"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "net2", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 563, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 628, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 629, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 635, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 637, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "ops", "type": "Any"}, {"lineNumber": 668, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 680, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 682, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 684, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "utils", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 751, "col_offset": 51, "nodeName": "type", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 776, "col_offset": 51, "nodeName": "type", "type": "Any"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 781, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 787, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 796, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 796, "col_offset": 53, "nodeName": "type", "type": "Any"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 801, "col_offset": 17, "nodeName": "self", "type": "TestCppExtensionJIT"}, {"lineNumber": 801, "col_offset": 51, "nodeName": "type", "type": "Any"}, {"lineNumber": 802, "col_offset": 16, "nodeName": "warn_mod", "type": "Any"}, {"lineNumber": 820, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "MyFn", "type": "Type[Any]"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "MyFn", "type": "Type[Any]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 864, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "doubler", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "doubler", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 72, "nodeName": "lib_ext", "type": "str"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "p", "type": "subprocess.Popen[str]"}, {"lineNumber": 129, "col_offset": 65, "nodeName": "p", "type": "subprocess.Popen[str]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "capability", "type": "Any"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "capability", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "tanh_add", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "tanh_add", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "cos_add", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 510, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "M", "type": "Type[Any]"}, {"lineNumber": 510, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 511, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 515, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 541, "col_offset": 34, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 541, "col_offset": 65, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 542, "col_offset": 34, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 542, "col_offset": 71, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 543, "col_offset": 34, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 543, "col_offset": 62, "nodeName": "net", "type": "Any"}, {"lineNumber": 544, "col_offset": 34, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 628, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 635, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 680, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 682, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 684, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 751, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 776, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 796, "col_offset": 53, "nodeName": "t", "type": "Any"}, {"lineNumber": 801, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "version", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 515, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 25, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 541, "col_offset": 65, "nodeName": "net", "type": "Any"}, {"lineNumber": 542, "col_offset": 71, "nodeName": "net", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "torch", "type": "Any"}]