[{"lineNumber": 11, "col_offset": 0, "nodeName": "path", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "aten_native_yaml", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "all_operators_with_namedtuple_return", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_native_functions_yaml", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_namedtuple_return", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 12, "col_offset": 32, "nodeName": "path", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 11, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "operators_found", "type": "Set[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "file", "type": "file"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "operators", "type": "List[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "operators", "type": "List[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "all_covered_operators", "type": "Set[Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "run_tests", "type": "Any"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "aten_native_yaml", "type": "str"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "ret", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "all_operators_with_namedtuple_return", "type": "Set[str]"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "operators_found", "type": "Set[Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "operators", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "all_operators_with_namedtuple_return", "type": "Set[str]"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "all_covered_operators", "type": "Set[Any]"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "yaml", "type": "module"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "all_operators_with_namedtuple_return", "type": "Set[str]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "file", "type": "file"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestNamedTupleAPI"}, {"lineNumber": 46, "col_offset": 80, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "op", "type": "Type[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "f", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "names", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "meth", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "meth", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestNamedTupleAPI"}, {"lineNumber": 106, "col_offset": 86, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "file", "type": "file"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "strip", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 80, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "hasout", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "f", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "y", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "operators", "type": "List[namedtuple_op_operators_input_names_hasout]"}, {"lineNumber": 104, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "operators", "type": "Any"}, {"lineNumber": 106, "col_offset": 86, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "operators_found", "type": "Set[Any]"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "ret", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "ret", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "TestNamedTupleAPI"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 108, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "f", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "TestNamedTupleAPI"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "tup", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "tup", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "check_namedtuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "names", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "check_namedtuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "names", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "meth", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "check_namedtuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "names", "type": "Any"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "y", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "f", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "r", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "op", "type": "namedtuple_op_operators_input_names_hasout"}]