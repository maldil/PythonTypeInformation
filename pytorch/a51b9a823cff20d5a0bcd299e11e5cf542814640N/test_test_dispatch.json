[{"lineNumber": 37, "col_offset": 0, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "Result", "type": "Type[namedtuple_Result_state_table_provenance]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_all_invariants", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "test_def", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_def_impl_schema_mismatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "test_def_with_inference", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "test_def_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "test_impl_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "test_computed_table", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_math_autogradcpu_fallthrough", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "test_computed_table_with_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "test_computed_table_with_autograd", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_autograd_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "test_computed_table_with_ambiguous_autogradother", "type": "Callable[[Any], Any]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_defaultbackend", "type": "Callable[[Any], Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_autograd_defaultbackend", "type": "Callable[[Any], Any]"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "test_computed_table_with_cpu_autograd_math_defaultbackend", "type": "Callable[[Any], Any]"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "test_multiple_def_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "test_def_with_explicit_alias", "type": "Callable[[Any], Any]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "test_multiple_def_alias_defaulting", "type": "Callable[[Any], Any]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "test_multiple_def_alias_mismatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "test_multiple_fallback", "type": "Callable[[Any], Any]"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "test_overwrite_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 757, "col_offset": 27, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "test_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "test_math_autogradcpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "test_defaultbackend_autogradcpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "test_autogradother", "type": "Callable[[Any], Any]"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "test_duplicate_registrations", "type": "Callable[[Any], Any]"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "test_defaultbackend_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "extracted", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "table_entries", "type": "nothing"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "k", "type": "str"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "dispatch_keys", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "extracted", "type": "str"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "namespace_index", "type": "int"}, {"lineNumber": 889, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "split", "type": "nothing"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "t", "type": "nothing"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "table_entries", "type": "nothing"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "namespace_index", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "refs", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "set_to_report", "type": "FrozenSet[int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "last_ctor", "type": "int"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "result", "type": "nothing"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "run_tests", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "table", "type": "nothing"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_dispatch_check_all_invariants", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "__class__", "type": "Type[TestDispatch]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "ctor_order", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "ctor_order", "type": "List[int]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "dtor_order", "type": "Sequence[int]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "dtor_order", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "namespace_index", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "actual_state", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "actual_table", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "check_invariants", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "expect_raises", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "refs", "type": "None"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "op_ix", "type": "int"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "dtor_order", "type": "Sequence[int]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "expect_raises", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "dtor_order", "type": "Sequence[int]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "ctor_order", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "ctor_order", "type": "Sequence[int]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 280, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 350, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 371, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 372, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 382, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 382, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 382, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 404, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 413, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 413, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 428, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 447, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 447, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 447, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 469, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 478, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 478, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 480, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 499, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 499, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 500, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 511, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 511, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 511, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 525, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 533, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 533, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 534, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 544, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 546, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 567, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 568, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 578, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 578, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 580, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 602, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 603, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 614, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 616, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 629, "col_offset": 17, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "state", "type": "nothing"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "table", "type": "nothing"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "state", "type": "nothing"}, {"lineNumber": 641, "col_offset": 37, "nodeName": "table", "type": "nothing"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 642, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 654, "col_offset": 26, "nodeName": "extract_dispatch_table_with_keys", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 654, "col_offset": 59, "nodeName": "table", "type": "nothing"}, {"lineNumber": 654, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 656, "col_offset": 34, "nodeName": "extracted_table", "type": "str"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "state", "type": "nothing"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 689, "col_offset": 34, "nodeName": "state", "type": "nothing"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "state", "type": "nothing"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "state", "type": "nothing"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 732, "col_offset": 15, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "state", "type": "nothing"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 778, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 843, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 875, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 881, "col_offset": 21, "nodeName": "PythonDispatcher", "type": "Type[torch._python_dispatcher.PythonDispatcher]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "startswith", "type": "nothing"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "k", "type": "str"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "entry", "type": "str"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "extracted", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "ops", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_dispatch_check_invariants", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "expected_state", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "expected_table", "type": "Any"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "expected_provenance", "type": "Any"}, {"lineNumber": 109, "col_offset": 66, "nodeName": "setdefault", "type": "Union[Any, Callable]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertMultiLineEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "expected_state", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "actual_state", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertMultiLineEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "expected_table", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "actual_table", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "Result", "type": "Type[namedtuple_Result_state_table_provenance]"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "refs", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "_dispatch_library", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "refs", "type": "Optional[List[Any]]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "check_invariants", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "go", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "ctor_order", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "C", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 371, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "C", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "C", "type": "Any"}, {"lineNumber": 428, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "C", "type": "Any"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 499, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 499, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 525, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 533, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 533, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 544, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 567, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 602, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 614, "col_offset": 66, "nodeName": "dispatch_keys_to_check", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 629, "col_offset": 17, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 641, "col_offset": 37, "nodeName": "result", "type": "nothing"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "C", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "fallback_fallthrough", "type": "Any"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "dispatchTable", "type": "Callable[[], Any]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "dispatchTable", "type": "Callable[[], Any]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "registrations", "type": "Callable[[], Any]"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "dispatchTable", "type": "Callable[[], Any]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "registrations", "type": "Callable[[], Any]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "dispatchTable", "type": "Callable[[], Any]"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "registrations", "type": "Callable[[], Any]"}, {"lineNumber": 877, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 877, "col_offset": 36, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 883, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 884, "col_offset": 16, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 886, "col_offset": 12, "nodeName": "register", "type": "Callable[[Any], None]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "t", "type": "nothing"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 45, "col_offset": 71, "nodeName": "t", "type": "nothing"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "entry", "type": "str"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "C", "type": "Any"}, {"lineNumber": 109, "col_offset": 66, "nodeName": "results", "type": "Union[Any, Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "Result", "type": "Type[namedtuple_Result_state_table_provenance]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "actual_state", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "actual_table", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "actual_provenance", "type": "str"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "expected_provenance", "type": "Any"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "actual_provenance", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "expected_provenance", "type": "Any"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "actual_provenance", "type": "str"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "ops", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "C", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "check_invariants", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "actual", "type": "str"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "actual", "type": "str"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "set_to_report", "type": "FrozenSet[Any]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "ops", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "op_ix", "type": "int"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "discard", "type": "Callable[[Any], None]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "op_ix", "type": "int"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "op_ix", "type": "int"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "set_to_report", "type": "Union[FrozenSet[Any], FrozenSet[int]]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "run_ops", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "ops", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "ctor_order", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "dtor_order", "type": "Sequence[int]"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "go", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "ctor_order", "type": "Sequence[int]"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 670, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 672, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 32, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 702, "col_offset": 22, "nodeName": "def_legacy", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 705, "col_offset": 32, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 715, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 718, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "fallback_fallthrough", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "assertExpectedInline", "type": "Any"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 744, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "commute", "type": "Callable[..., Any]"}, {"lineNumber": 748, "col_offset": 32, "nodeName": "ops", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 877, "col_offset": 13, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 883, "col_offset": 13, "nodeName": "self", "type": "TestPythonDispatcher"}, {"lineNumber": 886, "col_offset": 12, "nodeName": "dispatcher", "type": "torch._python_dispatcher.PythonDispatcher"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "ops", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "_dispatch_dump", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "_dispatch_dump_table", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "ops", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "refs", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "expect_raises", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "_", "type": "nothing"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "expected_provenance", "type": "nothing"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "assertMultiLineEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "actual", "type": "str"}, {"lineNumber": 147, "col_offset": 60, "nodeName": "expected_provenance", "type": "nothing"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "check_invariants", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "dtor_order", "type": "Sequence[int]"}, {"lineNumber": 209, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 209, "col_offset": 63, "nodeName": "ops", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "expect_raises", "type": "Any"}, {"lineNumber": 217, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 63, "nodeName": "ops", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "def_name_t_t", "type": "Any"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "def_name_t_t", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 432, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 527, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 561, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 600, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 631, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 639, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 670, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 672, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 702, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 715, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 718, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "global_m", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "e", "type": "RuntimeError"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 744, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "C", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "C", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "test_namespace", "type": "str"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "results", "type": "Dict[Union[FrozenSet[nothing], FrozenSet[Any]], namedtuple_Result_state_table_provenance]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "Result", "type": "Type[namedtuple_Result_state_table_provenance]"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "actual", "type": "str"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "TestDispatch"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "active_ops", "type": "Set[Any]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "op_ix", "type": "Any"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "ops", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "def_name_t_t", "type": "Any"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "impl_t_t", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 432, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 527, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 561, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 600, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 631, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 639, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "def_", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "e", "type": "RuntimeError"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "actual", "type": "str"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "last_ctor", "type": "int"}, {"lineNumber": 179, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 137, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 77, "nodeName": "ctor_order", "type": "Union[List[int], Any]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 89, "nodeName": "i", "type": "int"}]