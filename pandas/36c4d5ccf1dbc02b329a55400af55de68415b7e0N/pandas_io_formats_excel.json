[{"lineNumber": 31, "col_offset": 4, "nodeName": "__fields__", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "__fields__", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "NAMED_COLORS", "type": "Dict[str, str]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "CSS4_COLORS", "type": "Dict[str, str]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "VERTICAL_MAP", "type": "Dict[str, str]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "BOLD_MAP", "type": "Dict[str, bool]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "ITALIC_MAP", "type": "Dict[str, bool]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "FAMILY_MAP", "type": "Dict[str, int]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "compute_css", "type": "pandas.io.formats.css.CSSResolver"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 378, "col_offset": 50, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 381, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 388, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "max_rows", "type": "int"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "max_cols", "type": "int"}, {"lineNumber": 735, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "row", "type": "int"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "row", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "col", "type": "int"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "col", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "style", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "mergestart", "type": "Optional[int]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "mergestart", "type": "Optional[int]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mergeend", "type": "Optional[int]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "mergeend", "type": "Optional[int]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "CSSResolver", "type": "Type[pandas.io.formats.css.CSSResolver]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "properties", "type": "Dict[str, str]"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "out", "type": "Dict[str, Optional[Union[Dict[str, Optional[str]], Dict[str, Optional[Union[bool, int, float, str]]], Dict[str, Any], Dict[str, Dict[str, Optional[str]]], Dict[str, Optional[Union[bool, str]]]]]]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "out", "type": "Dict[str, Optional[Union[Dict[str, Optional[str]], Dict[str, Optional[Union[bool, int, float, str]]], Dict[str, Any], Dict[str, Dict[str, Optional[str]]], Dict[str, Optional[Union[bool, str]]]]]]"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "vertical_align", "type": "Optional[str]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "vertical_align", "type": "Optional[str]"}, {"lineNumber": 178, "col_offset": 67, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 184, "col_offset": 61, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "width_name", "type": "Optional[str]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 242, "col_offset": 61, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "fill_color", "type": "Optional[str]"}, {"lineNumber": 268, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "font_names", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "decoration", "type": "Any"}, {"lineNumber": 273, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "weight", "type": "Optional[str]"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "weight", "type": "Optional[str]"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "font_style", "type": "Optional[str]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "font_style", "type": "Optional[str]"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "decoration", "type": "Optional[str]"}, {"lineNumber": 307, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 314, "col_offset": 59, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 319, "col_offset": 55, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "font_names_tmp", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "font_names", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "font_names_tmp", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "font_names", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "size", "type": "Optional[str]"}, {"lineNumber": 350, "col_offset": 58, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "family", "type": "None"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "font_names", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "family", "type": "Optional[int]"}, {"lineNumber": 356, "col_offset": 49, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 365, "col_offset": 52, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "na_rep", "type": "str"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "na_rep", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "df", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "columns", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "float_format", "type": "Optional[str]"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "float_format", "type": "Optional[str]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "index", "type": "bool"}, {"lineNumber": 476, "col_offset": 21, "nodeName": "index", "type": "bool"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "index_label", "type": "Optional[Union[Hashable, Sequence[Optional[Hashable]]]]"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "index_label", "type": "Optional[Union[Hashable, Sequence[Optional[Hashable]]]]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 479, "col_offset": 27, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "inf_rep", "type": "str"}, {"lineNumber": 480, "col_offset": 23, "nodeName": "inf_rep", "type": "str"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "val", "type": "Union[float, Any, str]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 524, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "level_strs", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "level_lengths", "type": "List[Dict[int, int]]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "lnum", "type": "int"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "lnum", "type": "int"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 569, "col_offset": 40, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "gen2", "type": "Tuple[()]"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "names", "type": "Any"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 616, "col_offset": 30, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 627, "col_offset": 11, "nodeName": "index", "type": "bool"}, {"lineNumber": 622, "col_offset": 38, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "index", "type": "bool"}, {"lineNumber": 660, "col_offset": 43, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "xlstyle", "type": "None"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "colidx", "type": "int"}, {"lineNumber": 739, "col_offset": 48, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "cell", "type": "nothing"}, {"lineNumber": 756, "col_offset": 37, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 801, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "formatted_cells", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ExcelCell"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "inherited", "type": "Optional[str]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "inherited", "type": "Dict[str, str]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "inherited", "type": "None"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "compute_css", "type": "pandas.io.formats.css.CSSResolver"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "declarations_str", "type": "str"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "inherited", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "build_xlstyle", "type": "Callable[[Mapping[str, str]], Dict[str, Dict[str, str]]]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "properties", "type": "Dict[str, str]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "remove_none", "type": "Callable[[Dict[str, str]], None]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "out", "type": "Dict[str, Optional[Union[Dict[str, Optional[str]], Dict[str, Optional[Union[bool, int, float, str]]], Dict[str, Any], Dict[str, Dict[str, Optional[str]]], Dict[str, Optional[Union[bool, str]]]]]]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 178, "col_offset": 76, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 184, "col_offset": 70, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "_get_width_name", "type": "Callable[[Optional[str]], Optional[str]]"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "width", "type": "Optional[str]"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "width_name", "type": "Optional[str]"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "width_name", "type": "Optional[str]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "_width_to_float", "type": "Callable[[Optional[str]], float]"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "width_input", "type": "Optional[str]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "width", "type": "float"}, {"lineNumber": 242, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "width", "type": "Optional[str]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "width", "type": "str"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "_pt_to_float", "type": "Callable[[str], float]"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "width", "type": "Optional[str]"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "fill_color", "type": "Optional[str]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "_get_font_names", "type": "Callable[[Mapping[str, str]], Sequence[str]]"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "_get_decoration", "type": "Callable[[Mapping[str, str]], Sequence[str]]"}, {"lineNumber": 275, "col_offset": 42, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 295, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 301, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "decoration", "type": "Optional[str]"}, {"lineNumber": 307, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "decoration", "type": "Sequence[str]"}, {"lineNumber": 314, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 324, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "size", "type": "Optional[str]"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "size", "type": "Optional[str]"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "_pt_to_float", "type": "Callable[[str], float]"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "size", "type": "Optional[str]"}, {"lineNumber": 350, "col_offset": 67, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "family", "type": "Optional[int]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "family", "type": "Optional[int]"}, {"lineNumber": 356, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "val", "type": "Optional[str]"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "_is_hex_color", "type": "Callable[[str], bool]"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "val", "type": "Optional[str]"}, {"lineNumber": 365, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 381, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "lstrip", "type": "Callable[..., str]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "_is_shorthand_color", "type": "Callable[[str], bool]"}, {"lineNumber": 383, "col_offset": 36, "nodeName": "color_string", "type": "str"}, {"lineNumber": 388, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "lstrip", "type": "Callable[..., str]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "styler", "type": "Any"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "style_converter", "type": "Optional[Union[CSSToExcelConverter, Callable[..., Any]]]"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "style_converter", "type": "Optional[Union[CSSToExcelConverter, Callable[..., Any]]]"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "styler", "type": "None"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 462, "col_offset": 11, "nodeName": "cols", "type": "Optional[Sequence[Optional[Hashable]]]"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "df", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "val", "type": "str"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "na_rep", "type": "str"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "nlevels", "type": "Any"}, {"lineNumber": 524, "col_offset": 18, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "format", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "get_level_lengths", "type": "Callable[..., List[Dict[int, int]]]"}, {"lineNumber": 528, "col_offset": 42, "nodeName": "level_strs", "type": "Any"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "index", "type": "bool"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 513, "col_offset": 44, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "_has_aliases", "type": "bool"}, {"lineNumber": 570, "col_offset": 32, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "index", "type": "bool"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "colnames", "type": "Any"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "columns", "type": "Any"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "_has_aliases", "type": "bool"}, {"lineNumber": 569, "col_offset": 49, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 595, "col_offset": 36, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "gen", "type": "Generator[ExcelCell, Any, Any]"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "gen", "type": "Generator[ExcelCell, Any, Any]"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "row", "type": "Union[List[str], List[Union[Any, str]]]"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 614, "col_offset": 31, "nodeName": "gen", "type": "Generator[ExcelCell, Any, Any]"}, {"lineNumber": 614, "col_offset": 36, "nodeName": "gen2", "type": "Union[Generator[ExcelCell, Any, None], Tuple[()]]"}, {"lineNumber": 594, "col_offset": 41, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 617, "col_offset": 22, "nodeName": "index", "type": "Any"}, {"lineNumber": 617, "col_offset": 37, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 616, "col_offset": 39, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "_has_aliases", "type": "bool"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 627, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "index_values", "type": "Any"}, {"lineNumber": 647, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "_has_aliases", "type": "bool"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "index_labels", "type": "Any"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "names", "type": "Any"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 660, "col_offset": 52, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 737, "col_offset": 15, "nodeName": "is_list_like", "type": "Any"}, {"lineNumber": 737, "col_offset": 28, "nodeName": "header", "type": "Any"}, {"lineNumber": 739, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "styler", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "styles", "type": "None"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "styles", "type": "Any"}, {"lineNumber": 743, "col_offset": 21, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 749, "col_offset": 22, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "series", "type": "Any"}, {"lineNumber": 739, "col_offset": 57, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 757, "col_offset": 20, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "val", "type": "nothing"}, {"lineNumber": 756, "col_offset": 46, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 770, "col_offset": 25, "nodeName": "StorageOptions", "type": "Union[Type[Dict[str, Any]], Type[None]]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 801, "col_offset": 18, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 801, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 808, "col_offset": 26, "nodeName": "get_formatted_cells", "type": "Any"}, {"lineNumber": 809, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 809, "col_offset": 22, "nodeName": "writer", "type": "Any"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "ExcelWriter", "type": "Type[pandas.io.excel._base.ExcelWriter]"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "need_save", "type": "bool"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "need_save", "type": "bool"}, {"lineNumber": 830, "col_offset": 15, "nodeName": "need_save", "type": "bool"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "compute_css", "type": "pandas.io.formats.css.CSSResolver"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "inherited", "type": "Optional[str]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "build_alignment", "type": "Callable[[Mapping[str, str]], Dict[str, Optional[Union[bool, str]]]]"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "build_border", "type": "Callable[[Mapping[str, str]], Dict[str, Dict[str, Optional[str]]]]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "build_fill", "type": "Callable[[Mapping[str, str]], Any]"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "build_font", "type": "Callable[[Mapping[str, str]], Dict[str, Optional[Union[bool, int, float, str]]]]"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "build_number_format", "type": "Callable[[Mapping[str, str]], Dict[str, Optional[str]]]"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "v", "type": "str"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "_get_vertical_alignment", "type": "Callable[[Mapping[str, str]], Optional[str]]"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "_get_is_wrap_text", "type": "Callable[[Mapping[str, str]], Optional[bool]]"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "vertical_align", "type": "Optional[str]"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "side", "type": "str"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "width", "type": "Optional[str]"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "style", "type": "Optional[str]"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "width_name", "type": "Optional[str]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "width_name", "type": "Optional[str]"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "width", "type": "float"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "pt_string", "type": "str"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "get", "type": "Callable"}, {"lineNumber": 268, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "font_names", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "_select_font_family", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "font_names", "type": "Any"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "_get_font_size", "type": "Callable[[Mapping[str, str]], Optional[float]]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "_get_is_bold", "type": "Callable[[Mapping[str, str]], Optional[bool]]"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "_get_is_italic", "type": "Callable[[Mapping[str, str]], Optional[bool]]"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "color_to_excel", "type": "Callable[[Optional[str]], Optional[str]]"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "_get_shadow", "type": "Callable[[Mapping[str, str]], Optional[bool]]"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "weight", "type": "Optional[str]"}, {"lineNumber": 301, "col_offset": 36, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "font_style", "type": "Optional[str]"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 365, "col_offset": 34, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "_convert_hex_to_excel", "type": "Callable[[str], str]"}, {"lineNumber": 370, "col_offset": 46, "nodeName": "val", "type": "Optional[str]"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "NAMED_COLORS", "type": "Dict[str, str]"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "color_string", "type": "str"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 384, "col_offset": 46, "nodeName": "upper", "type": "Callable[[], str]"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "upper", "type": "Callable[[], str]"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "color_string", "type": "str"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 453, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 453, "col_offset": 30, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "style_converter", "type": "Optional[Callable[..., Any]]"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "style_converter", "type": "CSSToExcelConverter"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 472, "col_offset": 22, "nodeName": "reindex", "type": "Any"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "is_scalar", "type": "Any"}, {"lineNumber": 496, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "isna", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 498, "col_offset": 13, "nodeName": "is_float", "type": "Any"}, {"lineNumber": 498, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "val", "type": "Union[float, Any, str]"}, {"lineNumber": 506, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "index", "type": "bool"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "_has_aliases", "type": "bool"}, {"lineNumber": 521, "col_offset": 37, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "columns", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 532, "col_offset": 26, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 532, "col_offset": 37, "nodeName": "index", "type": "Any"}, {"lineNumber": 532, "col_offset": 52, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "lnum", "type": "int"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 537, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "names", "type": "Any"}, {"lineNumber": 545, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "v", "type": "str"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 570, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 589, "col_offset": 16, "nodeName": "colindex", "type": "int"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "colname", "type": "Any"}, {"lineNumber": 589, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 589, "col_offset": 47, "nodeName": "colnames", "type": "Union[Sequence[Any], Any]"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 596, "col_offset": 18, "nodeName": "_format_header_mi", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "_format_header_regular", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "gen2", "type": "Generator[ExcelCell, Any, None]"}, {"lineNumber": 613, "col_offset": 16, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 617, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 618, "col_offset": 19, "nodeName": "_format_hierarchical_rows", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 620, "col_offset": 19, "nodeName": "_format_regular_rows", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "columns", "type": "Any"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 647, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 648, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 648, "col_offset": 41, "nodeName": "PeriodIndex", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "index_values", "type": "Any"}, {"lineNumber": 651, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "idxval", "type": "Any"}, {"lineNumber": 651, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 651, "col_offset": 41, "nodeName": "index_values", "type": "Any"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "_generate_body", "type": "Callable[[int], Iterable[ExcelCell]]"}, {"lineNumber": 658, "col_offset": 39, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "index_labels", "type": "Any"}, {"lineNumber": 672, "col_offset": 31, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 678, "col_offset": 56, "nodeName": "merge_cells", "type": "bool"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "level_strs", "type": "Any"}, {"lineNumber": 692, "col_offset": 16, "nodeName": "level_lengths", "type": "List[Dict[int, int]]"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "indexcolvals", "type": "Any"}, {"lineNumber": 732, "col_offset": 19, "nodeName": "_generate_body", "type": "Callable[[int], Iterable[ExcelCell]]"}, {"lineNumber": 732, "col_offset": 39, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 737, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 744, "col_offset": 19, "nodeName": "styles", "type": "Any"}, {"lineNumber": 745, "col_offset": 16, "nodeName": "styles", "type": "None"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 749, "col_offset": 32, "nodeName": "columns", "type": "Any"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 751, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 751, "col_offset": 36, "nodeName": "series", "type": "Any"}, {"lineNumber": 757, "col_offset": 20, "nodeName": "itertools", "type": "module"}, {"lineNumber": 757, "col_offset": 36, "nodeName": "_format_header", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 757, "col_offset": 59, "nodeName": "_format_body", "type": "Callable[[], Iterable[ExcelCell]]"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "cell", "type": "nothing"}, {"lineNumber": 758, "col_offset": 23, "nodeName": "_format_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 42, "nodeName": "val", "type": "Union[float, str]"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "cell", "type": "nothing"}, {"lineNumber": 801, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "max_rows", "type": "Any"}, {"lineNumber": 802, "col_offset": 39, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 802, "col_offset": 50, "nodeName": "max_cols", "type": "Any"}, {"lineNumber": 803, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 808, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "ExcelWriter", "type": "Type[pandas.io.excel._base.ExcelWriter]"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "write_cells", "type": "Any"}, {"lineNumber": 822, "col_offset": 16, "nodeName": "formatted_cells", "type": "Any"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "sheet_name", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 124, "col_offset": 59, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "v", "type": "str"}, {"lineNumber": 144, "col_offset": 67, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "VERTICAL_MAP", "type": "Dict[str, str]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "width", "type": "float"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "pt_string", "type": "str"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "color_to_excel", "type": "Callable[[Optional[str]], Optional[str]]"}, {"lineNumber": 266, "col_offset": 51, "nodeName": "fill_color", "type": "Optional[str]"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 268, "col_offset": 73, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "font_names", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 282, "col_offset": 53, "nodeName": "decoration", "type": "Any"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "decoration", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "get", "type": "Callable"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "BOLD_MAP", "type": "Dict[str, bool]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "ITALIC_MAP", "type": "Dict[str, bool]"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "decoration", "type": "Optional[str]"}, {"lineNumber": 314, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "search", "type": "Callable"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "FAMILY_MAP", "type": "Dict[str, int]"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 373, "col_offset": 37, "nodeName": "val", "type": "Optional[str]"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "color_string", "type": "str"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "code", "type": "str"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "code", "type": "str"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "CSSToExcelConverter", "type": "Type[CSSToExcelConverter]"}, {"lineNumber": 465, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 468, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 468, "col_offset": 64, "nodeName": "cols", "type": "Optional[Sequence[Optional[Hashable]]]"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 472, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 472, "col_offset": 41, "nodeName": "cols", "type": "Optional[Sequence[Optional[Hashable]]]"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "missing", "type": "module"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "isposinf_scalar", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "val", "type": "Any"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 500, "col_offset": 22, "nodeName": "inf_rep", "type": "str"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 521, "col_offset": 37, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 532, "col_offset": 37, "nodeName": "df", "type": "Any"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "columns", "type": "Any"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 546, "col_offset": 20, "nodeName": "level_lengths", "type": "List[Dict[int, int]]"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "levels", "type": "Any"}, {"lineNumber": 546, "col_offset": 51, "nodeName": "codes", "type": "Any"}, {"lineNumber": 548, "col_offset": 25, "nodeName": "take", "type": "Any"}, {"lineNumber": 548, "col_offset": 37, "nodeName": "level_codes", "type": "Any"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 549, "col_offset": 23, "nodeName": "span_val", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "items", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 575, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 575, "col_offset": 45, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "header", "type": "Sequence[Any]"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "colnames", "type": "Sequence[Any]"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "header", "type": "Sequence[Any]"}, {"lineNumber": 596, "col_offset": 18, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 605, "col_offset": 44, "nodeName": "map", "type": "Callable"}, {"lineNumber": 605, "col_offset": 67, "nodeName": "row", "type": "Union[List[str], List[Union[Any, str]]]"}, {"lineNumber": 613, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 617, "col_offset": 22, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 618, "col_offset": 19, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 620, "col_offset": 19, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 630, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 633, "col_offset": 30, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 636, "col_offset": 30, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 643, "col_offset": 31, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 647, "col_offset": 27, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 648, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 649, "col_offset": 31, "nodeName": "to_timestamp", "type": "Any"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 672, "col_offset": 31, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "columns", "type": "Any"}, {"lineNumber": 678, "col_offset": 40, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 678, "col_offset": 56, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 682, "col_offset": 15, "nodeName": "any_not_none", "type": "Callable[..., bool]"}, {"lineNumber": 682, "col_offset": 51, "nodeName": "header", "type": "Union[Sequence[Optional[Hashable]], bool]"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "cidx", "type": "int"}, {"lineNumber": 684, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 684, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 684, "col_offset": 44, "nodeName": "index_labels", "type": "Any"}, {"lineNumber": 689, "col_offset": 29, "nodeName": "format", "type": "Any"}, {"lineNumber": 692, "col_offset": 32, "nodeName": "get_level_lengths", "type": "Callable[..., List[Dict[int, int]]]"}, {"lineNumber": 692, "col_offset": 50, "nodeName": "level_strs", "type": "Any"}, {"lineNumber": 694, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 695, "col_offset": 20, "nodeName": "level_lengths", "type": "List[Dict[int, int]]"}, {"lineNumber": 695, "col_offset": 35, "nodeName": "levels", "type": "Any"}, {"lineNumber": 695, "col_offset": 57, "nodeName": "codes", "type": "Any"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "values", "type": "Any"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 722, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 732, "col_offset": 19, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 743, "col_offset": 21, "nodeName": "_compute", "type": "Any"}, {"lineNumber": 749, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 752, "col_offset": 19, "nodeName": "styles", "type": "Any"}, {"lineNumber": 753, "col_offset": 20, "nodeName": "xlstyle", "type": "Any"}, {"lineNumber": 757, "col_offset": 36, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 757, "col_offset": 59, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 758, "col_offset": 23, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 758, "col_offset": 42, "nodeName": "cell", "type": "nothing"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 31, "nodeName": "engine", "type": "Any"}, {"lineNumber": 816, "col_offset": 55, "nodeName": "storage_options", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 824, "col_offset": 25, "nodeName": "startrow", "type": "Any"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "startcol", "type": "Any"}, {"lineNumber": 826, "col_offset": 29, "nodeName": "freeze_panes", "type": "Any"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "close", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "d", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "d", "type": "Dict[str, str]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "v", "type": "str"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 82, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 319, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 321, "col_offset": 50, "nodeName": "props", "type": "Mapping[str, str]"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "font_names", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 350, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "self", "type": "CSSToExcelConverter"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 465, "col_offset": 48, "nodeName": "columns", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 468, "col_offset": 44, "nodeName": "columns", "type": "Any"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "missing", "type": "module"}, {"lineNumber": 500, "col_offset": 22, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "isneginf_scalar", "type": "Any"}, {"lineNumber": 501, "col_offset": 41, "nodeName": "val", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 532, "col_offset": 37, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "columns", "type": "Any"}, {"lineNumber": 546, "col_offset": 51, "nodeName": "columns", "type": "Any"}, {"lineNumber": 548, "col_offset": 25, "nodeName": "levels", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "spans", "type": "Any"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "span_val", "type": "Any"}, {"lineNumber": 563, "col_offset": 44, "nodeName": "level_strs", "type": "Any"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "map", "type": "Callable"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "pprint_thing", "type": "Callable[..., str]"}, {"lineNumber": 564, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 565, "col_offset": 32, "nodeName": "lnum", "type": "int"}, {"lineNumber": 565, "col_offset": 57, "nodeName": "v", "type": "str"}, {"lineNumber": 565, "col_offset": 60, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 576, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 581, "col_offset": 23, "nodeName": "header", "type": "Sequence[Any]"}, {"lineNumber": 581, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 581, "col_offset": 43, "nodeName": "columns", "type": "Any"}, {"lineNumber": 582, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 590, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 591, "col_offset": 20, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 591, "col_offset": 59, "nodeName": "colname", "type": "Any"}, {"lineNumber": 591, "col_offset": 68, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 602, "col_offset": 55, "nodeName": "names", "type": "Any"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 631, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 631, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 631, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 631, "col_offset": 60, "nodeName": "Index", "type": "Any"}, {"lineNumber": 633, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 635, "col_offset": 38, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 635, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 636, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 638, "col_offset": 30, "nodeName": "names", "type": "Any"}, {"lineNumber": 643, "col_offset": 31, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 644, "col_offset": 56, "nodeName": "index_label", "type": "Any"}, {"lineNumber": 644, "col_offset": 69, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 648, "col_offset": 26, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 649, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 652, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 652, "col_offset": 58, "nodeName": "idxval", "type": "Any"}, {"lineNumber": 652, "col_offset": 66, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 670, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 670, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 670, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 670, "col_offset": 60, "nodeName": "Index", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 682, "col_offset": 15, "nodeName": "com", "type": "module"}, {"lineNumber": 682, "col_offset": 33, "nodeName": "index_labels", "type": "Any"}, {"lineNumber": 682, "col_offset": 51, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 689, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 695, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 695, "col_offset": 57, "nodeName": "index", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "take", "type": "Any"}, {"lineNumber": 699, "col_offset": 24, "nodeName": "level_codes", "type": "Any"}, {"lineNumber": 704, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 704, "col_offset": 27, "nodeName": "span_val", "type": "Any"}, {"lineNumber": 704, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 705, "col_offset": 24, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 722, "col_offset": 41, "nodeName": "index", "type": "Any"}, {"lineNumber": 723, "col_offset": 24, "nodeName": "idx", "type": "int"}, {"lineNumber": 723, "col_offset": 29, "nodeName": "indexcolval", "type": "Any"}, {"lineNumber": 723, "col_offset": 44, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 723, "col_offset": 54, "nodeName": "indexcolvals", "type": "Any"}, {"lineNumber": 743, "col_offset": 21, "nodeName": "styler", "type": "Any"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 750, "col_offset": 37, "nodeName": "colidx", "type": "int"}, {"lineNumber": 753, "col_offset": 30, "nodeName": "style_converter", "type": "Any"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 754, "col_offset": 73, "nodeName": "val", "type": "Any"}, {"lineNumber": 754, "col_offset": 78, "nodeName": "xlstyle", "type": "Any"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 124, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 144, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "Union", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "Union", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 465, "col_offset": 48, "nodeName": "df", "type": "Any"}, {"lineNumber": 468, "col_offset": 44, "nodeName": "df", "type": "Any"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "missing", "type": "module"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "float_format", "type": "Any"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "val", "type": "float"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "df", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "lnum", "type": "int"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 541, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 542, "col_offset": 26, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 551, "col_offset": 26, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 565, "col_offset": 60, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 576, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 581, "col_offset": 23, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 581, "col_offset": 43, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 591, "col_offset": 20, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 591, "col_offset": 37, "nodeName": "colindex", "type": "int"}, {"lineNumber": 591, "col_offset": 48, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 591, "col_offset": 68, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 602, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 602, "col_offset": 55, "nodeName": "index", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "colindex", "type": "int"}, {"lineNumber": 611, "col_offset": 34, "nodeName": "val", "type": "Union[str, Any]"}, {"lineNumber": 611, "col_offset": 41, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 611, "col_offset": 51, "nodeName": "row", "type": "Union[List[str], List[Union[Any, str]]]"}, {"lineNumber": 631, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 638, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 644, "col_offset": 69, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 649, "col_offset": 31, "nodeName": "df", "type": "Any"}, {"lineNumber": 652, "col_offset": 32, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 652, "col_offset": 50, "nodeName": "idx", "type": "int"}, {"lineNumber": 652, "col_offset": 66, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 670, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 685, "col_offset": 57, "nodeName": "cidx", "type": "int"}, {"lineNumber": 685, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 685, "col_offset": 69, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 689, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 695, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 695, "col_offset": 57, "nodeName": "df", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "levels", "type": "Any"}, {"lineNumber": 700, "col_offset": 35, "nodeName": "_can_hold_na", "type": "Any"}, {"lineNumber": 701, "col_offset": 35, "nodeName": "_na_value", "type": "Any"}, {"lineNumber": 704, "col_offset": 39, "nodeName": "spans", "type": "Any"}, {"lineNumber": 705, "col_offset": 47, "nodeName": "span_val", "type": "Any"}, {"lineNumber": 722, "col_offset": 41, "nodeName": "df", "type": "Any"}, {"lineNumber": 743, "col_offset": 21, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 753, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 753, "col_offset": 51, "nodeName": "join", "type": "Callable"}, {"lineNumber": 754, "col_offset": 32, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 754, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 754, "col_offset": 53, "nodeName": "colidx", "type": "int"}, {"lineNumber": 754, "col_offset": 62, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 384, "col_offset": 48, "nodeName": "code", "type": "str"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "Index", "type": "Any"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "cols", "type": "Optional[Sequence[Optional[Hashable]]]"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "Index", "type": "Any"}, {"lineNumber": 468, "col_offset": 25, "nodeName": "cols", "type": "Optional[Sequence[Optional[Hashable]]]"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 542, "col_offset": 26, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "lnum", "type": "int"}, {"lineNumber": 555, "col_offset": 30, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 565, "col_offset": 38, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 565, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 576, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 602, "col_offset": 55, "nodeName": "df", "type": "Any"}, {"lineNumber": 638, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 649, "col_offset": 31, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 652, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 685, "col_offset": 69, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 689, "col_offset": 29, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 695, "col_offset": 35, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 695, "col_offset": 57, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 700, "col_offset": 35, "nodeName": "levels", "type": "Any"}, {"lineNumber": 701, "col_offset": 35, "nodeName": "levels", "type": "Any"}, {"lineNumber": 706, "col_offset": 30, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 722, "col_offset": 41, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 724, "col_offset": 30, "nodeName": "ExcelCell", "type": "Type[ExcelCell]"}, {"lineNumber": 753, "col_offset": 60, "nodeName": "styles", "type": "Any"}, {"lineNumber": 754, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "code", "type": "str"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "code", "type": "str"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "float_format", "type": "Any"}, {"lineNumber": 504, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 555, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 556, "col_offset": 43, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 556, "col_offset": 35, "nodeName": "lnum", "type": "int"}, {"lineNumber": 558, "col_offset": 56, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 576, "col_offset": 36, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 602, "col_offset": 55, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 638, "col_offset": 30, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 708, "col_offset": 32, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 726, "col_offset": 32, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 727, "col_offset": 32, "nodeName": "indexcolval", "type": "Any"}, {"lineNumber": 728, "col_offset": 34, "nodeName": "header_style", "type": "Dict[str, Union[Dict[str, str], Dict[str, bool]]]"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 553, "col_offset": 28, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 554, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 558, "col_offset": 44, "nodeName": "span_val", "type": "Any"}, {"lineNumber": 707, "col_offset": 32, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 707, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 709, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 713, "col_offset": 35, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 716, "col_offset": 48, "nodeName": "spans_multiple_cells", "type": "Any"}, {"lineNumber": 716, "col_offset": 37, "nodeName": "gcolidx", "type": "int"}, {"lineNumber": 725, "col_offset": 32, "nodeName": "rowcounter", "type": "int"}, {"lineNumber": 725, "col_offset": 50, "nodeName": "idx", "type": "int"}, {"lineNumber": 728, "col_offset": 34, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 753, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 753, "col_offset": 70, "nodeName": "colidx", "type": "int"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "coloffset", "type": "int"}, {"lineNumber": 558, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 707, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}, {"lineNumber": 709, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 725, "col_offset": 32, "nodeName": "self", "type": "ExcelFormatter"}]