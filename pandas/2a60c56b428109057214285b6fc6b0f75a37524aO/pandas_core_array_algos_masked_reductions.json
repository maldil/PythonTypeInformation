[{"lineNumber": 104, "col_offset": 0, "nodeName": "min", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "max", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "np_version_under1p17", "type": "bool"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 57, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "_sumprod", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 65, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "_sumprod", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "prod", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 69, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "subset", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "_minmax", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "min", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "_minmax", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "max", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "NA", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "check_below_min_count", "type": "Callable[[Tuple[int, ...], Optional[numpy.ndarray], int], bool]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "min_count", "type": "int"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "NA", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 60, "col_offset": 67, "nodeName": "min_count", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 68, "col_offset": 68, "nodeName": "min_count", "type": "int"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "NA", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "subset", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "NA", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "skipna", "type": "bool"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "check_below_min_count", "type": "Callable[[Tuple[int, ...], Optional[numpy.ndarray], int], bool]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 42, "col_offset": 67, "nodeName": "min_count", "type": "int"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "libmissing", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "libmissing", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "size", "type": "int"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "libmissing", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "subset", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "libmissing", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "mask", "type": "numpy.ndarray"}]