[{"lineNumber": 127, "col_offset": 0, "nodeName": "test_repr", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_arrow_extension_type", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "test_arrow_array", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "test_arrow_array_missing", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "pyarrow_skip", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "result", "type": "str"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "skip_if_no", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "p2", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "p3", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "left", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "right", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "vals", "type": "List[Union[Dict[str, float], Dict[str, None]]]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "table", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "table2", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "table", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "table", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tuples", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ser", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "match", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "left_right_dtypes", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "nan", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "expected_left", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "expected_right", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "from_tuples", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "arr", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "result", "type": "str"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "expected", "type": "str"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "td", "type": "module"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "closed", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "p2", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "closed", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "closed", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "subtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 199, "col_offset": 10, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "arr", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "closed", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "closed", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "subtype", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "left", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "right", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "from_pandas", "type": "Any"}, {"lineNumber": 219, "col_offset": 42, "nodeName": "vals", "type": "List[Union[Dict[str, float], Dict[str, None]]]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "table", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "to_pandas", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "IntervalDtype", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "concat_tables", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "to_pandas", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "table", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "replace_schema_metadata", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "to_pandas", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "IntervalDtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "nan", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_numpy_array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "set_closed", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "new_closed", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_extension_array_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "expected", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "shift", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "from_tuples", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_interval_array_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "shift", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "take", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_interval_array_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "shift", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "take", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_interval_array_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "right", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "from_arrays", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "left", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "Index", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "Index", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "from_arrays", "type": "Any"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "expected_left", "type": "Any"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "expected_right", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_extension_array_equal", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "result", "type": "Any"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "expected", "type": "Any"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "int64", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "int64", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "int64", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "p3", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "p2", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "interval_range", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "pa", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "int64", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "pa", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "pa", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "type", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 186, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 199, "col_offset": 10, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "pa", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "arr", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "pa", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "pa", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "StructArray", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "pd", "type": "module"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "pa", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "table", "type": "Any"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "pd", "type": "module"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "pa", "type": "Any"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "table", "type": "Any"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "table", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "table2", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "pd", "type": "module"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "pd", "type": "module"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "pa", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "table", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "schema", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "table", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "pd", "type": "module"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "left", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "from_tuples", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "tuples", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "closed", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 63, "nodeName": "new_closed", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "pd", "type": "module"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "from_breaks", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "where", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "subtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "NaT", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "subtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "pa", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "pa", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "pa", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "p1", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "p3", "type": "pandas.core.arrays._arrow_utils.ArrowIntervalType"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "pd", "type": "module"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "pa", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "pa", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "pa", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 186, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "pa", "type": "Any"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "pa", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "pa", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "pa", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "table", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "closed", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "closed", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "IntervalArray", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "match", "type": "str"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ser", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "other", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "nan", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "nan", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "pd", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "pd", "type": "module"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "_na_value", "type": "Any"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "_na_value", "type": "Any"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "ArrowIntervalType", "type": "Type[pandas.core.arrays._arrow_utils.ArrowIntervalType]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "storage", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "table", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "msg", "type": "str"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "msg", "type": "str"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "left", "type": "Any"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "left", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "right", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "right", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "pa", "type": "Any"}]