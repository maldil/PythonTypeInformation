[{"lineNumber": 30, "col_offset": 0, "nodeName": "tz_replacer", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "np_datetime64_compat", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "np_array_datetime64_compat", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "_np_version", "type": "Any"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "np_version_under1p17", "type": "bool"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "np_version_under1p18", "type": "bool"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "_np_version_under1p19", "type": "bool"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "_np_version_under1p20", "type": "bool"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "is_numpy_dev", "type": "bool"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "_min_numpy_ver", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "_tz_regex", "type": "Pattern[str]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "_np_version", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 19, "col_offset": 3, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 19, "col_offset": 10, "nodeName": "_min_numpy_ver", "type": "str"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 11, "col_offset": 30, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "_nlv", "type": "distutils.version.LooseVersion"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "tz_replacer", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "datetime64", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "arr", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "arr", "type": "Union[Any, List[Any]]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "tz_replacer", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "search", "type": "Callable"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "arr", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "tz_replacer", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "arr", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "_tz_regex", "type": "Pattern[str]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "bytes", "type": "Type[bytes]"}]