[{"lineNumber": 26, "col_offset": 3, "nodeName": "TYPE_CHECKING", "type": "bool"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "PandasDelegate", "type": "Type[pandas.core.accessor.PandasDelegate]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "PandasObject", "type": "Type[pandas.core.base.PandasObject]"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "NoNewAttributesMixin", "type": "Type[pandas.core.base.NoNewAttributesMixin]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "Properties", "type": "Type[Properties]"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "Properties", "type": "Type[Properties]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "Properties", "type": "Type[Properties]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "DatetimeProperties", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "TimedeltaProperties", "type": "Any"}, {"lineNumber": 463, "col_offset": 45, "nodeName": "PeriodProperties", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "_hidden_attrs", "type": "FrozenSet[str]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "week", "type": "property"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "weekofyear", "type": "property"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "_hidden_attrs", "type": "FrozenSet[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "orig", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "inferred_freq", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "week_series", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "week", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "hasnans", "type": "Any"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "inferred_freq", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "PandasObject", "type": "Type[pandas.core.base.PandasObject]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Properties"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Properties"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Properties"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_freeze", "type": "Callable[[], None]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "Properties"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "is_datetime64_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "_get_values", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "orig", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "__finalize__", "type": "Any"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "_get_values", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "method", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "__finalize__", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "to_pydatetime", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 261, "col_offset": 58, "nodeName": "index", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "week_series", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "week_series", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "to_pytimedelta", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "orig", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "is_datetime64_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 485, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "ABCSeries", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Properties"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "DatetimeIndex", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "is_datetime64tz_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "self", "type": "Properties"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "is_integer_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "self", "type": "Properties"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "orig", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "self", "type": "Properties"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "self", "type": "Properties"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "is_list_like", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Properties"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 261, "col_offset": 58, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "isocalendar", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "week_series", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 471, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "ABCSeries", "type": "Any"}, {"lineNumber": 472, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "is_categorical_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 476, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "_constructor", "type": "Any"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 485, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "DatetimeProperties", "type": "Any"}, {"lineNumber": 486, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 486, "col_offset": 44, "nodeName": "orig", "type": "Any"}, {"lineNumber": 487, "col_offset": 13, "nodeName": "is_datetime64tz_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 487, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "DatetimeIndex", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "is_timedelta64_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "is_list_like", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "self", "type": "Properties"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "self", "type": "Properties"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "Series", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "Series", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "isocalendar", "type": "Any"}, {"lineNumber": 261, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "week_series", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "orig", "type": "Any"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 487, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "DatetimeProperties", "type": "Any"}, {"lineNumber": 488, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 488, "col_offset": 44, "nodeName": "orig", "type": "Any"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "is_timedelta64_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 489, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 56, "nodeName": "self", "type": "Properties"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "TimedeltaIndex", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "is_period_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "index", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "index", "type": "Any"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "components", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "orig", "type": "Any"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "categories", "type": "Any"}, {"lineNumber": 489, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "TimedeltaProperties", "type": "Any"}, {"lineNumber": 490, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 490, "col_offset": 45, "nodeName": "orig", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "is_period_dtype", "type": "Callable[[Any], bool]"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "self", "type": "Properties"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "self", "type": "Properties"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "_parent", "type": "Any"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "self", "type": "Properties"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "_values", "type": "Any"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "PeriodProperties", "type": "Any"}, {"lineNumber": 492, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "self", "type": "Properties"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "self", "type": "Properties"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "_get_values", "type": "Any"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "orig", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "Any"}]