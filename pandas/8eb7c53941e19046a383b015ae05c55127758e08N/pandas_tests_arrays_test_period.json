[{"lineNumber": 18, "col_offset": 0, "nodeName": "test_registered", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "test_asi8", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_take_raises", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_fillna_raises", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_fillna_copies", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_setitem_raises_incompatible_freq", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_setitem_raises_length", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_setitem_raises_type", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_sub_period", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_repr_small", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "test_repr_large", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "asi8", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "other", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "other", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "ser", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "cond", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "result", "type": "str"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "result", "type": "str"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "PeriodDtype", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "PeriodDtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "assert_numpy_array_equal", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "fillna", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_period_array_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "arr", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "PeriodArray", "type": "Any"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "Period", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "Series", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "arr", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "result", "type": "str"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "expected", "type": "str"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "arr", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "result", "type": "str"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "expected", "type": "str"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "registry", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "registry", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "iNaT", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "IncompatibleFrequency", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "take", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "take", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "fillna", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "arr", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "Period", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "IncompatibleFrequency", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "Period", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "IncompatibleFrequency", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "pd", "type": "module"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "IncompatibleFrequency", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "other", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "pd", "type": "module"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "period_array", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "IncompatibleFrequency", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "where", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "cond", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "msg", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "arr", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "pd", "type": "module"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "pd", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "Period", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "ser", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "Period", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "pd", "type": "module"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "pd", "type": "module"}]