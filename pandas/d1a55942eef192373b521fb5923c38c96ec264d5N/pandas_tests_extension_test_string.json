[{"lineNumber": 41, "col_offset": 0, "nodeName": "data", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "data_missing", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "data_for_sorting", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "data_missing_for_sorting", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "na_value", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "data_for_grouping", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "BaseDtypeTests", "type": "Type[pandas.tests.extension.base.dtype.BaseDtypeTests]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "BaseInterfaceTests", "type": "Type[pandas.tests.extension.base.interface.BaseInterfaceTests]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "BaseConstructorsTests", "type": "Type[pandas.tests.extension.base.constructors.BaseConstructorsTests]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "BaseReshapingTests", "type": "Type[pandas.tests.extension.base.reshaping.BaseReshapingTests]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "BaseGetitemTests", "type": "Type[pandas.tests.extension.base.getitem.BaseGetitemTests]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "BaseSetitemTests", "type": "Type[pandas.tests.extension.base.setitem.BaseSetitemTests]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "BaseMissingTests", "type": "Type[pandas.tests.extension.base.missing.BaseMissingTests]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "BaseNoReduceTests", "type": "Type[pandas.tests.extension.base.reduce.BaseNoReduceTests]"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "BaseMethodsTests", "type": "Type[pandas.tests.extension.base.methods.BaseMethodsTests]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "BaseCastingTests", "type": "Type[pandas.tests.extension.base.casting.BaseCastingTests]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "BaseComparisonOpsTests", "type": "Type[pandas.tests.extension.base.ops.BaseComparisonOpsTests]"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "BaseParsingTests", "type": "Type[pandas.tests.extension.base.io.BaseParsingTests]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "BasePrintingTests", "type": "Type[pandas.tests.extension.base.printing.BasePrintingTests]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "BaseGroupbyTests", "type": "Type[pandas.tests.extension.base.groupby.BaseGroupbyTests]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "strings", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "NA", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "base", "type": "module"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "base", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "base", "type": "module"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "choice", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "strings", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "_from_sequence", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "strings", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "_from_sequence", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "_from_sequence", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "_from_sequence", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "pd", "type": "module"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "_from_sequence", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "all_numeric_reductions", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "all_compare_operators", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "strings", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "strings", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "choice", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "NA", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "NA", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "NA", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "NA", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "ArrowStringDtype", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "mark", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "test_view", "type": "Callable[[Any], None]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "ArrowStringDtype", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "mark", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "test_transpose", "type": "Callable[[Any], None]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "ArrowStringDtype", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "mark", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "test_setitem_preserves_views", "type": "Callable[[Any], None]"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "test_value_counts", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "dropna", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "other", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_compare_other", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "string", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "construct_array_type", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "construct_array_type", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "pd", "type": "module"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "construct_array_type", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "construct_array_type", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "pd", "type": "module"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "construct_array_type", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "pd", "type": "module"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "pd", "type": "module"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "add_marker", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "mark", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "add_marker", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "mark", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "add_marker", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "mark", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "pd", "type": "module"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestComparisonOps"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "pd", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestComparisonOps"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "string", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "mark", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "mark", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "mark", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "skipna", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "other", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "request", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "request", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "request", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "astype", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "s", "type": "Any"}]