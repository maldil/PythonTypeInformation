[{"lineNumber": 26, "col_offset": 0, "nodeName": "dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "data", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "data_missing", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "data_for_sorting", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "data_missing_for_sorting", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "data_for_grouping", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "na_cmp", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "na_value", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "BaseDtypeTests", "type": "Type[pandas.tests.extension.base.dtype.BaseDtypeTests]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "BaseConstructorsTests", "type": "Type[pandas.tests.extension.base.constructors.BaseConstructorsTests]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "BaseGetitemTests", "type": "Type[pandas.tests.extension.base.getitem.BaseGetitemTests]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "BaseMethodsTests", "type": "Type[pandas.tests.extension.base.methods.BaseMethodsTests]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "BaseInterfaceTests", "type": "Type[pandas.tests.extension.base.interface.BaseInterfaceTests]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "BaseArithmeticOpsTests", "type": "Type[pandas.tests.extension.base.ops.BaseArithmeticOpsTests]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "BaseCastingTests", "type": "Type[pandas.tests.extension.base.casting.BaseCastingTests]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "BaseComparisonOpsTests", "type": "Type[pandas.tests.extension.base.ops.BaseComparisonOpsTests]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "BaseMissingTests", "type": "Type[pandas.tests.extension.base.missing.BaseMissingTests]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "BaseReshapingTests", "type": "Type[pandas.tests.extension.base.reshaping.BaseReshapingTests]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "BaseSetitemTests", "type": "Type[pandas.tests.extension.base.setitem.BaseSetitemTests]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "BaseGroupbyTests", "type": "Type[pandas.tests.extension.base.groupby.BaseGroupbyTests]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "BaseDatetimeTests", "type": "Type[BaseDatetimeTests]"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "BasePrintingTests", "type": "Type[pandas.tests.extension.base.printing.BasePrintingTests]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "data", "type": "pandas.core.arrays.datetimes.DatetimeArray"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "data", "type": "pandas.core.arrays.datetimes.DatetimeArray"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "na", "type": "str"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "cmp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "NaT", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "base", "type": "module"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "base", "type": "module"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "base", "type": "module"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "base", "type": "module"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "implements", "type": "Set[str]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "base", "type": "module"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "base", "type": "module"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "base", "type": "module"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "DatetimeTZDtype", "type": "Type[pandas.core.dtypes.base.ExtensionDtype]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "pd", "type": "module"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "tz", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "dtype", "type": "pandas.core.dtypes.base.ExtensionDtype"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "param", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 33, "col_offset": 80, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 76, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 80, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "pd", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 76, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "implements", "type": "Set[str]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "implements", "type": "Set[str]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "implements", "type": "Set[str]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "test_concat_mixed_dtypes", "type": "Callable[[Any], None]"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "DatetimeTZDtype", "type": "Type[pandas.core.dtypes.base.ExtensionDtype]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "_from_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "from_product", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "obj", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "ser", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "ser", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "names", "type": "List[Optional[str]]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "request", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "pd", "type": "module"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "tz", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "c", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "na", "type": "str"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "na", "type": "str"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "NaT", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "test_array_interface", "type": "Callable[[Any], None]"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "check_opname", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "test_arith_frame_with_scalar", "type": "Any"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "Series", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "check_opname", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "test_arith_series_with_scalar", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "pd", "type": "module"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "Series", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "check_opname", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "test_arith_series_with_scalar", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "all_arithmetic_operators", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "DatetimeArray", "type": "Type[pandas.core.arrays.datetimes.DatetimeArray]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "dtype", "type": "pandas.core.dtypes.base.ExtensionDtype"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "Series", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "columns", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "columns", "type": "Any"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "ser", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "pd", "type": "module"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "pd", "type": "module"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "pd", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "msg", "type": "str"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "pd", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "TestArithmeticOps"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "pd", "type": "module"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "pd", "type": "module"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "index", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "pd", "type": "module"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "pd", "type": "module"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "index", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "pd", "type": "module"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "take", "type": "Any"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "take", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "Index", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "take", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "take", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "take", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "take", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "Index", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "pd", "type": "module"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "pd", "type": "module"}]