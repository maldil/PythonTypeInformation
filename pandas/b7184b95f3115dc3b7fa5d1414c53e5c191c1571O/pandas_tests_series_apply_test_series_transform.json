[{"lineNumber": 16, "col_offset": 0, "nodeName": "test_transform_groupby_kernel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_transform_dictlike", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "test_transform_wont_agg", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_transform_axis_1_raises", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_transform_nested_renamer", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "series_kernels", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "x", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "args", "type": "Union[List[float], List[nothing]]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "ones", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "match", "type": "str"}, {"lineNumber": 12, "col_offset": 10, "nodeName": "x", "type": "str"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 22, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "op", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "names", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "transformation_kernels", "type": "FrozenSet[str]"}, {"lineNumber": 12, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "op", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 58, "nodeName": "args", "type": "Union[List[float], List[nothing]]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "args", "type": "Union[List[float], List[nothing]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "errstate", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "transform", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "ops", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "errstate", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "box", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "tm", "type": "module"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "SpecificationError", "type": "Type[pandas.core.base.SpecificationError]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tm", "type": "module"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "abs", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "errstate", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "match", "type": "str"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "op", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "ops", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "abs", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "string_series", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "np", "type": "module"}]